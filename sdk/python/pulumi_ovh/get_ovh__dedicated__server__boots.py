# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'GetOvh_Dedicated_Server_BootsResult',
    'AwaitableGetOvh_Dedicated_Server_BootsResult',
    'get_ovh__dedicated__server__boots',
    'get_ovh__dedicated__server__boots_output',
]

@pulumi.output_type
class GetOvh_Dedicated_Server_BootsResult:
    """
    A collection of values returned by getOvh_Dedicated_Server_Boots.
    """
    def __init__(__self__, boot_type=None, id=None, kernel=None, results=None, service_name=None):
        if boot_type and not isinstance(boot_type, str):
            raise TypeError("Expected argument 'boot_type' to be a str")
        pulumi.set(__self__, "boot_type", boot_type)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if kernel and not isinstance(kernel, str):
            raise TypeError("Expected argument 'kernel' to be a str")
        pulumi.set(__self__, "kernel", kernel)
        if results and not isinstance(results, list):
            raise TypeError("Expected argument 'results' to be a list")
        pulumi.set(__self__, "results", results)
        if service_name and not isinstance(service_name, str):
            raise TypeError("Expected argument 'service_name' to be a str")
        pulumi.set(__self__, "service_name", service_name)

    @property
    @pulumi.getter(name="bootType")
    def boot_type(self) -> Optional[str]:
        return pulumi.get(self, "boot_type")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def kernel(self) -> Optional[str]:
        return pulumi.get(self, "kernel")

    @property
    @pulumi.getter
    def results(self) -> Sequence[int]:
        return pulumi.get(self, "results")

    @property
    @pulumi.getter(name="serviceName")
    def service_name(self) -> str:
        return pulumi.get(self, "service_name")


class AwaitableGetOvh_Dedicated_Server_BootsResult(GetOvh_Dedicated_Server_BootsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetOvh_Dedicated_Server_BootsResult(
            boot_type=self.boot_type,
            id=self.id,
            kernel=self.kernel,
            results=self.results,
            service_name=self.service_name)


def get_ovh__dedicated__server__boots(boot_type: Optional[str] = None,
                                      kernel: Optional[str] = None,
                                      service_name: Optional[str] = None,
                                      opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetOvh_Dedicated_Server_BootsResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['bootType'] = boot_type
    __args__['kernel'] = kernel
    __args__['serviceName'] = service_name
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('ovh:index/getOvh_Dedicated_Server_Boots:getOvh_Dedicated_Server_Boots', __args__, opts=opts, typ=GetOvh_Dedicated_Server_BootsResult).value

    return AwaitableGetOvh_Dedicated_Server_BootsResult(
        boot_type=__ret__.boot_type,
        id=__ret__.id,
        kernel=__ret__.kernel,
        results=__ret__.results,
        service_name=__ret__.service_name)


@_utilities.lift_output_func(get_ovh__dedicated__server__boots)
def get_ovh__dedicated__server__boots_output(boot_type: Optional[pulumi.Input[Optional[str]]] = None,
                                             kernel: Optional[pulumi.Input[Optional[str]]] = None,
                                             service_name: Optional[pulumi.Input[str]] = None,
                                             opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetOvh_Dedicated_Server_BootsResult]:
    """
    Use this data source to access information about an existing resource.
    """
    ...
