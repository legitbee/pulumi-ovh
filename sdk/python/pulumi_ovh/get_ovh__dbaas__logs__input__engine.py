# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'GetOvh_Dbaas_Logs_Input_EngineResult',
    'AwaitableGetOvh_Dbaas_Logs_Input_EngineResult',
    'get_ovh__dbaas__logs__input__engine',
    'get_ovh__dbaas__logs__input__engine_output',
]

@pulumi.output_type
class GetOvh_Dbaas_Logs_Input_EngineResult:
    """
    A collection of values returned by getOvh_Dbaas_Logs_Input_Engine.
    """
    def __init__(__self__, id=None, is_deprecated=None, name=None, version=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if is_deprecated and not isinstance(is_deprecated, bool):
            raise TypeError("Expected argument 'is_deprecated' to be a bool")
        pulumi.set(__self__, "is_deprecated", is_deprecated)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if version and not isinstance(version, str):
            raise TypeError("Expected argument 'version' to be a str")
        pulumi.set(__self__, "version", version)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="isDeprecated")
    def is_deprecated(self) -> bool:
        return pulumi.get(self, "is_deprecated")

    @property
    @pulumi.getter
    def name(self) -> str:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def version(self) -> str:
        return pulumi.get(self, "version")


class AwaitableGetOvh_Dbaas_Logs_Input_EngineResult(GetOvh_Dbaas_Logs_Input_EngineResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetOvh_Dbaas_Logs_Input_EngineResult(
            id=self.id,
            is_deprecated=self.is_deprecated,
            name=self.name,
            version=self.version)


def get_ovh__dbaas__logs__input__engine(is_deprecated: Optional[bool] = None,
                                        name: Optional[str] = None,
                                        version: Optional[str] = None,
                                        opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetOvh_Dbaas_Logs_Input_EngineResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['isDeprecated'] = is_deprecated
    __args__['name'] = name
    __args__['version'] = version
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('ovh:index/getOvh_Dbaas_Logs_Input_Engine:getOvh_Dbaas_Logs_Input_Engine', __args__, opts=opts, typ=GetOvh_Dbaas_Logs_Input_EngineResult).value

    return AwaitableGetOvh_Dbaas_Logs_Input_EngineResult(
        id=__ret__.id,
        is_deprecated=__ret__.is_deprecated,
        name=__ret__.name,
        version=__ret__.version)


@_utilities.lift_output_func(get_ovh__dbaas__logs__input__engine)
def get_ovh__dbaas__logs__input__engine_output(is_deprecated: Optional[pulumi.Input[Optional[bool]]] = None,
                                               name: Optional[pulumi.Input[Optional[str]]] = None,
                                               version: Optional[pulumi.Input[Optional[str]]] = None,
                                               opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetOvh_Dbaas_Logs_Input_EngineResult]:
    """
    Use this data source to access information about an existing resource.
    """
    ...
