# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'GetMeIpxeScriptResult',
    'AwaitableGetMeIpxeScriptResult',
    'get_me_ipxe_script',
    'get_me_ipxe_script_output',
]

@pulumi.output_type
class GetMeIpxeScriptResult:
    """
    A collection of values returned by getMeIpxeScript.
    """
    def __init__(__self__, id=None, name=None, script=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if script and not isinstance(script, str):
            raise TypeError("Expected argument 'script' to be a str")
        pulumi.set(__self__, "script", script)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def name(self) -> str:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def script(self) -> str:
        return pulumi.get(self, "script")


class AwaitableGetMeIpxeScriptResult(GetMeIpxeScriptResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetMeIpxeScriptResult(
            id=self.id,
            name=self.name,
            script=self.script)


def get_me_ipxe_script(name: Optional[str] = None,
                       opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetMeIpxeScriptResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['name'] = name
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('ovh:index/getMeIpxeScript:getMeIpxeScript', __args__, opts=opts, typ=GetMeIpxeScriptResult).value

    return AwaitableGetMeIpxeScriptResult(
        id=__ret__.id,
        name=__ret__.name,
        script=__ret__.script)


@_utilities.lift_output_func(get_me_ipxe_script)
def get_me_ipxe_script_output(name: Optional[pulumi.Input[str]] = None,
                              opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetMeIpxeScriptResult]:
    """
    Use this data source to access information about an existing resource.
    """
    ...
