# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'GetOvh_Me_Paymentmean_BankaccountResult',
    'AwaitableGetOvh_Me_Paymentmean_BankaccountResult',
    'get_ovh__me__paymentmean__bankaccount',
    'get_ovh__me__paymentmean__bankaccount_output',
]

@pulumi.output_type
class GetOvh_Me_Paymentmean_BankaccountResult:
    """
    A collection of values returned by getOvh_Me_Paymentmean_Bankaccount.
    """
    def __init__(__self__, default=None, description=None, description_regexp=None, id=None, state=None, use_default=None, use_oldest=None):
        if default and not isinstance(default, bool):
            raise TypeError("Expected argument 'default' to be a bool")
        pulumi.set(__self__, "default", default)
        if description and not isinstance(description, str):
            raise TypeError("Expected argument 'description' to be a str")
        pulumi.set(__self__, "description", description)
        if description_regexp and not isinstance(description_regexp, str):
            raise TypeError("Expected argument 'description_regexp' to be a str")
        pulumi.set(__self__, "description_regexp", description_regexp)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if state and not isinstance(state, str):
            raise TypeError("Expected argument 'state' to be a str")
        pulumi.set(__self__, "state", state)
        if use_default and not isinstance(use_default, bool):
            raise TypeError("Expected argument 'use_default' to be a bool")
        pulumi.set(__self__, "use_default", use_default)
        if use_oldest and not isinstance(use_oldest, bool):
            raise TypeError("Expected argument 'use_oldest' to be a bool")
        pulumi.set(__self__, "use_oldest", use_oldest)

    @property
    @pulumi.getter
    def default(self) -> bool:
        return pulumi.get(self, "default")

    @property
    @pulumi.getter
    def description(self) -> str:
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="descriptionRegexp")
    def description_regexp(self) -> Optional[str]:
        return pulumi.get(self, "description_regexp")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def state(self) -> str:
        return pulumi.get(self, "state")

    @property
    @pulumi.getter(name="useDefault")
    def use_default(self) -> Optional[bool]:
        return pulumi.get(self, "use_default")

    @property
    @pulumi.getter(name="useOldest")
    def use_oldest(self) -> Optional[bool]:
        return pulumi.get(self, "use_oldest")


class AwaitableGetOvh_Me_Paymentmean_BankaccountResult(GetOvh_Me_Paymentmean_BankaccountResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetOvh_Me_Paymentmean_BankaccountResult(
            default=self.default,
            description=self.description,
            description_regexp=self.description_regexp,
            id=self.id,
            state=self.state,
            use_default=self.use_default,
            use_oldest=self.use_oldest)


def get_ovh__me__paymentmean__bankaccount(description_regexp: Optional[str] = None,
                                          state: Optional[str] = None,
                                          use_default: Optional[bool] = None,
                                          use_oldest: Optional[bool] = None,
                                          opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetOvh_Me_Paymentmean_BankaccountResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['descriptionRegexp'] = description_regexp
    __args__['state'] = state
    __args__['useDefault'] = use_default
    __args__['useOldest'] = use_oldest
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('ovh:index/getOvh_Me_Paymentmean_Bankaccount:getOvh_Me_Paymentmean_Bankaccount', __args__, opts=opts, typ=GetOvh_Me_Paymentmean_BankaccountResult).value

    return AwaitableGetOvh_Me_Paymentmean_BankaccountResult(
        default=__ret__.default,
        description=__ret__.description,
        description_regexp=__ret__.description_regexp,
        id=__ret__.id,
        state=__ret__.state,
        use_default=__ret__.use_default,
        use_oldest=__ret__.use_oldest)


@_utilities.lift_output_func(get_ovh__me__paymentmean__bankaccount)
def get_ovh__me__paymentmean__bankaccount_output(description_regexp: Optional[pulumi.Input[Optional[str]]] = None,
                                                 state: Optional[pulumi.Input[Optional[str]]] = None,
                                                 use_default: Optional[pulumi.Input[Optional[bool]]] = None,
                                                 use_oldest: Optional[pulumi.Input[Optional[bool]]] = None,
                                                 opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetOvh_Me_Paymentmean_BankaccountResult]:
    """
    Use this data source to access information about an existing resource.
    """
    ...
