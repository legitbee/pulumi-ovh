// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type Ovh_vrack_iploadbalancing struct {
	pulumi.CustomResourceState

	// Your ipLoadbalancing
	IpLoadbalancing pulumi.StringOutput `pulumi:"ipLoadbalancing"`
	// The internal name of your vrack
	ServiceName pulumi.StringOutput `pulumi:"serviceName"`
}

// NewOvh_vrack_iploadbalancing registers a new resource with the given unique name, arguments, and options.
func NewOvh_vrack_iploadbalancing(ctx *pulumi.Context,
	name string, args *Ovh_vrack_iploadbalancingArgs, opts ...pulumi.ResourceOption) (*Ovh_vrack_iploadbalancing, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.IpLoadbalancing == nil {
		return nil, errors.New("invalid value for required argument 'IpLoadbalancing'")
	}
	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	var resource Ovh_vrack_iploadbalancing
	err := ctx.RegisterResource("ovh:index/ovh_vrack_iploadbalancing:ovh_vrack_iploadbalancing", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOvh_vrack_iploadbalancing gets an existing Ovh_vrack_iploadbalancing resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOvh_vrack_iploadbalancing(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *Ovh_vrack_iploadbalancingState, opts ...pulumi.ResourceOption) (*Ovh_vrack_iploadbalancing, error) {
	var resource Ovh_vrack_iploadbalancing
	err := ctx.ReadResource("ovh:index/ovh_vrack_iploadbalancing:ovh_vrack_iploadbalancing", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Ovh_vrack_iploadbalancing resources.
type ovh_vrack_iploadbalancingState struct {
	// Your ipLoadbalancing
	IpLoadbalancing *string `pulumi:"ipLoadbalancing"`
	// The internal name of your vrack
	ServiceName *string `pulumi:"serviceName"`
}

type Ovh_vrack_iploadbalancingState struct {
	// Your ipLoadbalancing
	IpLoadbalancing pulumi.StringPtrInput
	// The internal name of your vrack
	ServiceName pulumi.StringPtrInput
}

func (Ovh_vrack_iploadbalancingState) ElementType() reflect.Type {
	return reflect.TypeOf((*ovh_vrack_iploadbalancingState)(nil)).Elem()
}

type ovh_vrack_iploadbalancingArgs struct {
	// Your ipLoadbalancing
	IpLoadbalancing string `pulumi:"ipLoadbalancing"`
	// The internal name of your vrack
	ServiceName string `pulumi:"serviceName"`
}

// The set of arguments for constructing a Ovh_vrack_iploadbalancing resource.
type Ovh_vrack_iploadbalancingArgs struct {
	// Your ipLoadbalancing
	IpLoadbalancing pulumi.StringInput
	// The internal name of your vrack
	ServiceName pulumi.StringInput
}

func (Ovh_vrack_iploadbalancingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ovh_vrack_iploadbalancingArgs)(nil)).Elem()
}

type Ovh_vrack_iploadbalancingInput interface {
	pulumi.Input

	ToOvh_vrack_iploadbalancingOutput() Ovh_vrack_iploadbalancingOutput
	ToOvh_vrack_iploadbalancingOutputWithContext(ctx context.Context) Ovh_vrack_iploadbalancingOutput
}

func (*Ovh_vrack_iploadbalancing) ElementType() reflect.Type {
	return reflect.TypeOf((*Ovh_vrack_iploadbalancing)(nil))
}

func (i *Ovh_vrack_iploadbalancing) ToOvh_vrack_iploadbalancingOutput() Ovh_vrack_iploadbalancingOutput {
	return i.ToOvh_vrack_iploadbalancingOutputWithContext(context.Background())
}

func (i *Ovh_vrack_iploadbalancing) ToOvh_vrack_iploadbalancingOutputWithContext(ctx context.Context) Ovh_vrack_iploadbalancingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ovh_vrack_iploadbalancingOutput)
}

func (i *Ovh_vrack_iploadbalancing) ToOvh_vrack_iploadbalancingPtrOutput() Ovh_vrack_iploadbalancingPtrOutput {
	return i.ToOvh_vrack_iploadbalancingPtrOutputWithContext(context.Background())
}

func (i *Ovh_vrack_iploadbalancing) ToOvh_vrack_iploadbalancingPtrOutputWithContext(ctx context.Context) Ovh_vrack_iploadbalancingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ovh_vrack_iploadbalancingPtrOutput)
}

type Ovh_vrack_iploadbalancingPtrInput interface {
	pulumi.Input

	ToOvh_vrack_iploadbalancingPtrOutput() Ovh_vrack_iploadbalancingPtrOutput
	ToOvh_vrack_iploadbalancingPtrOutputWithContext(ctx context.Context) Ovh_vrack_iploadbalancingPtrOutput
}

type ovh_vrack_iploadbalancingPtrType Ovh_vrack_iploadbalancingArgs

func (*ovh_vrack_iploadbalancingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Ovh_vrack_iploadbalancing)(nil))
}

func (i *ovh_vrack_iploadbalancingPtrType) ToOvh_vrack_iploadbalancingPtrOutput() Ovh_vrack_iploadbalancingPtrOutput {
	return i.ToOvh_vrack_iploadbalancingPtrOutputWithContext(context.Background())
}

func (i *ovh_vrack_iploadbalancingPtrType) ToOvh_vrack_iploadbalancingPtrOutputWithContext(ctx context.Context) Ovh_vrack_iploadbalancingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ovh_vrack_iploadbalancingPtrOutput)
}

// Ovh_vrack_iploadbalancingArrayInput is an input type that accepts Ovh_vrack_iploadbalancingArray and Ovh_vrack_iploadbalancingArrayOutput values.
// You can construct a concrete instance of `Ovh_vrack_iploadbalancingArrayInput` via:
//
//          Ovh_vrack_iploadbalancingArray{ Ovh_vrack_iploadbalancingArgs{...} }
type Ovh_vrack_iploadbalancingArrayInput interface {
	pulumi.Input

	ToOvh_vrack_iploadbalancingArrayOutput() Ovh_vrack_iploadbalancingArrayOutput
	ToOvh_vrack_iploadbalancingArrayOutputWithContext(context.Context) Ovh_vrack_iploadbalancingArrayOutput
}

type Ovh_vrack_iploadbalancingArray []Ovh_vrack_iploadbalancingInput

func (Ovh_vrack_iploadbalancingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Ovh_vrack_iploadbalancing)(nil)).Elem()
}

func (i Ovh_vrack_iploadbalancingArray) ToOvh_vrack_iploadbalancingArrayOutput() Ovh_vrack_iploadbalancingArrayOutput {
	return i.ToOvh_vrack_iploadbalancingArrayOutputWithContext(context.Background())
}

func (i Ovh_vrack_iploadbalancingArray) ToOvh_vrack_iploadbalancingArrayOutputWithContext(ctx context.Context) Ovh_vrack_iploadbalancingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ovh_vrack_iploadbalancingArrayOutput)
}

// Ovh_vrack_iploadbalancingMapInput is an input type that accepts Ovh_vrack_iploadbalancingMap and Ovh_vrack_iploadbalancingMapOutput values.
// You can construct a concrete instance of `Ovh_vrack_iploadbalancingMapInput` via:
//
//          Ovh_vrack_iploadbalancingMap{ "key": Ovh_vrack_iploadbalancingArgs{...} }
type Ovh_vrack_iploadbalancingMapInput interface {
	pulumi.Input

	ToOvh_vrack_iploadbalancingMapOutput() Ovh_vrack_iploadbalancingMapOutput
	ToOvh_vrack_iploadbalancingMapOutputWithContext(context.Context) Ovh_vrack_iploadbalancingMapOutput
}

type Ovh_vrack_iploadbalancingMap map[string]Ovh_vrack_iploadbalancingInput

func (Ovh_vrack_iploadbalancingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Ovh_vrack_iploadbalancing)(nil)).Elem()
}

func (i Ovh_vrack_iploadbalancingMap) ToOvh_vrack_iploadbalancingMapOutput() Ovh_vrack_iploadbalancingMapOutput {
	return i.ToOvh_vrack_iploadbalancingMapOutputWithContext(context.Background())
}

func (i Ovh_vrack_iploadbalancingMap) ToOvh_vrack_iploadbalancingMapOutputWithContext(ctx context.Context) Ovh_vrack_iploadbalancingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ovh_vrack_iploadbalancingMapOutput)
}

type Ovh_vrack_iploadbalancingOutput struct{ *pulumi.OutputState }

func (Ovh_vrack_iploadbalancingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Ovh_vrack_iploadbalancing)(nil))
}

func (o Ovh_vrack_iploadbalancingOutput) ToOvh_vrack_iploadbalancingOutput() Ovh_vrack_iploadbalancingOutput {
	return o
}

func (o Ovh_vrack_iploadbalancingOutput) ToOvh_vrack_iploadbalancingOutputWithContext(ctx context.Context) Ovh_vrack_iploadbalancingOutput {
	return o
}

func (o Ovh_vrack_iploadbalancingOutput) ToOvh_vrack_iploadbalancingPtrOutput() Ovh_vrack_iploadbalancingPtrOutput {
	return o.ToOvh_vrack_iploadbalancingPtrOutputWithContext(context.Background())
}

func (o Ovh_vrack_iploadbalancingOutput) ToOvh_vrack_iploadbalancingPtrOutputWithContext(ctx context.Context) Ovh_vrack_iploadbalancingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Ovh_vrack_iploadbalancing) *Ovh_vrack_iploadbalancing {
		return &v
	}).(Ovh_vrack_iploadbalancingPtrOutput)
}

type Ovh_vrack_iploadbalancingPtrOutput struct{ *pulumi.OutputState }

func (Ovh_vrack_iploadbalancingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Ovh_vrack_iploadbalancing)(nil))
}

func (o Ovh_vrack_iploadbalancingPtrOutput) ToOvh_vrack_iploadbalancingPtrOutput() Ovh_vrack_iploadbalancingPtrOutput {
	return o
}

func (o Ovh_vrack_iploadbalancingPtrOutput) ToOvh_vrack_iploadbalancingPtrOutputWithContext(ctx context.Context) Ovh_vrack_iploadbalancingPtrOutput {
	return o
}

func (o Ovh_vrack_iploadbalancingPtrOutput) Elem() Ovh_vrack_iploadbalancingOutput {
	return o.ApplyT(func(v *Ovh_vrack_iploadbalancing) Ovh_vrack_iploadbalancing {
		if v != nil {
			return *v
		}
		var ret Ovh_vrack_iploadbalancing
		return ret
	}).(Ovh_vrack_iploadbalancingOutput)
}

type Ovh_vrack_iploadbalancingArrayOutput struct{ *pulumi.OutputState }

func (Ovh_vrack_iploadbalancingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Ovh_vrack_iploadbalancing)(nil))
}

func (o Ovh_vrack_iploadbalancingArrayOutput) ToOvh_vrack_iploadbalancingArrayOutput() Ovh_vrack_iploadbalancingArrayOutput {
	return o
}

func (o Ovh_vrack_iploadbalancingArrayOutput) ToOvh_vrack_iploadbalancingArrayOutputWithContext(ctx context.Context) Ovh_vrack_iploadbalancingArrayOutput {
	return o
}

func (o Ovh_vrack_iploadbalancingArrayOutput) Index(i pulumi.IntInput) Ovh_vrack_iploadbalancingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Ovh_vrack_iploadbalancing {
		return vs[0].([]Ovh_vrack_iploadbalancing)[vs[1].(int)]
	}).(Ovh_vrack_iploadbalancingOutput)
}

type Ovh_vrack_iploadbalancingMapOutput struct{ *pulumi.OutputState }

func (Ovh_vrack_iploadbalancingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]Ovh_vrack_iploadbalancing)(nil))
}

func (o Ovh_vrack_iploadbalancingMapOutput) ToOvh_vrack_iploadbalancingMapOutput() Ovh_vrack_iploadbalancingMapOutput {
	return o
}

func (o Ovh_vrack_iploadbalancingMapOutput) ToOvh_vrack_iploadbalancingMapOutputWithContext(ctx context.Context) Ovh_vrack_iploadbalancingMapOutput {
	return o
}

func (o Ovh_vrack_iploadbalancingMapOutput) MapIndex(k pulumi.StringInput) Ovh_vrack_iploadbalancingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) Ovh_vrack_iploadbalancing {
		return vs[0].(map[string]Ovh_vrack_iploadbalancing)[vs[1].(string)]
	}).(Ovh_vrack_iploadbalancingOutput)
}

func init() {
	pulumi.RegisterOutputType(Ovh_vrack_iploadbalancingOutput{})
	pulumi.RegisterOutputType(Ovh_vrack_iploadbalancingPtrOutput{})
	pulumi.RegisterOutputType(Ovh_vrack_iploadbalancingArrayOutput{})
	pulumi.RegisterOutputType(Ovh_vrack_iploadbalancingMapOutput{})
}
