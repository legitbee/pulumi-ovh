// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type Ovh_me_ipxe_script struct {
	pulumi.CustomResourceState

	// For documentation purpose only. This attribute is not passed to the OVH API as it cannot be retrieved back. Instead a
	// fake description ('$name auto description') is passed at creation time.
	Description pulumi.StringOutput `pulumi:"description"`
	// Name of your script
	Name pulumi.StringOutput `pulumi:"name"`
	// Content of your IPXE script
	Script pulumi.StringOutput `pulumi:"script"`
}

// NewOvh_me_ipxe_script registers a new resource with the given unique name, arguments, and options.
func NewOvh_me_ipxe_script(ctx *pulumi.Context,
	name string, args *Ovh_me_ipxe_scriptArgs, opts ...pulumi.ResourceOption) (*Ovh_me_ipxe_script, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Script == nil {
		return nil, errors.New("invalid value for required argument 'Script'")
	}
	var resource Ovh_me_ipxe_script
	err := ctx.RegisterResource("ovh:index/ovh_me_ipxe_script:ovh_me_ipxe_script", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOvh_me_ipxe_script gets an existing Ovh_me_ipxe_script resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOvh_me_ipxe_script(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *Ovh_me_ipxe_scriptState, opts ...pulumi.ResourceOption) (*Ovh_me_ipxe_script, error) {
	var resource Ovh_me_ipxe_script
	err := ctx.ReadResource("ovh:index/ovh_me_ipxe_script:ovh_me_ipxe_script", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Ovh_me_ipxe_script resources.
type ovh_me_ipxe_scriptState struct {
	// For documentation purpose only. This attribute is not passed to the OVH API as it cannot be retrieved back. Instead a
	// fake description ('$name auto description') is passed at creation time.
	Description *string `pulumi:"description"`
	// Name of your script
	Name *string `pulumi:"name"`
	// Content of your IPXE script
	Script *string `pulumi:"script"`
}

type Ovh_me_ipxe_scriptState struct {
	// For documentation purpose only. This attribute is not passed to the OVH API as it cannot be retrieved back. Instead a
	// fake description ('$name auto description') is passed at creation time.
	Description pulumi.StringPtrInput
	// Name of your script
	Name pulumi.StringPtrInput
	// Content of your IPXE script
	Script pulumi.StringPtrInput
}

func (Ovh_me_ipxe_scriptState) ElementType() reflect.Type {
	return reflect.TypeOf((*ovh_me_ipxe_scriptState)(nil)).Elem()
}

type ovh_me_ipxe_scriptArgs struct {
	// For documentation purpose only. This attribute is not passed to the OVH API as it cannot be retrieved back. Instead a
	// fake description ('$name auto description') is passed at creation time.
	Description *string `pulumi:"description"`
	// Name of your script
	Name *string `pulumi:"name"`
	// Content of your IPXE script
	Script string `pulumi:"script"`
}

// The set of arguments for constructing a Ovh_me_ipxe_script resource.
type Ovh_me_ipxe_scriptArgs struct {
	// For documentation purpose only. This attribute is not passed to the OVH API as it cannot be retrieved back. Instead a
	// fake description ('$name auto description') is passed at creation time.
	Description pulumi.StringPtrInput
	// Name of your script
	Name pulumi.StringPtrInput
	// Content of your IPXE script
	Script pulumi.StringInput
}

func (Ovh_me_ipxe_scriptArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ovh_me_ipxe_scriptArgs)(nil)).Elem()
}

type Ovh_me_ipxe_scriptInput interface {
	pulumi.Input

	ToOvh_me_ipxe_scriptOutput() Ovh_me_ipxe_scriptOutput
	ToOvh_me_ipxe_scriptOutputWithContext(ctx context.Context) Ovh_me_ipxe_scriptOutput
}

func (*Ovh_me_ipxe_script) ElementType() reflect.Type {
	return reflect.TypeOf((*Ovh_me_ipxe_script)(nil))
}

func (i *Ovh_me_ipxe_script) ToOvh_me_ipxe_scriptOutput() Ovh_me_ipxe_scriptOutput {
	return i.ToOvh_me_ipxe_scriptOutputWithContext(context.Background())
}

func (i *Ovh_me_ipxe_script) ToOvh_me_ipxe_scriptOutputWithContext(ctx context.Context) Ovh_me_ipxe_scriptOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ovh_me_ipxe_scriptOutput)
}

func (i *Ovh_me_ipxe_script) ToOvh_me_ipxe_scriptPtrOutput() Ovh_me_ipxe_scriptPtrOutput {
	return i.ToOvh_me_ipxe_scriptPtrOutputWithContext(context.Background())
}

func (i *Ovh_me_ipxe_script) ToOvh_me_ipxe_scriptPtrOutputWithContext(ctx context.Context) Ovh_me_ipxe_scriptPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ovh_me_ipxe_scriptPtrOutput)
}

type Ovh_me_ipxe_scriptPtrInput interface {
	pulumi.Input

	ToOvh_me_ipxe_scriptPtrOutput() Ovh_me_ipxe_scriptPtrOutput
	ToOvh_me_ipxe_scriptPtrOutputWithContext(ctx context.Context) Ovh_me_ipxe_scriptPtrOutput
}

type ovh_me_ipxe_scriptPtrType Ovh_me_ipxe_scriptArgs

func (*ovh_me_ipxe_scriptPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Ovh_me_ipxe_script)(nil))
}

func (i *ovh_me_ipxe_scriptPtrType) ToOvh_me_ipxe_scriptPtrOutput() Ovh_me_ipxe_scriptPtrOutput {
	return i.ToOvh_me_ipxe_scriptPtrOutputWithContext(context.Background())
}

func (i *ovh_me_ipxe_scriptPtrType) ToOvh_me_ipxe_scriptPtrOutputWithContext(ctx context.Context) Ovh_me_ipxe_scriptPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ovh_me_ipxe_scriptPtrOutput)
}

// Ovh_me_ipxe_scriptArrayInput is an input type that accepts Ovh_me_ipxe_scriptArray and Ovh_me_ipxe_scriptArrayOutput values.
// You can construct a concrete instance of `Ovh_me_ipxe_scriptArrayInput` via:
//
//          Ovh_me_ipxe_scriptArray{ Ovh_me_ipxe_scriptArgs{...} }
type Ovh_me_ipxe_scriptArrayInput interface {
	pulumi.Input

	ToOvh_me_ipxe_scriptArrayOutput() Ovh_me_ipxe_scriptArrayOutput
	ToOvh_me_ipxe_scriptArrayOutputWithContext(context.Context) Ovh_me_ipxe_scriptArrayOutput
}

type Ovh_me_ipxe_scriptArray []Ovh_me_ipxe_scriptInput

func (Ovh_me_ipxe_scriptArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Ovh_me_ipxe_script)(nil)).Elem()
}

func (i Ovh_me_ipxe_scriptArray) ToOvh_me_ipxe_scriptArrayOutput() Ovh_me_ipxe_scriptArrayOutput {
	return i.ToOvh_me_ipxe_scriptArrayOutputWithContext(context.Background())
}

func (i Ovh_me_ipxe_scriptArray) ToOvh_me_ipxe_scriptArrayOutputWithContext(ctx context.Context) Ovh_me_ipxe_scriptArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ovh_me_ipxe_scriptArrayOutput)
}

// Ovh_me_ipxe_scriptMapInput is an input type that accepts Ovh_me_ipxe_scriptMap and Ovh_me_ipxe_scriptMapOutput values.
// You can construct a concrete instance of `Ovh_me_ipxe_scriptMapInput` via:
//
//          Ovh_me_ipxe_scriptMap{ "key": Ovh_me_ipxe_scriptArgs{...} }
type Ovh_me_ipxe_scriptMapInput interface {
	pulumi.Input

	ToOvh_me_ipxe_scriptMapOutput() Ovh_me_ipxe_scriptMapOutput
	ToOvh_me_ipxe_scriptMapOutputWithContext(context.Context) Ovh_me_ipxe_scriptMapOutput
}

type Ovh_me_ipxe_scriptMap map[string]Ovh_me_ipxe_scriptInput

func (Ovh_me_ipxe_scriptMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Ovh_me_ipxe_script)(nil)).Elem()
}

func (i Ovh_me_ipxe_scriptMap) ToOvh_me_ipxe_scriptMapOutput() Ovh_me_ipxe_scriptMapOutput {
	return i.ToOvh_me_ipxe_scriptMapOutputWithContext(context.Background())
}

func (i Ovh_me_ipxe_scriptMap) ToOvh_me_ipxe_scriptMapOutputWithContext(ctx context.Context) Ovh_me_ipxe_scriptMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ovh_me_ipxe_scriptMapOutput)
}

type Ovh_me_ipxe_scriptOutput struct{ *pulumi.OutputState }

func (Ovh_me_ipxe_scriptOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Ovh_me_ipxe_script)(nil))
}

func (o Ovh_me_ipxe_scriptOutput) ToOvh_me_ipxe_scriptOutput() Ovh_me_ipxe_scriptOutput {
	return o
}

func (o Ovh_me_ipxe_scriptOutput) ToOvh_me_ipxe_scriptOutputWithContext(ctx context.Context) Ovh_me_ipxe_scriptOutput {
	return o
}

func (o Ovh_me_ipxe_scriptOutput) ToOvh_me_ipxe_scriptPtrOutput() Ovh_me_ipxe_scriptPtrOutput {
	return o.ToOvh_me_ipxe_scriptPtrOutputWithContext(context.Background())
}

func (o Ovh_me_ipxe_scriptOutput) ToOvh_me_ipxe_scriptPtrOutputWithContext(ctx context.Context) Ovh_me_ipxe_scriptPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Ovh_me_ipxe_script) *Ovh_me_ipxe_script {
		return &v
	}).(Ovh_me_ipxe_scriptPtrOutput)
}

type Ovh_me_ipxe_scriptPtrOutput struct{ *pulumi.OutputState }

func (Ovh_me_ipxe_scriptPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Ovh_me_ipxe_script)(nil))
}

func (o Ovh_me_ipxe_scriptPtrOutput) ToOvh_me_ipxe_scriptPtrOutput() Ovh_me_ipxe_scriptPtrOutput {
	return o
}

func (o Ovh_me_ipxe_scriptPtrOutput) ToOvh_me_ipxe_scriptPtrOutputWithContext(ctx context.Context) Ovh_me_ipxe_scriptPtrOutput {
	return o
}

func (o Ovh_me_ipxe_scriptPtrOutput) Elem() Ovh_me_ipxe_scriptOutput {
	return o.ApplyT(func(v *Ovh_me_ipxe_script) Ovh_me_ipxe_script {
		if v != nil {
			return *v
		}
		var ret Ovh_me_ipxe_script
		return ret
	}).(Ovh_me_ipxe_scriptOutput)
}

type Ovh_me_ipxe_scriptArrayOutput struct{ *pulumi.OutputState }

func (Ovh_me_ipxe_scriptArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Ovh_me_ipxe_script)(nil))
}

func (o Ovh_me_ipxe_scriptArrayOutput) ToOvh_me_ipxe_scriptArrayOutput() Ovh_me_ipxe_scriptArrayOutput {
	return o
}

func (o Ovh_me_ipxe_scriptArrayOutput) ToOvh_me_ipxe_scriptArrayOutputWithContext(ctx context.Context) Ovh_me_ipxe_scriptArrayOutput {
	return o
}

func (o Ovh_me_ipxe_scriptArrayOutput) Index(i pulumi.IntInput) Ovh_me_ipxe_scriptOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Ovh_me_ipxe_script {
		return vs[0].([]Ovh_me_ipxe_script)[vs[1].(int)]
	}).(Ovh_me_ipxe_scriptOutput)
}

type Ovh_me_ipxe_scriptMapOutput struct{ *pulumi.OutputState }

func (Ovh_me_ipxe_scriptMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]Ovh_me_ipxe_script)(nil))
}

func (o Ovh_me_ipxe_scriptMapOutput) ToOvh_me_ipxe_scriptMapOutput() Ovh_me_ipxe_scriptMapOutput {
	return o
}

func (o Ovh_me_ipxe_scriptMapOutput) ToOvh_me_ipxe_scriptMapOutputWithContext(ctx context.Context) Ovh_me_ipxe_scriptMapOutput {
	return o
}

func (o Ovh_me_ipxe_scriptMapOutput) MapIndex(k pulumi.StringInput) Ovh_me_ipxe_scriptOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) Ovh_me_ipxe_script {
		return vs[0].(map[string]Ovh_me_ipxe_script)[vs[1].(string)]
	}).(Ovh_me_ipxe_scriptOutput)
}

func init() {
	pulumi.RegisterOutputType(Ovh_me_ipxe_scriptOutput{})
	pulumi.RegisterOutputType(Ovh_me_ipxe_scriptPtrOutput{})
	pulumi.RegisterOutputType(Ovh_me_ipxe_scriptArrayOutput{})
	pulumi.RegisterOutputType(Ovh_me_ipxe_scriptMapOutput{})
}
