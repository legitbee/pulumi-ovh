// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupIpService(ctx *pulumi.Context, args *LookupIpServiceArgs, opts ...pulumi.InvokeOption) (*LookupIpServiceResult, error) {
	var rv LookupIpServiceResult
	err := ctx.Invoke("ovh:index/getIpService:getIpService", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getIpService.
type LookupIpServiceArgs struct {
	ServiceName string `pulumi:"serviceName"`
}

// A collection of values returned by getIpService.
type LookupIpServiceResult struct {
	CanBeTerminated bool   `pulumi:"canBeTerminated"`
	Country         string `pulumi:"country"`
	Description     string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id             string                 `pulumi:"id"`
	Ip             string                 `pulumi:"ip"`
	OrganisationId string                 `pulumi:"organisationId"`
	RoutedTos      []GetIpServiceRoutedTo `pulumi:"routedTos"`
	ServiceName    string                 `pulumi:"serviceName"`
	Type           string                 `pulumi:"type"`
}

func LookupIpServiceOutput(ctx *pulumi.Context, args LookupIpServiceOutputArgs, opts ...pulumi.InvokeOption) LookupIpServiceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupIpServiceResult, error) {
			args := v.(LookupIpServiceArgs)
			r, err := LookupIpService(ctx, &args, opts...)
			return *r, err
		}).(LookupIpServiceResultOutput)
}

// A collection of arguments for invoking getIpService.
type LookupIpServiceOutputArgs struct {
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
}

func (LookupIpServiceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIpServiceArgs)(nil)).Elem()
}

// A collection of values returned by getIpService.
type LookupIpServiceResultOutput struct{ *pulumi.OutputState }

func (LookupIpServiceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIpServiceResult)(nil)).Elem()
}

func (o LookupIpServiceResultOutput) ToLookupIpServiceResultOutput() LookupIpServiceResultOutput {
	return o
}

func (o LookupIpServiceResultOutput) ToLookupIpServiceResultOutputWithContext(ctx context.Context) LookupIpServiceResultOutput {
	return o
}

func (o LookupIpServiceResultOutput) CanBeTerminated() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupIpServiceResult) bool { return v.CanBeTerminated }).(pulumi.BoolOutput)
}

func (o LookupIpServiceResultOutput) Country() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpServiceResult) string { return v.Country }).(pulumi.StringOutput)
}

func (o LookupIpServiceResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpServiceResult) string { return v.Description }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupIpServiceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpServiceResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupIpServiceResultOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpServiceResult) string { return v.Ip }).(pulumi.StringOutput)
}

func (o LookupIpServiceResultOutput) OrganisationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpServiceResult) string { return v.OrganisationId }).(pulumi.StringOutput)
}

func (o LookupIpServiceResultOutput) RoutedTos() GetIpServiceRoutedToArrayOutput {
	return o.ApplyT(func(v LookupIpServiceResult) []GetIpServiceRoutedTo { return v.RoutedTos }).(GetIpServiceRoutedToArrayOutput)
}

func (o LookupIpServiceResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpServiceResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

func (o LookupIpServiceResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpServiceResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupIpServiceResultOutput{})
}
