// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DedicatedServerUpdate struct {
	pulumi.CustomResourceState

	// The boot id of your dedicated server.
	BootId pulumi.IntOutput `pulumi:"bootId"`
	// Icmp monitoring state
	Monitoring pulumi.BoolOutput `pulumi:"monitoring"`
	// The internal name of your dedicated server.
	ServiceName pulumi.StringOutput `pulumi:"serviceName"`
	// error, hacked, hackedBlocked, ok
	State pulumi.StringOutput `pulumi:"state"`
}

// NewDedicatedServerUpdate registers a new resource with the given unique name, arguments, and options.
func NewDedicatedServerUpdate(ctx *pulumi.Context,
	name string, args *DedicatedServerUpdateArgs, opts ...pulumi.ResourceOption) (*DedicatedServerUpdate, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	var resource DedicatedServerUpdate
	err := ctx.RegisterResource("ovh:index/dedicatedServerUpdate:DedicatedServerUpdate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDedicatedServerUpdate gets an existing DedicatedServerUpdate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDedicatedServerUpdate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DedicatedServerUpdateState, opts ...pulumi.ResourceOption) (*DedicatedServerUpdate, error) {
	var resource DedicatedServerUpdate
	err := ctx.ReadResource("ovh:index/dedicatedServerUpdate:DedicatedServerUpdate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DedicatedServerUpdate resources.
type dedicatedServerUpdateState struct {
	// The boot id of your dedicated server.
	BootId *int `pulumi:"bootId"`
	// Icmp monitoring state
	Monitoring *bool `pulumi:"monitoring"`
	// The internal name of your dedicated server.
	ServiceName *string `pulumi:"serviceName"`
	// error, hacked, hackedBlocked, ok
	State *string `pulumi:"state"`
}

type DedicatedServerUpdateState struct {
	// The boot id of your dedicated server.
	BootId pulumi.IntPtrInput
	// Icmp monitoring state
	Monitoring pulumi.BoolPtrInput
	// The internal name of your dedicated server.
	ServiceName pulumi.StringPtrInput
	// error, hacked, hackedBlocked, ok
	State pulumi.StringPtrInput
}

func (DedicatedServerUpdateState) ElementType() reflect.Type {
	return reflect.TypeOf((*dedicatedServerUpdateState)(nil)).Elem()
}

type dedicatedServerUpdateArgs struct {
	// The boot id of your dedicated server.
	BootId *int `pulumi:"bootId"`
	// Icmp monitoring state
	Monitoring *bool `pulumi:"monitoring"`
	// The internal name of your dedicated server.
	ServiceName string `pulumi:"serviceName"`
	// error, hacked, hackedBlocked, ok
	State *string `pulumi:"state"`
}

// The set of arguments for constructing a DedicatedServerUpdate resource.
type DedicatedServerUpdateArgs struct {
	// The boot id of your dedicated server.
	BootId pulumi.IntPtrInput
	// Icmp monitoring state
	Monitoring pulumi.BoolPtrInput
	// The internal name of your dedicated server.
	ServiceName pulumi.StringInput
	// error, hacked, hackedBlocked, ok
	State pulumi.StringPtrInput
}

func (DedicatedServerUpdateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dedicatedServerUpdateArgs)(nil)).Elem()
}

type DedicatedServerUpdateInput interface {
	pulumi.Input

	ToDedicatedServerUpdateOutput() DedicatedServerUpdateOutput
	ToDedicatedServerUpdateOutputWithContext(ctx context.Context) DedicatedServerUpdateOutput
}

func (*DedicatedServerUpdate) ElementType() reflect.Type {
	return reflect.TypeOf((*DedicatedServerUpdate)(nil))
}

func (i *DedicatedServerUpdate) ToDedicatedServerUpdateOutput() DedicatedServerUpdateOutput {
	return i.ToDedicatedServerUpdateOutputWithContext(context.Background())
}

func (i *DedicatedServerUpdate) ToDedicatedServerUpdateOutputWithContext(ctx context.Context) DedicatedServerUpdateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DedicatedServerUpdateOutput)
}

func (i *DedicatedServerUpdate) ToDedicatedServerUpdatePtrOutput() DedicatedServerUpdatePtrOutput {
	return i.ToDedicatedServerUpdatePtrOutputWithContext(context.Background())
}

func (i *DedicatedServerUpdate) ToDedicatedServerUpdatePtrOutputWithContext(ctx context.Context) DedicatedServerUpdatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DedicatedServerUpdatePtrOutput)
}

type DedicatedServerUpdatePtrInput interface {
	pulumi.Input

	ToDedicatedServerUpdatePtrOutput() DedicatedServerUpdatePtrOutput
	ToDedicatedServerUpdatePtrOutputWithContext(ctx context.Context) DedicatedServerUpdatePtrOutput
}

type dedicatedServerUpdatePtrType DedicatedServerUpdateArgs

func (*dedicatedServerUpdatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DedicatedServerUpdate)(nil))
}

func (i *dedicatedServerUpdatePtrType) ToDedicatedServerUpdatePtrOutput() DedicatedServerUpdatePtrOutput {
	return i.ToDedicatedServerUpdatePtrOutputWithContext(context.Background())
}

func (i *dedicatedServerUpdatePtrType) ToDedicatedServerUpdatePtrOutputWithContext(ctx context.Context) DedicatedServerUpdatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DedicatedServerUpdatePtrOutput)
}

// DedicatedServerUpdateArrayInput is an input type that accepts DedicatedServerUpdateArray and DedicatedServerUpdateArrayOutput values.
// You can construct a concrete instance of `DedicatedServerUpdateArrayInput` via:
//
//          DedicatedServerUpdateArray{ DedicatedServerUpdateArgs{...} }
type DedicatedServerUpdateArrayInput interface {
	pulumi.Input

	ToDedicatedServerUpdateArrayOutput() DedicatedServerUpdateArrayOutput
	ToDedicatedServerUpdateArrayOutputWithContext(context.Context) DedicatedServerUpdateArrayOutput
}

type DedicatedServerUpdateArray []DedicatedServerUpdateInput

func (DedicatedServerUpdateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DedicatedServerUpdate)(nil)).Elem()
}

func (i DedicatedServerUpdateArray) ToDedicatedServerUpdateArrayOutput() DedicatedServerUpdateArrayOutput {
	return i.ToDedicatedServerUpdateArrayOutputWithContext(context.Background())
}

func (i DedicatedServerUpdateArray) ToDedicatedServerUpdateArrayOutputWithContext(ctx context.Context) DedicatedServerUpdateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DedicatedServerUpdateArrayOutput)
}

// DedicatedServerUpdateMapInput is an input type that accepts DedicatedServerUpdateMap and DedicatedServerUpdateMapOutput values.
// You can construct a concrete instance of `DedicatedServerUpdateMapInput` via:
//
//          DedicatedServerUpdateMap{ "key": DedicatedServerUpdateArgs{...} }
type DedicatedServerUpdateMapInput interface {
	pulumi.Input

	ToDedicatedServerUpdateMapOutput() DedicatedServerUpdateMapOutput
	ToDedicatedServerUpdateMapOutputWithContext(context.Context) DedicatedServerUpdateMapOutput
}

type DedicatedServerUpdateMap map[string]DedicatedServerUpdateInput

func (DedicatedServerUpdateMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DedicatedServerUpdate)(nil)).Elem()
}

func (i DedicatedServerUpdateMap) ToDedicatedServerUpdateMapOutput() DedicatedServerUpdateMapOutput {
	return i.ToDedicatedServerUpdateMapOutputWithContext(context.Background())
}

func (i DedicatedServerUpdateMap) ToDedicatedServerUpdateMapOutputWithContext(ctx context.Context) DedicatedServerUpdateMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DedicatedServerUpdateMapOutput)
}

type DedicatedServerUpdateOutput struct{ *pulumi.OutputState }

func (DedicatedServerUpdateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DedicatedServerUpdate)(nil))
}

func (o DedicatedServerUpdateOutput) ToDedicatedServerUpdateOutput() DedicatedServerUpdateOutput {
	return o
}

func (o DedicatedServerUpdateOutput) ToDedicatedServerUpdateOutputWithContext(ctx context.Context) DedicatedServerUpdateOutput {
	return o
}

func (o DedicatedServerUpdateOutput) ToDedicatedServerUpdatePtrOutput() DedicatedServerUpdatePtrOutput {
	return o.ToDedicatedServerUpdatePtrOutputWithContext(context.Background())
}

func (o DedicatedServerUpdateOutput) ToDedicatedServerUpdatePtrOutputWithContext(ctx context.Context) DedicatedServerUpdatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DedicatedServerUpdate) *DedicatedServerUpdate {
		return &v
	}).(DedicatedServerUpdatePtrOutput)
}

type DedicatedServerUpdatePtrOutput struct{ *pulumi.OutputState }

func (DedicatedServerUpdatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DedicatedServerUpdate)(nil))
}

func (o DedicatedServerUpdatePtrOutput) ToDedicatedServerUpdatePtrOutput() DedicatedServerUpdatePtrOutput {
	return o
}

func (o DedicatedServerUpdatePtrOutput) ToDedicatedServerUpdatePtrOutputWithContext(ctx context.Context) DedicatedServerUpdatePtrOutput {
	return o
}

func (o DedicatedServerUpdatePtrOutput) Elem() DedicatedServerUpdateOutput {
	return o.ApplyT(func(v *DedicatedServerUpdate) DedicatedServerUpdate {
		if v != nil {
			return *v
		}
		var ret DedicatedServerUpdate
		return ret
	}).(DedicatedServerUpdateOutput)
}

type DedicatedServerUpdateArrayOutput struct{ *pulumi.OutputState }

func (DedicatedServerUpdateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DedicatedServerUpdate)(nil))
}

func (o DedicatedServerUpdateArrayOutput) ToDedicatedServerUpdateArrayOutput() DedicatedServerUpdateArrayOutput {
	return o
}

func (o DedicatedServerUpdateArrayOutput) ToDedicatedServerUpdateArrayOutputWithContext(ctx context.Context) DedicatedServerUpdateArrayOutput {
	return o
}

func (o DedicatedServerUpdateArrayOutput) Index(i pulumi.IntInput) DedicatedServerUpdateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DedicatedServerUpdate {
		return vs[0].([]DedicatedServerUpdate)[vs[1].(int)]
	}).(DedicatedServerUpdateOutput)
}

type DedicatedServerUpdateMapOutput struct{ *pulumi.OutputState }

func (DedicatedServerUpdateMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]DedicatedServerUpdate)(nil))
}

func (o DedicatedServerUpdateMapOutput) ToDedicatedServerUpdateMapOutput() DedicatedServerUpdateMapOutput {
	return o
}

func (o DedicatedServerUpdateMapOutput) ToDedicatedServerUpdateMapOutputWithContext(ctx context.Context) DedicatedServerUpdateMapOutput {
	return o
}

func (o DedicatedServerUpdateMapOutput) MapIndex(k pulumi.StringInput) DedicatedServerUpdateOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) DedicatedServerUpdate {
		return vs[0].(map[string]DedicatedServerUpdate)[vs[1].(string)]
	}).(DedicatedServerUpdateOutput)
}

func init() {
	pulumi.RegisterOutputType(DedicatedServerUpdateOutput{})
	pulumi.RegisterOutputType(DedicatedServerUpdatePtrOutput{})
	pulumi.RegisterOutputType(DedicatedServerUpdateArrayOutput{})
	pulumi.RegisterOutputType(DedicatedServerUpdateMapOutput{})
}
