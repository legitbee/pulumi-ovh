// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CloudProjectKube struct {
	pulumi.CustomResourceState

	ControlPlaneIsUpToDate pulumi.BoolOutput        `pulumi:"controlPlaneIsUpToDate"`
	IsUpToDate             pulumi.BoolOutput        `pulumi:"isUpToDate"`
	Kubeconfig             pulumi.StringOutput      `pulumi:"kubeconfig"`
	Name                   pulumi.StringOutput      `pulumi:"name"`
	NextUpgradeVersions    pulumi.StringArrayOutput `pulumi:"nextUpgradeVersions"`
	NodesUrl               pulumi.StringOutput      `pulumi:"nodesUrl"`
	PrivateNetworkId       pulumi.StringPtrOutput   `pulumi:"privateNetworkId"`
	Region                 pulumi.StringOutput      `pulumi:"region"`
	ServiceName            pulumi.StringOutput      `pulumi:"serviceName"`
	Status                 pulumi.StringOutput      `pulumi:"status"`
	UpdatePolicy           pulumi.StringOutput      `pulumi:"updatePolicy"`
	Url                    pulumi.StringOutput      `pulumi:"url"`
	Version                pulumi.StringOutput      `pulumi:"version"`
}

// NewCloudProjectKube registers a new resource with the given unique name, arguments, and options.
func NewCloudProjectKube(ctx *pulumi.Context,
	name string, args *CloudProjectKubeArgs, opts ...pulumi.ResourceOption) (*CloudProjectKube, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Region == nil {
		return nil, errors.New("invalid value for required argument 'Region'")
	}
	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	var resource CloudProjectKube
	err := ctx.RegisterResource("ovh:index/cloudProjectKube:CloudProjectKube", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudProjectKube gets an existing CloudProjectKube resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudProjectKube(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudProjectKubeState, opts ...pulumi.ResourceOption) (*CloudProjectKube, error) {
	var resource CloudProjectKube
	err := ctx.ReadResource("ovh:index/cloudProjectKube:CloudProjectKube", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudProjectKube resources.
type cloudProjectKubeState struct {
	ControlPlaneIsUpToDate *bool    `pulumi:"controlPlaneIsUpToDate"`
	IsUpToDate             *bool    `pulumi:"isUpToDate"`
	Kubeconfig             *string  `pulumi:"kubeconfig"`
	Name                   *string  `pulumi:"name"`
	NextUpgradeVersions    []string `pulumi:"nextUpgradeVersions"`
	NodesUrl               *string  `pulumi:"nodesUrl"`
	PrivateNetworkId       *string  `pulumi:"privateNetworkId"`
	Region                 *string  `pulumi:"region"`
	ServiceName            *string  `pulumi:"serviceName"`
	Status                 *string  `pulumi:"status"`
	UpdatePolicy           *string  `pulumi:"updatePolicy"`
	Url                    *string  `pulumi:"url"`
	Version                *string  `pulumi:"version"`
}

type CloudProjectKubeState struct {
	ControlPlaneIsUpToDate pulumi.BoolPtrInput
	IsUpToDate             pulumi.BoolPtrInput
	Kubeconfig             pulumi.StringPtrInput
	Name                   pulumi.StringPtrInput
	NextUpgradeVersions    pulumi.StringArrayInput
	NodesUrl               pulumi.StringPtrInput
	PrivateNetworkId       pulumi.StringPtrInput
	Region                 pulumi.StringPtrInput
	ServiceName            pulumi.StringPtrInput
	Status                 pulumi.StringPtrInput
	UpdatePolicy           pulumi.StringPtrInput
	Url                    pulumi.StringPtrInput
	Version                pulumi.StringPtrInput
}

func (CloudProjectKubeState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudProjectKubeState)(nil)).Elem()
}

type cloudProjectKubeArgs struct {
	Name             *string `pulumi:"name"`
	PrivateNetworkId *string `pulumi:"privateNetworkId"`
	Region           string  `pulumi:"region"`
	ServiceName      string  `pulumi:"serviceName"`
	Version          *string `pulumi:"version"`
}

// The set of arguments for constructing a CloudProjectKube resource.
type CloudProjectKubeArgs struct {
	Name             pulumi.StringPtrInput
	PrivateNetworkId pulumi.StringPtrInput
	Region           pulumi.StringInput
	ServiceName      pulumi.StringInput
	Version          pulumi.StringPtrInput
}

func (CloudProjectKubeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudProjectKubeArgs)(nil)).Elem()
}

type CloudProjectKubeInput interface {
	pulumi.Input

	ToCloudProjectKubeOutput() CloudProjectKubeOutput
	ToCloudProjectKubeOutputWithContext(ctx context.Context) CloudProjectKubeOutput
}

func (*CloudProjectKube) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudProjectKube)(nil))
}

func (i *CloudProjectKube) ToCloudProjectKubeOutput() CloudProjectKubeOutput {
	return i.ToCloudProjectKubeOutputWithContext(context.Background())
}

func (i *CloudProjectKube) ToCloudProjectKubeOutputWithContext(ctx context.Context) CloudProjectKubeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProjectKubeOutput)
}

func (i *CloudProjectKube) ToCloudProjectKubePtrOutput() CloudProjectKubePtrOutput {
	return i.ToCloudProjectKubePtrOutputWithContext(context.Background())
}

func (i *CloudProjectKube) ToCloudProjectKubePtrOutputWithContext(ctx context.Context) CloudProjectKubePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProjectKubePtrOutput)
}

type CloudProjectKubePtrInput interface {
	pulumi.Input

	ToCloudProjectKubePtrOutput() CloudProjectKubePtrOutput
	ToCloudProjectKubePtrOutputWithContext(ctx context.Context) CloudProjectKubePtrOutput
}

type cloudProjectKubePtrType CloudProjectKubeArgs

func (*cloudProjectKubePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudProjectKube)(nil))
}

func (i *cloudProjectKubePtrType) ToCloudProjectKubePtrOutput() CloudProjectKubePtrOutput {
	return i.ToCloudProjectKubePtrOutputWithContext(context.Background())
}

func (i *cloudProjectKubePtrType) ToCloudProjectKubePtrOutputWithContext(ctx context.Context) CloudProjectKubePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProjectKubePtrOutput)
}

// CloudProjectKubeArrayInput is an input type that accepts CloudProjectKubeArray and CloudProjectKubeArrayOutput values.
// You can construct a concrete instance of `CloudProjectKubeArrayInput` via:
//
//          CloudProjectKubeArray{ CloudProjectKubeArgs{...} }
type CloudProjectKubeArrayInput interface {
	pulumi.Input

	ToCloudProjectKubeArrayOutput() CloudProjectKubeArrayOutput
	ToCloudProjectKubeArrayOutputWithContext(context.Context) CloudProjectKubeArrayOutput
}

type CloudProjectKubeArray []CloudProjectKubeInput

func (CloudProjectKubeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CloudProjectKube)(nil)).Elem()
}

func (i CloudProjectKubeArray) ToCloudProjectKubeArrayOutput() CloudProjectKubeArrayOutput {
	return i.ToCloudProjectKubeArrayOutputWithContext(context.Background())
}

func (i CloudProjectKubeArray) ToCloudProjectKubeArrayOutputWithContext(ctx context.Context) CloudProjectKubeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProjectKubeArrayOutput)
}

// CloudProjectKubeMapInput is an input type that accepts CloudProjectKubeMap and CloudProjectKubeMapOutput values.
// You can construct a concrete instance of `CloudProjectKubeMapInput` via:
//
//          CloudProjectKubeMap{ "key": CloudProjectKubeArgs{...} }
type CloudProjectKubeMapInput interface {
	pulumi.Input

	ToCloudProjectKubeMapOutput() CloudProjectKubeMapOutput
	ToCloudProjectKubeMapOutputWithContext(context.Context) CloudProjectKubeMapOutput
}

type CloudProjectKubeMap map[string]CloudProjectKubeInput

func (CloudProjectKubeMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CloudProjectKube)(nil)).Elem()
}

func (i CloudProjectKubeMap) ToCloudProjectKubeMapOutput() CloudProjectKubeMapOutput {
	return i.ToCloudProjectKubeMapOutputWithContext(context.Background())
}

func (i CloudProjectKubeMap) ToCloudProjectKubeMapOutputWithContext(ctx context.Context) CloudProjectKubeMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProjectKubeMapOutput)
}

type CloudProjectKubeOutput struct{ *pulumi.OutputState }

func (CloudProjectKubeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudProjectKube)(nil))
}

func (o CloudProjectKubeOutput) ToCloudProjectKubeOutput() CloudProjectKubeOutput {
	return o
}

func (o CloudProjectKubeOutput) ToCloudProjectKubeOutputWithContext(ctx context.Context) CloudProjectKubeOutput {
	return o
}

func (o CloudProjectKubeOutput) ToCloudProjectKubePtrOutput() CloudProjectKubePtrOutput {
	return o.ToCloudProjectKubePtrOutputWithContext(context.Background())
}

func (o CloudProjectKubeOutput) ToCloudProjectKubePtrOutputWithContext(ctx context.Context) CloudProjectKubePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudProjectKube) *CloudProjectKube {
		return &v
	}).(CloudProjectKubePtrOutput)
}

type CloudProjectKubePtrOutput struct{ *pulumi.OutputState }

func (CloudProjectKubePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudProjectKube)(nil))
}

func (o CloudProjectKubePtrOutput) ToCloudProjectKubePtrOutput() CloudProjectKubePtrOutput {
	return o
}

func (o CloudProjectKubePtrOutput) ToCloudProjectKubePtrOutputWithContext(ctx context.Context) CloudProjectKubePtrOutput {
	return o
}

func (o CloudProjectKubePtrOutput) Elem() CloudProjectKubeOutput {
	return o.ApplyT(func(v *CloudProjectKube) CloudProjectKube {
		if v != nil {
			return *v
		}
		var ret CloudProjectKube
		return ret
	}).(CloudProjectKubeOutput)
}

type CloudProjectKubeArrayOutput struct{ *pulumi.OutputState }

func (CloudProjectKubeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudProjectKube)(nil))
}

func (o CloudProjectKubeArrayOutput) ToCloudProjectKubeArrayOutput() CloudProjectKubeArrayOutput {
	return o
}

func (o CloudProjectKubeArrayOutput) ToCloudProjectKubeArrayOutputWithContext(ctx context.Context) CloudProjectKubeArrayOutput {
	return o
}

func (o CloudProjectKubeArrayOutput) Index(i pulumi.IntInput) CloudProjectKubeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudProjectKube {
		return vs[0].([]CloudProjectKube)[vs[1].(int)]
	}).(CloudProjectKubeOutput)
}

type CloudProjectKubeMapOutput struct{ *pulumi.OutputState }

func (CloudProjectKubeMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]CloudProjectKube)(nil))
}

func (o CloudProjectKubeMapOutput) ToCloudProjectKubeMapOutput() CloudProjectKubeMapOutput {
	return o
}

func (o CloudProjectKubeMapOutput) ToCloudProjectKubeMapOutputWithContext(ctx context.Context) CloudProjectKubeMapOutput {
	return o
}

func (o CloudProjectKubeMapOutput) MapIndex(k pulumi.StringInput) CloudProjectKubeOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) CloudProjectKube {
		return vs[0].(map[string]CloudProjectKube)[vs[1].(string)]
	}).(CloudProjectKubeOutput)
}

func init() {
	pulumi.RegisterOutputType(CloudProjectKubeOutput{})
	pulumi.RegisterOutputType(CloudProjectKubePtrOutput{})
	pulumi.RegisterOutputType(CloudProjectKubeArrayOutput{})
	pulumi.RegisterOutputType(CloudProjectKubeMapOutput{})
}
