// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type IploadbalancingHttpFarm struct {
	pulumi.CustomResourceState

	Balance        pulumi.StringPtrOutput                `pulumi:"balance"`
	DisplayName    pulumi.StringPtrOutput                `pulumi:"displayName"`
	Port           pulumi.IntPtrOutput                   `pulumi:"port"`
	Probe          IploadbalancingHttpFarmProbePtrOutput `pulumi:"probe"`
	ServiceName    pulumi.StringOutput                   `pulumi:"serviceName"`
	Stickiness     pulumi.StringPtrOutput                `pulumi:"stickiness"`
	VrackNetworkId pulumi.IntPtrOutput                   `pulumi:"vrackNetworkId"`
	Zone           pulumi.StringOutput                   `pulumi:"zone"`
}

// NewIploadbalancingHttpFarm registers a new resource with the given unique name, arguments, and options.
func NewIploadbalancingHttpFarm(ctx *pulumi.Context,
	name string, args *IploadbalancingHttpFarmArgs, opts ...pulumi.ResourceOption) (*IploadbalancingHttpFarm, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	if args.Zone == nil {
		return nil, errors.New("invalid value for required argument 'Zone'")
	}
	var resource IploadbalancingHttpFarm
	err := ctx.RegisterResource("ovh:index/iploadbalancingHttpFarm:IploadbalancingHttpFarm", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIploadbalancingHttpFarm gets an existing IploadbalancingHttpFarm resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIploadbalancingHttpFarm(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IploadbalancingHttpFarmState, opts ...pulumi.ResourceOption) (*IploadbalancingHttpFarm, error) {
	var resource IploadbalancingHttpFarm
	err := ctx.ReadResource("ovh:index/iploadbalancingHttpFarm:IploadbalancingHttpFarm", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IploadbalancingHttpFarm resources.
type iploadbalancingHttpFarmState struct {
	Balance        *string                       `pulumi:"balance"`
	DisplayName    *string                       `pulumi:"displayName"`
	Port           *int                          `pulumi:"port"`
	Probe          *IploadbalancingHttpFarmProbe `pulumi:"probe"`
	ServiceName    *string                       `pulumi:"serviceName"`
	Stickiness     *string                       `pulumi:"stickiness"`
	VrackNetworkId *int                          `pulumi:"vrackNetworkId"`
	Zone           *string                       `pulumi:"zone"`
}

type IploadbalancingHttpFarmState struct {
	Balance        pulumi.StringPtrInput
	DisplayName    pulumi.StringPtrInput
	Port           pulumi.IntPtrInput
	Probe          IploadbalancingHttpFarmProbePtrInput
	ServiceName    pulumi.StringPtrInput
	Stickiness     pulumi.StringPtrInput
	VrackNetworkId pulumi.IntPtrInput
	Zone           pulumi.StringPtrInput
}

func (IploadbalancingHttpFarmState) ElementType() reflect.Type {
	return reflect.TypeOf((*iploadbalancingHttpFarmState)(nil)).Elem()
}

type iploadbalancingHttpFarmArgs struct {
	Balance        *string                       `pulumi:"balance"`
	DisplayName    *string                       `pulumi:"displayName"`
	Port           *int                          `pulumi:"port"`
	Probe          *IploadbalancingHttpFarmProbe `pulumi:"probe"`
	ServiceName    string                        `pulumi:"serviceName"`
	Stickiness     *string                       `pulumi:"stickiness"`
	VrackNetworkId *int                          `pulumi:"vrackNetworkId"`
	Zone           string                        `pulumi:"zone"`
}

// The set of arguments for constructing a IploadbalancingHttpFarm resource.
type IploadbalancingHttpFarmArgs struct {
	Balance        pulumi.StringPtrInput
	DisplayName    pulumi.StringPtrInput
	Port           pulumi.IntPtrInput
	Probe          IploadbalancingHttpFarmProbePtrInput
	ServiceName    pulumi.StringInput
	Stickiness     pulumi.StringPtrInput
	VrackNetworkId pulumi.IntPtrInput
	Zone           pulumi.StringInput
}

func (IploadbalancingHttpFarmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*iploadbalancingHttpFarmArgs)(nil)).Elem()
}

type IploadbalancingHttpFarmInput interface {
	pulumi.Input

	ToIploadbalancingHttpFarmOutput() IploadbalancingHttpFarmOutput
	ToIploadbalancingHttpFarmOutputWithContext(ctx context.Context) IploadbalancingHttpFarmOutput
}

func (*IploadbalancingHttpFarm) ElementType() reflect.Type {
	return reflect.TypeOf((*IploadbalancingHttpFarm)(nil))
}

func (i *IploadbalancingHttpFarm) ToIploadbalancingHttpFarmOutput() IploadbalancingHttpFarmOutput {
	return i.ToIploadbalancingHttpFarmOutputWithContext(context.Background())
}

func (i *IploadbalancingHttpFarm) ToIploadbalancingHttpFarmOutputWithContext(ctx context.Context) IploadbalancingHttpFarmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IploadbalancingHttpFarmOutput)
}

func (i *IploadbalancingHttpFarm) ToIploadbalancingHttpFarmPtrOutput() IploadbalancingHttpFarmPtrOutput {
	return i.ToIploadbalancingHttpFarmPtrOutputWithContext(context.Background())
}

func (i *IploadbalancingHttpFarm) ToIploadbalancingHttpFarmPtrOutputWithContext(ctx context.Context) IploadbalancingHttpFarmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IploadbalancingHttpFarmPtrOutput)
}

type IploadbalancingHttpFarmPtrInput interface {
	pulumi.Input

	ToIploadbalancingHttpFarmPtrOutput() IploadbalancingHttpFarmPtrOutput
	ToIploadbalancingHttpFarmPtrOutputWithContext(ctx context.Context) IploadbalancingHttpFarmPtrOutput
}

type iploadbalancingHttpFarmPtrType IploadbalancingHttpFarmArgs

func (*iploadbalancingHttpFarmPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IploadbalancingHttpFarm)(nil))
}

func (i *iploadbalancingHttpFarmPtrType) ToIploadbalancingHttpFarmPtrOutput() IploadbalancingHttpFarmPtrOutput {
	return i.ToIploadbalancingHttpFarmPtrOutputWithContext(context.Background())
}

func (i *iploadbalancingHttpFarmPtrType) ToIploadbalancingHttpFarmPtrOutputWithContext(ctx context.Context) IploadbalancingHttpFarmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IploadbalancingHttpFarmPtrOutput)
}

// IploadbalancingHttpFarmArrayInput is an input type that accepts IploadbalancingHttpFarmArray and IploadbalancingHttpFarmArrayOutput values.
// You can construct a concrete instance of `IploadbalancingHttpFarmArrayInput` via:
//
//          IploadbalancingHttpFarmArray{ IploadbalancingHttpFarmArgs{...} }
type IploadbalancingHttpFarmArrayInput interface {
	pulumi.Input

	ToIploadbalancingHttpFarmArrayOutput() IploadbalancingHttpFarmArrayOutput
	ToIploadbalancingHttpFarmArrayOutputWithContext(context.Context) IploadbalancingHttpFarmArrayOutput
}

type IploadbalancingHttpFarmArray []IploadbalancingHttpFarmInput

func (IploadbalancingHttpFarmArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IploadbalancingHttpFarm)(nil)).Elem()
}

func (i IploadbalancingHttpFarmArray) ToIploadbalancingHttpFarmArrayOutput() IploadbalancingHttpFarmArrayOutput {
	return i.ToIploadbalancingHttpFarmArrayOutputWithContext(context.Background())
}

func (i IploadbalancingHttpFarmArray) ToIploadbalancingHttpFarmArrayOutputWithContext(ctx context.Context) IploadbalancingHttpFarmArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IploadbalancingHttpFarmArrayOutput)
}

// IploadbalancingHttpFarmMapInput is an input type that accepts IploadbalancingHttpFarmMap and IploadbalancingHttpFarmMapOutput values.
// You can construct a concrete instance of `IploadbalancingHttpFarmMapInput` via:
//
//          IploadbalancingHttpFarmMap{ "key": IploadbalancingHttpFarmArgs{...} }
type IploadbalancingHttpFarmMapInput interface {
	pulumi.Input

	ToIploadbalancingHttpFarmMapOutput() IploadbalancingHttpFarmMapOutput
	ToIploadbalancingHttpFarmMapOutputWithContext(context.Context) IploadbalancingHttpFarmMapOutput
}

type IploadbalancingHttpFarmMap map[string]IploadbalancingHttpFarmInput

func (IploadbalancingHttpFarmMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IploadbalancingHttpFarm)(nil)).Elem()
}

func (i IploadbalancingHttpFarmMap) ToIploadbalancingHttpFarmMapOutput() IploadbalancingHttpFarmMapOutput {
	return i.ToIploadbalancingHttpFarmMapOutputWithContext(context.Background())
}

func (i IploadbalancingHttpFarmMap) ToIploadbalancingHttpFarmMapOutputWithContext(ctx context.Context) IploadbalancingHttpFarmMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IploadbalancingHttpFarmMapOutput)
}

type IploadbalancingHttpFarmOutput struct{ *pulumi.OutputState }

func (IploadbalancingHttpFarmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IploadbalancingHttpFarm)(nil))
}

func (o IploadbalancingHttpFarmOutput) ToIploadbalancingHttpFarmOutput() IploadbalancingHttpFarmOutput {
	return o
}

func (o IploadbalancingHttpFarmOutput) ToIploadbalancingHttpFarmOutputWithContext(ctx context.Context) IploadbalancingHttpFarmOutput {
	return o
}

func (o IploadbalancingHttpFarmOutput) ToIploadbalancingHttpFarmPtrOutput() IploadbalancingHttpFarmPtrOutput {
	return o.ToIploadbalancingHttpFarmPtrOutputWithContext(context.Background())
}

func (o IploadbalancingHttpFarmOutput) ToIploadbalancingHttpFarmPtrOutputWithContext(ctx context.Context) IploadbalancingHttpFarmPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IploadbalancingHttpFarm) *IploadbalancingHttpFarm {
		return &v
	}).(IploadbalancingHttpFarmPtrOutput)
}

type IploadbalancingHttpFarmPtrOutput struct{ *pulumi.OutputState }

func (IploadbalancingHttpFarmPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IploadbalancingHttpFarm)(nil))
}

func (o IploadbalancingHttpFarmPtrOutput) ToIploadbalancingHttpFarmPtrOutput() IploadbalancingHttpFarmPtrOutput {
	return o
}

func (o IploadbalancingHttpFarmPtrOutput) ToIploadbalancingHttpFarmPtrOutputWithContext(ctx context.Context) IploadbalancingHttpFarmPtrOutput {
	return o
}

func (o IploadbalancingHttpFarmPtrOutput) Elem() IploadbalancingHttpFarmOutput {
	return o.ApplyT(func(v *IploadbalancingHttpFarm) IploadbalancingHttpFarm {
		if v != nil {
			return *v
		}
		var ret IploadbalancingHttpFarm
		return ret
	}).(IploadbalancingHttpFarmOutput)
}

type IploadbalancingHttpFarmArrayOutput struct{ *pulumi.OutputState }

func (IploadbalancingHttpFarmArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IploadbalancingHttpFarm)(nil))
}

func (o IploadbalancingHttpFarmArrayOutput) ToIploadbalancingHttpFarmArrayOutput() IploadbalancingHttpFarmArrayOutput {
	return o
}

func (o IploadbalancingHttpFarmArrayOutput) ToIploadbalancingHttpFarmArrayOutputWithContext(ctx context.Context) IploadbalancingHttpFarmArrayOutput {
	return o
}

func (o IploadbalancingHttpFarmArrayOutput) Index(i pulumi.IntInput) IploadbalancingHttpFarmOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IploadbalancingHttpFarm {
		return vs[0].([]IploadbalancingHttpFarm)[vs[1].(int)]
	}).(IploadbalancingHttpFarmOutput)
}

type IploadbalancingHttpFarmMapOutput struct{ *pulumi.OutputState }

func (IploadbalancingHttpFarmMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]IploadbalancingHttpFarm)(nil))
}

func (o IploadbalancingHttpFarmMapOutput) ToIploadbalancingHttpFarmMapOutput() IploadbalancingHttpFarmMapOutput {
	return o
}

func (o IploadbalancingHttpFarmMapOutput) ToIploadbalancingHttpFarmMapOutputWithContext(ctx context.Context) IploadbalancingHttpFarmMapOutput {
	return o
}

func (o IploadbalancingHttpFarmMapOutput) MapIndex(k pulumi.StringInput) IploadbalancingHttpFarmOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) IploadbalancingHttpFarm {
		return vs[0].(map[string]IploadbalancingHttpFarm)[vs[1].(string)]
	}).(IploadbalancingHttpFarmOutput)
}

func init() {
	pulumi.RegisterOutputType(IploadbalancingHttpFarmOutput{})
	pulumi.RegisterOutputType(IploadbalancingHttpFarmPtrOutput{})
	pulumi.RegisterOutputType(IploadbalancingHttpFarmArrayOutput{})
	pulumi.RegisterOutputType(IploadbalancingHttpFarmMapOutput{})
}
