// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CloudProjectNetworkPrivateSubnet struct {
	pulumi.CustomResourceState

	Cidr      pulumi.StringOutput                               `pulumi:"cidr"`
	Dhcp      pulumi.BoolPtrOutput                              `pulumi:"dhcp"`
	End       pulumi.StringOutput                               `pulumi:"end"`
	GatewayIp pulumi.StringOutput                               `pulumi:"gatewayIp"`
	IpPools   CloudProjectNetworkPrivateSubnetIpPoolArrayOutput `pulumi:"ipPools"`
	Network   pulumi.StringOutput                               `pulumi:"network"`
	NetworkId pulumi.StringOutput                               `pulumi:"networkId"`
	NoGateway pulumi.BoolPtrOutput                              `pulumi:"noGateway"`
	Region    pulumi.StringOutput                               `pulumi:"region"`
	// Service name of the resource representing the id of the cloud project.
	ServiceName pulumi.StringOutput `pulumi:"serviceName"`
	Start       pulumi.StringOutput `pulumi:"start"`
}

// NewCloudProjectNetworkPrivateSubnet registers a new resource with the given unique name, arguments, and options.
func NewCloudProjectNetworkPrivateSubnet(ctx *pulumi.Context,
	name string, args *CloudProjectNetworkPrivateSubnetArgs, opts ...pulumi.ResourceOption) (*CloudProjectNetworkPrivateSubnet, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.End == nil {
		return nil, errors.New("invalid value for required argument 'End'")
	}
	if args.Network == nil {
		return nil, errors.New("invalid value for required argument 'Network'")
	}
	if args.NetworkId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkId'")
	}
	if args.Region == nil {
		return nil, errors.New("invalid value for required argument 'Region'")
	}
	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	if args.Start == nil {
		return nil, errors.New("invalid value for required argument 'Start'")
	}
	var resource CloudProjectNetworkPrivateSubnet
	err := ctx.RegisterResource("ovh:index/cloudProjectNetworkPrivateSubnet:CloudProjectNetworkPrivateSubnet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudProjectNetworkPrivateSubnet gets an existing CloudProjectNetworkPrivateSubnet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudProjectNetworkPrivateSubnet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudProjectNetworkPrivateSubnetState, opts ...pulumi.ResourceOption) (*CloudProjectNetworkPrivateSubnet, error) {
	var resource CloudProjectNetworkPrivateSubnet
	err := ctx.ReadResource("ovh:index/cloudProjectNetworkPrivateSubnet:CloudProjectNetworkPrivateSubnet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudProjectNetworkPrivateSubnet resources.
type cloudProjectNetworkPrivateSubnetState struct {
	Cidr      *string                                  `pulumi:"cidr"`
	Dhcp      *bool                                    `pulumi:"dhcp"`
	End       *string                                  `pulumi:"end"`
	GatewayIp *string                                  `pulumi:"gatewayIp"`
	IpPools   []CloudProjectNetworkPrivateSubnetIpPool `pulumi:"ipPools"`
	Network   *string                                  `pulumi:"network"`
	NetworkId *string                                  `pulumi:"networkId"`
	NoGateway *bool                                    `pulumi:"noGateway"`
	Region    *string                                  `pulumi:"region"`
	// Service name of the resource representing the id of the cloud project.
	ServiceName *string `pulumi:"serviceName"`
	Start       *string `pulumi:"start"`
}

type CloudProjectNetworkPrivateSubnetState struct {
	Cidr      pulumi.StringPtrInput
	Dhcp      pulumi.BoolPtrInput
	End       pulumi.StringPtrInput
	GatewayIp pulumi.StringPtrInput
	IpPools   CloudProjectNetworkPrivateSubnetIpPoolArrayInput
	Network   pulumi.StringPtrInput
	NetworkId pulumi.StringPtrInput
	NoGateway pulumi.BoolPtrInput
	Region    pulumi.StringPtrInput
	// Service name of the resource representing the id of the cloud project.
	ServiceName pulumi.StringPtrInput
	Start       pulumi.StringPtrInput
}

func (CloudProjectNetworkPrivateSubnetState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudProjectNetworkPrivateSubnetState)(nil)).Elem()
}

type cloudProjectNetworkPrivateSubnetArgs struct {
	Dhcp      *bool  `pulumi:"dhcp"`
	End       string `pulumi:"end"`
	Network   string `pulumi:"network"`
	NetworkId string `pulumi:"networkId"`
	NoGateway *bool  `pulumi:"noGateway"`
	Region    string `pulumi:"region"`
	// Service name of the resource representing the id of the cloud project.
	ServiceName string `pulumi:"serviceName"`
	Start       string `pulumi:"start"`
}

// The set of arguments for constructing a CloudProjectNetworkPrivateSubnet resource.
type CloudProjectNetworkPrivateSubnetArgs struct {
	Dhcp      pulumi.BoolPtrInput
	End       pulumi.StringInput
	Network   pulumi.StringInput
	NetworkId pulumi.StringInput
	NoGateway pulumi.BoolPtrInput
	Region    pulumi.StringInput
	// Service name of the resource representing the id of the cloud project.
	ServiceName pulumi.StringInput
	Start       pulumi.StringInput
}

func (CloudProjectNetworkPrivateSubnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudProjectNetworkPrivateSubnetArgs)(nil)).Elem()
}

type CloudProjectNetworkPrivateSubnetInput interface {
	pulumi.Input

	ToCloudProjectNetworkPrivateSubnetOutput() CloudProjectNetworkPrivateSubnetOutput
	ToCloudProjectNetworkPrivateSubnetOutputWithContext(ctx context.Context) CloudProjectNetworkPrivateSubnetOutput
}

func (*CloudProjectNetworkPrivateSubnet) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudProjectNetworkPrivateSubnet)(nil))
}

func (i *CloudProjectNetworkPrivateSubnet) ToCloudProjectNetworkPrivateSubnetOutput() CloudProjectNetworkPrivateSubnetOutput {
	return i.ToCloudProjectNetworkPrivateSubnetOutputWithContext(context.Background())
}

func (i *CloudProjectNetworkPrivateSubnet) ToCloudProjectNetworkPrivateSubnetOutputWithContext(ctx context.Context) CloudProjectNetworkPrivateSubnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProjectNetworkPrivateSubnetOutput)
}

func (i *CloudProjectNetworkPrivateSubnet) ToCloudProjectNetworkPrivateSubnetPtrOutput() CloudProjectNetworkPrivateSubnetPtrOutput {
	return i.ToCloudProjectNetworkPrivateSubnetPtrOutputWithContext(context.Background())
}

func (i *CloudProjectNetworkPrivateSubnet) ToCloudProjectNetworkPrivateSubnetPtrOutputWithContext(ctx context.Context) CloudProjectNetworkPrivateSubnetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProjectNetworkPrivateSubnetPtrOutput)
}

type CloudProjectNetworkPrivateSubnetPtrInput interface {
	pulumi.Input

	ToCloudProjectNetworkPrivateSubnetPtrOutput() CloudProjectNetworkPrivateSubnetPtrOutput
	ToCloudProjectNetworkPrivateSubnetPtrOutputWithContext(ctx context.Context) CloudProjectNetworkPrivateSubnetPtrOutput
}

type cloudProjectNetworkPrivateSubnetPtrType CloudProjectNetworkPrivateSubnetArgs

func (*cloudProjectNetworkPrivateSubnetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudProjectNetworkPrivateSubnet)(nil))
}

func (i *cloudProjectNetworkPrivateSubnetPtrType) ToCloudProjectNetworkPrivateSubnetPtrOutput() CloudProjectNetworkPrivateSubnetPtrOutput {
	return i.ToCloudProjectNetworkPrivateSubnetPtrOutputWithContext(context.Background())
}

func (i *cloudProjectNetworkPrivateSubnetPtrType) ToCloudProjectNetworkPrivateSubnetPtrOutputWithContext(ctx context.Context) CloudProjectNetworkPrivateSubnetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProjectNetworkPrivateSubnetPtrOutput)
}

// CloudProjectNetworkPrivateSubnetArrayInput is an input type that accepts CloudProjectNetworkPrivateSubnetArray and CloudProjectNetworkPrivateSubnetArrayOutput values.
// You can construct a concrete instance of `CloudProjectNetworkPrivateSubnetArrayInput` via:
//
//          CloudProjectNetworkPrivateSubnetArray{ CloudProjectNetworkPrivateSubnetArgs{...} }
type CloudProjectNetworkPrivateSubnetArrayInput interface {
	pulumi.Input

	ToCloudProjectNetworkPrivateSubnetArrayOutput() CloudProjectNetworkPrivateSubnetArrayOutput
	ToCloudProjectNetworkPrivateSubnetArrayOutputWithContext(context.Context) CloudProjectNetworkPrivateSubnetArrayOutput
}

type CloudProjectNetworkPrivateSubnetArray []CloudProjectNetworkPrivateSubnetInput

func (CloudProjectNetworkPrivateSubnetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CloudProjectNetworkPrivateSubnet)(nil)).Elem()
}

func (i CloudProjectNetworkPrivateSubnetArray) ToCloudProjectNetworkPrivateSubnetArrayOutput() CloudProjectNetworkPrivateSubnetArrayOutput {
	return i.ToCloudProjectNetworkPrivateSubnetArrayOutputWithContext(context.Background())
}

func (i CloudProjectNetworkPrivateSubnetArray) ToCloudProjectNetworkPrivateSubnetArrayOutputWithContext(ctx context.Context) CloudProjectNetworkPrivateSubnetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProjectNetworkPrivateSubnetArrayOutput)
}

// CloudProjectNetworkPrivateSubnetMapInput is an input type that accepts CloudProjectNetworkPrivateSubnetMap and CloudProjectNetworkPrivateSubnetMapOutput values.
// You can construct a concrete instance of `CloudProjectNetworkPrivateSubnetMapInput` via:
//
//          CloudProjectNetworkPrivateSubnetMap{ "key": CloudProjectNetworkPrivateSubnetArgs{...} }
type CloudProjectNetworkPrivateSubnetMapInput interface {
	pulumi.Input

	ToCloudProjectNetworkPrivateSubnetMapOutput() CloudProjectNetworkPrivateSubnetMapOutput
	ToCloudProjectNetworkPrivateSubnetMapOutputWithContext(context.Context) CloudProjectNetworkPrivateSubnetMapOutput
}

type CloudProjectNetworkPrivateSubnetMap map[string]CloudProjectNetworkPrivateSubnetInput

func (CloudProjectNetworkPrivateSubnetMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CloudProjectNetworkPrivateSubnet)(nil)).Elem()
}

func (i CloudProjectNetworkPrivateSubnetMap) ToCloudProjectNetworkPrivateSubnetMapOutput() CloudProjectNetworkPrivateSubnetMapOutput {
	return i.ToCloudProjectNetworkPrivateSubnetMapOutputWithContext(context.Background())
}

func (i CloudProjectNetworkPrivateSubnetMap) ToCloudProjectNetworkPrivateSubnetMapOutputWithContext(ctx context.Context) CloudProjectNetworkPrivateSubnetMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProjectNetworkPrivateSubnetMapOutput)
}

type CloudProjectNetworkPrivateSubnetOutput struct{ *pulumi.OutputState }

func (CloudProjectNetworkPrivateSubnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudProjectNetworkPrivateSubnet)(nil))
}

func (o CloudProjectNetworkPrivateSubnetOutput) ToCloudProjectNetworkPrivateSubnetOutput() CloudProjectNetworkPrivateSubnetOutput {
	return o
}

func (o CloudProjectNetworkPrivateSubnetOutput) ToCloudProjectNetworkPrivateSubnetOutputWithContext(ctx context.Context) CloudProjectNetworkPrivateSubnetOutput {
	return o
}

func (o CloudProjectNetworkPrivateSubnetOutput) ToCloudProjectNetworkPrivateSubnetPtrOutput() CloudProjectNetworkPrivateSubnetPtrOutput {
	return o.ToCloudProjectNetworkPrivateSubnetPtrOutputWithContext(context.Background())
}

func (o CloudProjectNetworkPrivateSubnetOutput) ToCloudProjectNetworkPrivateSubnetPtrOutputWithContext(ctx context.Context) CloudProjectNetworkPrivateSubnetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudProjectNetworkPrivateSubnet) *CloudProjectNetworkPrivateSubnet {
		return &v
	}).(CloudProjectNetworkPrivateSubnetPtrOutput)
}

type CloudProjectNetworkPrivateSubnetPtrOutput struct{ *pulumi.OutputState }

func (CloudProjectNetworkPrivateSubnetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudProjectNetworkPrivateSubnet)(nil))
}

func (o CloudProjectNetworkPrivateSubnetPtrOutput) ToCloudProjectNetworkPrivateSubnetPtrOutput() CloudProjectNetworkPrivateSubnetPtrOutput {
	return o
}

func (o CloudProjectNetworkPrivateSubnetPtrOutput) ToCloudProjectNetworkPrivateSubnetPtrOutputWithContext(ctx context.Context) CloudProjectNetworkPrivateSubnetPtrOutput {
	return o
}

func (o CloudProjectNetworkPrivateSubnetPtrOutput) Elem() CloudProjectNetworkPrivateSubnetOutput {
	return o.ApplyT(func(v *CloudProjectNetworkPrivateSubnet) CloudProjectNetworkPrivateSubnet {
		if v != nil {
			return *v
		}
		var ret CloudProjectNetworkPrivateSubnet
		return ret
	}).(CloudProjectNetworkPrivateSubnetOutput)
}

type CloudProjectNetworkPrivateSubnetArrayOutput struct{ *pulumi.OutputState }

func (CloudProjectNetworkPrivateSubnetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudProjectNetworkPrivateSubnet)(nil))
}

func (o CloudProjectNetworkPrivateSubnetArrayOutput) ToCloudProjectNetworkPrivateSubnetArrayOutput() CloudProjectNetworkPrivateSubnetArrayOutput {
	return o
}

func (o CloudProjectNetworkPrivateSubnetArrayOutput) ToCloudProjectNetworkPrivateSubnetArrayOutputWithContext(ctx context.Context) CloudProjectNetworkPrivateSubnetArrayOutput {
	return o
}

func (o CloudProjectNetworkPrivateSubnetArrayOutput) Index(i pulumi.IntInput) CloudProjectNetworkPrivateSubnetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudProjectNetworkPrivateSubnet {
		return vs[0].([]CloudProjectNetworkPrivateSubnet)[vs[1].(int)]
	}).(CloudProjectNetworkPrivateSubnetOutput)
}

type CloudProjectNetworkPrivateSubnetMapOutput struct{ *pulumi.OutputState }

func (CloudProjectNetworkPrivateSubnetMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]CloudProjectNetworkPrivateSubnet)(nil))
}

func (o CloudProjectNetworkPrivateSubnetMapOutput) ToCloudProjectNetworkPrivateSubnetMapOutput() CloudProjectNetworkPrivateSubnetMapOutput {
	return o
}

func (o CloudProjectNetworkPrivateSubnetMapOutput) ToCloudProjectNetworkPrivateSubnetMapOutputWithContext(ctx context.Context) CloudProjectNetworkPrivateSubnetMapOutput {
	return o
}

func (o CloudProjectNetworkPrivateSubnetMapOutput) MapIndex(k pulumi.StringInput) CloudProjectNetworkPrivateSubnetOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) CloudProjectNetworkPrivateSubnet {
		return vs[0].(map[string]CloudProjectNetworkPrivateSubnet)[vs[1].(string)]
	}).(CloudProjectNetworkPrivateSubnetOutput)
}

func init() {
	pulumi.RegisterOutputType(CloudProjectNetworkPrivateSubnetOutput{})
	pulumi.RegisterOutputType(CloudProjectNetworkPrivateSubnetPtrOutput{})
	pulumi.RegisterOutputType(CloudProjectNetworkPrivateSubnetArrayOutput{})
	pulumi.RegisterOutputType(CloudProjectNetworkPrivateSubnetMapOutput{})
}
