// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type Ovh_vrack struct {
	pulumi.CustomResourceState

	// yourvrackdescription
	Description pulumi.StringOutput `pulumi:"description"`
	// yourvrackname
	Name pulumi.StringOutput `pulumi:"name"`
	// Details about an Order
	Orders Ovh_vrackOrderArrayOutput `pulumi:"orders"`
	// Ovh Subsidiary
	OvhSubsidiary pulumi.StringOutput `pulumi:"ovhSubsidiary"`
	// Ovh payment mode
	PaymentMean pulumi.StringOutput `pulumi:"paymentMean"`
	// Product Plan to order
	Plan Ovh_vrackPlanOutput `pulumi:"plan"`
	// Product Plan to order
	PlanOptions Ovh_vrackPlanOptionArrayOutput `pulumi:"planOptions"`
	// The internal name of your vrack
	ServiceName pulumi.StringOutput `pulumi:"serviceName"`
}

// NewOvh_vrack registers a new resource with the given unique name, arguments, and options.
func NewOvh_vrack(ctx *pulumi.Context,
	name string, args *Ovh_vrackArgs, opts ...pulumi.ResourceOption) (*Ovh_vrack, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.OvhSubsidiary == nil {
		return nil, errors.New("invalid value for required argument 'OvhSubsidiary'")
	}
	if args.PaymentMean == nil {
		return nil, errors.New("invalid value for required argument 'PaymentMean'")
	}
	if args.Plan == nil {
		return nil, errors.New("invalid value for required argument 'Plan'")
	}
	var resource Ovh_vrack
	err := ctx.RegisterResource("ovh:index/ovh_vrack:ovh_vrack", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOvh_vrack gets an existing Ovh_vrack resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOvh_vrack(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *Ovh_vrackState, opts ...pulumi.ResourceOption) (*Ovh_vrack, error) {
	var resource Ovh_vrack
	err := ctx.ReadResource("ovh:index/ovh_vrack:ovh_vrack", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Ovh_vrack resources.
type ovh_vrackState struct {
	// yourvrackdescription
	Description *string `pulumi:"description"`
	// yourvrackname
	Name *string `pulumi:"name"`
	// Details about an Order
	Orders []Ovh_vrackOrder `pulumi:"orders"`
	// Ovh Subsidiary
	OvhSubsidiary *string `pulumi:"ovhSubsidiary"`
	// Ovh payment mode
	PaymentMean *string `pulumi:"paymentMean"`
	// Product Plan to order
	Plan *Ovh_vrackPlan `pulumi:"plan"`
	// Product Plan to order
	PlanOptions []Ovh_vrackPlanOption `pulumi:"planOptions"`
	// The internal name of your vrack
	ServiceName *string `pulumi:"serviceName"`
}

type Ovh_vrackState struct {
	// yourvrackdescription
	Description pulumi.StringPtrInput
	// yourvrackname
	Name pulumi.StringPtrInput
	// Details about an Order
	Orders Ovh_vrackOrderArrayInput
	// Ovh Subsidiary
	OvhSubsidiary pulumi.StringPtrInput
	// Ovh payment mode
	PaymentMean pulumi.StringPtrInput
	// Product Plan to order
	Plan Ovh_vrackPlanPtrInput
	// Product Plan to order
	PlanOptions Ovh_vrackPlanOptionArrayInput
	// The internal name of your vrack
	ServiceName pulumi.StringPtrInput
}

func (Ovh_vrackState) ElementType() reflect.Type {
	return reflect.TypeOf((*ovh_vrackState)(nil)).Elem()
}

type ovh_vrackArgs struct {
	// yourvrackdescription
	Description *string `pulumi:"description"`
	// yourvrackname
	Name *string `pulumi:"name"`
	// Ovh Subsidiary
	OvhSubsidiary string `pulumi:"ovhSubsidiary"`
	// Ovh payment mode
	PaymentMean string `pulumi:"paymentMean"`
	// Product Plan to order
	Plan Ovh_vrackPlan `pulumi:"plan"`
	// Product Plan to order
	PlanOptions []Ovh_vrackPlanOption `pulumi:"planOptions"`
}

// The set of arguments for constructing a Ovh_vrack resource.
type Ovh_vrackArgs struct {
	// yourvrackdescription
	Description pulumi.StringPtrInput
	// yourvrackname
	Name pulumi.StringPtrInput
	// Ovh Subsidiary
	OvhSubsidiary pulumi.StringInput
	// Ovh payment mode
	PaymentMean pulumi.StringInput
	// Product Plan to order
	Plan Ovh_vrackPlanInput
	// Product Plan to order
	PlanOptions Ovh_vrackPlanOptionArrayInput
}

func (Ovh_vrackArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ovh_vrackArgs)(nil)).Elem()
}

type Ovh_vrackInput interface {
	pulumi.Input

	ToOvh_vrackOutput() Ovh_vrackOutput
	ToOvh_vrackOutputWithContext(ctx context.Context) Ovh_vrackOutput
}

func (*Ovh_vrack) ElementType() reflect.Type {
	return reflect.TypeOf((*Ovh_vrack)(nil))
}

func (i *Ovh_vrack) ToOvh_vrackOutput() Ovh_vrackOutput {
	return i.ToOvh_vrackOutputWithContext(context.Background())
}

func (i *Ovh_vrack) ToOvh_vrackOutputWithContext(ctx context.Context) Ovh_vrackOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ovh_vrackOutput)
}

func (i *Ovh_vrack) ToOvh_vrackPtrOutput() Ovh_vrackPtrOutput {
	return i.ToOvh_vrackPtrOutputWithContext(context.Background())
}

func (i *Ovh_vrack) ToOvh_vrackPtrOutputWithContext(ctx context.Context) Ovh_vrackPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ovh_vrackPtrOutput)
}

type Ovh_vrackPtrInput interface {
	pulumi.Input

	ToOvh_vrackPtrOutput() Ovh_vrackPtrOutput
	ToOvh_vrackPtrOutputWithContext(ctx context.Context) Ovh_vrackPtrOutput
}

type ovh_vrackPtrType Ovh_vrackArgs

func (*ovh_vrackPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Ovh_vrack)(nil))
}

func (i *ovh_vrackPtrType) ToOvh_vrackPtrOutput() Ovh_vrackPtrOutput {
	return i.ToOvh_vrackPtrOutputWithContext(context.Background())
}

func (i *ovh_vrackPtrType) ToOvh_vrackPtrOutputWithContext(ctx context.Context) Ovh_vrackPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ovh_vrackPtrOutput)
}

// Ovh_vrackArrayInput is an input type that accepts Ovh_vrackArray and Ovh_vrackArrayOutput values.
// You can construct a concrete instance of `Ovh_vrackArrayInput` via:
//
//          Ovh_vrackArray{ Ovh_vrackArgs{...} }
type Ovh_vrackArrayInput interface {
	pulumi.Input

	ToOvh_vrackArrayOutput() Ovh_vrackArrayOutput
	ToOvh_vrackArrayOutputWithContext(context.Context) Ovh_vrackArrayOutput
}

type Ovh_vrackArray []Ovh_vrackInput

func (Ovh_vrackArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Ovh_vrack)(nil)).Elem()
}

func (i Ovh_vrackArray) ToOvh_vrackArrayOutput() Ovh_vrackArrayOutput {
	return i.ToOvh_vrackArrayOutputWithContext(context.Background())
}

func (i Ovh_vrackArray) ToOvh_vrackArrayOutputWithContext(ctx context.Context) Ovh_vrackArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ovh_vrackArrayOutput)
}

// Ovh_vrackMapInput is an input type that accepts Ovh_vrackMap and Ovh_vrackMapOutput values.
// You can construct a concrete instance of `Ovh_vrackMapInput` via:
//
//          Ovh_vrackMap{ "key": Ovh_vrackArgs{...} }
type Ovh_vrackMapInput interface {
	pulumi.Input

	ToOvh_vrackMapOutput() Ovh_vrackMapOutput
	ToOvh_vrackMapOutputWithContext(context.Context) Ovh_vrackMapOutput
}

type Ovh_vrackMap map[string]Ovh_vrackInput

func (Ovh_vrackMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Ovh_vrack)(nil)).Elem()
}

func (i Ovh_vrackMap) ToOvh_vrackMapOutput() Ovh_vrackMapOutput {
	return i.ToOvh_vrackMapOutputWithContext(context.Background())
}

func (i Ovh_vrackMap) ToOvh_vrackMapOutputWithContext(ctx context.Context) Ovh_vrackMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ovh_vrackMapOutput)
}

type Ovh_vrackOutput struct{ *pulumi.OutputState }

func (Ovh_vrackOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Ovh_vrack)(nil))
}

func (o Ovh_vrackOutput) ToOvh_vrackOutput() Ovh_vrackOutput {
	return o
}

func (o Ovh_vrackOutput) ToOvh_vrackOutputWithContext(ctx context.Context) Ovh_vrackOutput {
	return o
}

func (o Ovh_vrackOutput) ToOvh_vrackPtrOutput() Ovh_vrackPtrOutput {
	return o.ToOvh_vrackPtrOutputWithContext(context.Background())
}

func (o Ovh_vrackOutput) ToOvh_vrackPtrOutputWithContext(ctx context.Context) Ovh_vrackPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Ovh_vrack) *Ovh_vrack {
		return &v
	}).(Ovh_vrackPtrOutput)
}

type Ovh_vrackPtrOutput struct{ *pulumi.OutputState }

func (Ovh_vrackPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Ovh_vrack)(nil))
}

func (o Ovh_vrackPtrOutput) ToOvh_vrackPtrOutput() Ovh_vrackPtrOutput {
	return o
}

func (o Ovh_vrackPtrOutput) ToOvh_vrackPtrOutputWithContext(ctx context.Context) Ovh_vrackPtrOutput {
	return o
}

func (o Ovh_vrackPtrOutput) Elem() Ovh_vrackOutput {
	return o.ApplyT(func(v *Ovh_vrack) Ovh_vrack {
		if v != nil {
			return *v
		}
		var ret Ovh_vrack
		return ret
	}).(Ovh_vrackOutput)
}

type Ovh_vrackArrayOutput struct{ *pulumi.OutputState }

func (Ovh_vrackArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Ovh_vrack)(nil))
}

func (o Ovh_vrackArrayOutput) ToOvh_vrackArrayOutput() Ovh_vrackArrayOutput {
	return o
}

func (o Ovh_vrackArrayOutput) ToOvh_vrackArrayOutputWithContext(ctx context.Context) Ovh_vrackArrayOutput {
	return o
}

func (o Ovh_vrackArrayOutput) Index(i pulumi.IntInput) Ovh_vrackOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Ovh_vrack {
		return vs[0].([]Ovh_vrack)[vs[1].(int)]
	}).(Ovh_vrackOutput)
}

type Ovh_vrackMapOutput struct{ *pulumi.OutputState }

func (Ovh_vrackMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]Ovh_vrack)(nil))
}

func (o Ovh_vrackMapOutput) ToOvh_vrackMapOutput() Ovh_vrackMapOutput {
	return o
}

func (o Ovh_vrackMapOutput) ToOvh_vrackMapOutputWithContext(ctx context.Context) Ovh_vrackMapOutput {
	return o
}

func (o Ovh_vrackMapOutput) MapIndex(k pulumi.StringInput) Ovh_vrackOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) Ovh_vrack {
		return vs[0].(map[string]Ovh_vrack)[vs[1].(string)]
	}).(Ovh_vrackOutput)
}

func init() {
	pulumi.RegisterOutputType(Ovh_vrackOutput{})
	pulumi.RegisterOutputType(Ovh_vrackPtrOutput{})
	pulumi.RegisterOutputType(Ovh_vrackArrayOutput{})
	pulumi.RegisterOutputType(Ovh_vrackMapOutput{})
}
