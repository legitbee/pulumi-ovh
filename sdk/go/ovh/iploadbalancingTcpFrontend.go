// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type IploadbalancingTcpFrontend struct {
	pulumi.CustomResourceState

	AllowedSources pulumi.StringArrayOutput `pulumi:"allowedSources"`
	DedicatedIpfos pulumi.StringArrayOutput `pulumi:"dedicatedIpfos"`
	DefaultFarmId  pulumi.IntOutput         `pulumi:"defaultFarmId"`
	DefaultSslId   pulumi.IntOutput         `pulumi:"defaultSslId"`
	Disabled       pulumi.BoolPtrOutput     `pulumi:"disabled"`
	DisplayName    pulumi.StringPtrOutput   `pulumi:"displayName"`
	Port           pulumi.StringOutput      `pulumi:"port"`
	ServiceName    pulumi.StringOutput      `pulumi:"serviceName"`
	Ssl            pulumi.BoolPtrOutput     `pulumi:"ssl"`
	Zone           pulumi.StringOutput      `pulumi:"zone"`
}

// NewIploadbalancingTcpFrontend registers a new resource with the given unique name, arguments, and options.
func NewIploadbalancingTcpFrontend(ctx *pulumi.Context,
	name string, args *IploadbalancingTcpFrontendArgs, opts ...pulumi.ResourceOption) (*IploadbalancingTcpFrontend, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Port == nil {
		return nil, errors.New("invalid value for required argument 'Port'")
	}
	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	if args.Zone == nil {
		return nil, errors.New("invalid value for required argument 'Zone'")
	}
	var resource IploadbalancingTcpFrontend
	err := ctx.RegisterResource("ovh:index/iploadbalancingTcpFrontend:IploadbalancingTcpFrontend", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIploadbalancingTcpFrontend gets an existing IploadbalancingTcpFrontend resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIploadbalancingTcpFrontend(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IploadbalancingTcpFrontendState, opts ...pulumi.ResourceOption) (*IploadbalancingTcpFrontend, error) {
	var resource IploadbalancingTcpFrontend
	err := ctx.ReadResource("ovh:index/iploadbalancingTcpFrontend:IploadbalancingTcpFrontend", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IploadbalancingTcpFrontend resources.
type iploadbalancingTcpFrontendState struct {
	AllowedSources []string `pulumi:"allowedSources"`
	DedicatedIpfos []string `pulumi:"dedicatedIpfos"`
	DefaultFarmId  *int     `pulumi:"defaultFarmId"`
	DefaultSslId   *int     `pulumi:"defaultSslId"`
	Disabled       *bool    `pulumi:"disabled"`
	DisplayName    *string  `pulumi:"displayName"`
	Port           *string  `pulumi:"port"`
	ServiceName    *string  `pulumi:"serviceName"`
	Ssl            *bool    `pulumi:"ssl"`
	Zone           *string  `pulumi:"zone"`
}

type IploadbalancingTcpFrontendState struct {
	AllowedSources pulumi.StringArrayInput
	DedicatedIpfos pulumi.StringArrayInput
	DefaultFarmId  pulumi.IntPtrInput
	DefaultSslId   pulumi.IntPtrInput
	Disabled       pulumi.BoolPtrInput
	DisplayName    pulumi.StringPtrInput
	Port           pulumi.StringPtrInput
	ServiceName    pulumi.StringPtrInput
	Ssl            pulumi.BoolPtrInput
	Zone           pulumi.StringPtrInput
}

func (IploadbalancingTcpFrontendState) ElementType() reflect.Type {
	return reflect.TypeOf((*iploadbalancingTcpFrontendState)(nil)).Elem()
}

type iploadbalancingTcpFrontendArgs struct {
	AllowedSources []string `pulumi:"allowedSources"`
	DedicatedIpfos []string `pulumi:"dedicatedIpfos"`
	DefaultFarmId  *int     `pulumi:"defaultFarmId"`
	DefaultSslId   *int     `pulumi:"defaultSslId"`
	Disabled       *bool    `pulumi:"disabled"`
	DisplayName    *string  `pulumi:"displayName"`
	Port           string   `pulumi:"port"`
	ServiceName    string   `pulumi:"serviceName"`
	Ssl            *bool    `pulumi:"ssl"`
	Zone           string   `pulumi:"zone"`
}

// The set of arguments for constructing a IploadbalancingTcpFrontend resource.
type IploadbalancingTcpFrontendArgs struct {
	AllowedSources pulumi.StringArrayInput
	DedicatedIpfos pulumi.StringArrayInput
	DefaultFarmId  pulumi.IntPtrInput
	DefaultSslId   pulumi.IntPtrInput
	Disabled       pulumi.BoolPtrInput
	DisplayName    pulumi.StringPtrInput
	Port           pulumi.StringInput
	ServiceName    pulumi.StringInput
	Ssl            pulumi.BoolPtrInput
	Zone           pulumi.StringInput
}

func (IploadbalancingTcpFrontendArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*iploadbalancingTcpFrontendArgs)(nil)).Elem()
}

type IploadbalancingTcpFrontendInput interface {
	pulumi.Input

	ToIploadbalancingTcpFrontendOutput() IploadbalancingTcpFrontendOutput
	ToIploadbalancingTcpFrontendOutputWithContext(ctx context.Context) IploadbalancingTcpFrontendOutput
}

func (*IploadbalancingTcpFrontend) ElementType() reflect.Type {
	return reflect.TypeOf((*IploadbalancingTcpFrontend)(nil))
}

func (i *IploadbalancingTcpFrontend) ToIploadbalancingTcpFrontendOutput() IploadbalancingTcpFrontendOutput {
	return i.ToIploadbalancingTcpFrontendOutputWithContext(context.Background())
}

func (i *IploadbalancingTcpFrontend) ToIploadbalancingTcpFrontendOutputWithContext(ctx context.Context) IploadbalancingTcpFrontendOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IploadbalancingTcpFrontendOutput)
}

func (i *IploadbalancingTcpFrontend) ToIploadbalancingTcpFrontendPtrOutput() IploadbalancingTcpFrontendPtrOutput {
	return i.ToIploadbalancingTcpFrontendPtrOutputWithContext(context.Background())
}

func (i *IploadbalancingTcpFrontend) ToIploadbalancingTcpFrontendPtrOutputWithContext(ctx context.Context) IploadbalancingTcpFrontendPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IploadbalancingTcpFrontendPtrOutput)
}

type IploadbalancingTcpFrontendPtrInput interface {
	pulumi.Input

	ToIploadbalancingTcpFrontendPtrOutput() IploadbalancingTcpFrontendPtrOutput
	ToIploadbalancingTcpFrontendPtrOutputWithContext(ctx context.Context) IploadbalancingTcpFrontendPtrOutput
}

type iploadbalancingTcpFrontendPtrType IploadbalancingTcpFrontendArgs

func (*iploadbalancingTcpFrontendPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IploadbalancingTcpFrontend)(nil))
}

func (i *iploadbalancingTcpFrontendPtrType) ToIploadbalancingTcpFrontendPtrOutput() IploadbalancingTcpFrontendPtrOutput {
	return i.ToIploadbalancingTcpFrontendPtrOutputWithContext(context.Background())
}

func (i *iploadbalancingTcpFrontendPtrType) ToIploadbalancingTcpFrontendPtrOutputWithContext(ctx context.Context) IploadbalancingTcpFrontendPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IploadbalancingTcpFrontendPtrOutput)
}

// IploadbalancingTcpFrontendArrayInput is an input type that accepts IploadbalancingTcpFrontendArray and IploadbalancingTcpFrontendArrayOutput values.
// You can construct a concrete instance of `IploadbalancingTcpFrontendArrayInput` via:
//
//          IploadbalancingTcpFrontendArray{ IploadbalancingTcpFrontendArgs{...} }
type IploadbalancingTcpFrontendArrayInput interface {
	pulumi.Input

	ToIploadbalancingTcpFrontendArrayOutput() IploadbalancingTcpFrontendArrayOutput
	ToIploadbalancingTcpFrontendArrayOutputWithContext(context.Context) IploadbalancingTcpFrontendArrayOutput
}

type IploadbalancingTcpFrontendArray []IploadbalancingTcpFrontendInput

func (IploadbalancingTcpFrontendArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IploadbalancingTcpFrontend)(nil)).Elem()
}

func (i IploadbalancingTcpFrontendArray) ToIploadbalancingTcpFrontendArrayOutput() IploadbalancingTcpFrontendArrayOutput {
	return i.ToIploadbalancingTcpFrontendArrayOutputWithContext(context.Background())
}

func (i IploadbalancingTcpFrontendArray) ToIploadbalancingTcpFrontendArrayOutputWithContext(ctx context.Context) IploadbalancingTcpFrontendArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IploadbalancingTcpFrontendArrayOutput)
}

// IploadbalancingTcpFrontendMapInput is an input type that accepts IploadbalancingTcpFrontendMap and IploadbalancingTcpFrontendMapOutput values.
// You can construct a concrete instance of `IploadbalancingTcpFrontendMapInput` via:
//
//          IploadbalancingTcpFrontendMap{ "key": IploadbalancingTcpFrontendArgs{...} }
type IploadbalancingTcpFrontendMapInput interface {
	pulumi.Input

	ToIploadbalancingTcpFrontendMapOutput() IploadbalancingTcpFrontendMapOutput
	ToIploadbalancingTcpFrontendMapOutputWithContext(context.Context) IploadbalancingTcpFrontendMapOutput
}

type IploadbalancingTcpFrontendMap map[string]IploadbalancingTcpFrontendInput

func (IploadbalancingTcpFrontendMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IploadbalancingTcpFrontend)(nil)).Elem()
}

func (i IploadbalancingTcpFrontendMap) ToIploadbalancingTcpFrontendMapOutput() IploadbalancingTcpFrontendMapOutput {
	return i.ToIploadbalancingTcpFrontendMapOutputWithContext(context.Background())
}

func (i IploadbalancingTcpFrontendMap) ToIploadbalancingTcpFrontendMapOutputWithContext(ctx context.Context) IploadbalancingTcpFrontendMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IploadbalancingTcpFrontendMapOutput)
}

type IploadbalancingTcpFrontendOutput struct{ *pulumi.OutputState }

func (IploadbalancingTcpFrontendOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IploadbalancingTcpFrontend)(nil))
}

func (o IploadbalancingTcpFrontendOutput) ToIploadbalancingTcpFrontendOutput() IploadbalancingTcpFrontendOutput {
	return o
}

func (o IploadbalancingTcpFrontendOutput) ToIploadbalancingTcpFrontendOutputWithContext(ctx context.Context) IploadbalancingTcpFrontendOutput {
	return o
}

func (o IploadbalancingTcpFrontendOutput) ToIploadbalancingTcpFrontendPtrOutput() IploadbalancingTcpFrontendPtrOutput {
	return o.ToIploadbalancingTcpFrontendPtrOutputWithContext(context.Background())
}

func (o IploadbalancingTcpFrontendOutput) ToIploadbalancingTcpFrontendPtrOutputWithContext(ctx context.Context) IploadbalancingTcpFrontendPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IploadbalancingTcpFrontend) *IploadbalancingTcpFrontend {
		return &v
	}).(IploadbalancingTcpFrontendPtrOutput)
}

type IploadbalancingTcpFrontendPtrOutput struct{ *pulumi.OutputState }

func (IploadbalancingTcpFrontendPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IploadbalancingTcpFrontend)(nil))
}

func (o IploadbalancingTcpFrontendPtrOutput) ToIploadbalancingTcpFrontendPtrOutput() IploadbalancingTcpFrontendPtrOutput {
	return o
}

func (o IploadbalancingTcpFrontendPtrOutput) ToIploadbalancingTcpFrontendPtrOutputWithContext(ctx context.Context) IploadbalancingTcpFrontendPtrOutput {
	return o
}

func (o IploadbalancingTcpFrontendPtrOutput) Elem() IploadbalancingTcpFrontendOutput {
	return o.ApplyT(func(v *IploadbalancingTcpFrontend) IploadbalancingTcpFrontend {
		if v != nil {
			return *v
		}
		var ret IploadbalancingTcpFrontend
		return ret
	}).(IploadbalancingTcpFrontendOutput)
}

type IploadbalancingTcpFrontendArrayOutput struct{ *pulumi.OutputState }

func (IploadbalancingTcpFrontendArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IploadbalancingTcpFrontend)(nil))
}

func (o IploadbalancingTcpFrontendArrayOutput) ToIploadbalancingTcpFrontendArrayOutput() IploadbalancingTcpFrontendArrayOutput {
	return o
}

func (o IploadbalancingTcpFrontendArrayOutput) ToIploadbalancingTcpFrontendArrayOutputWithContext(ctx context.Context) IploadbalancingTcpFrontendArrayOutput {
	return o
}

func (o IploadbalancingTcpFrontendArrayOutput) Index(i pulumi.IntInput) IploadbalancingTcpFrontendOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IploadbalancingTcpFrontend {
		return vs[0].([]IploadbalancingTcpFrontend)[vs[1].(int)]
	}).(IploadbalancingTcpFrontendOutput)
}

type IploadbalancingTcpFrontendMapOutput struct{ *pulumi.OutputState }

func (IploadbalancingTcpFrontendMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]IploadbalancingTcpFrontend)(nil))
}

func (o IploadbalancingTcpFrontendMapOutput) ToIploadbalancingTcpFrontendMapOutput() IploadbalancingTcpFrontendMapOutput {
	return o
}

func (o IploadbalancingTcpFrontendMapOutput) ToIploadbalancingTcpFrontendMapOutputWithContext(ctx context.Context) IploadbalancingTcpFrontendMapOutput {
	return o
}

func (o IploadbalancingTcpFrontendMapOutput) MapIndex(k pulumi.StringInput) IploadbalancingTcpFrontendOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) IploadbalancingTcpFrontend {
		return vs[0].(map[string]IploadbalancingTcpFrontend)[vs[1].(string)]
	}).(IploadbalancingTcpFrontendOutput)
}

func init() {
	pulumi.RegisterOutputType(IploadbalancingTcpFrontendOutput{})
	pulumi.RegisterOutputType(IploadbalancingTcpFrontendPtrOutput{})
	pulumi.RegisterOutputType(IploadbalancingTcpFrontendArrayOutput{})
	pulumi.RegisterOutputType(IploadbalancingTcpFrontendMapOutput{})
}
