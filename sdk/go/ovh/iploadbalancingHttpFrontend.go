// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type IploadbalancingHttpFrontend struct {
	pulumi.CustomResourceState

	AllowedSources   pulumi.StringArrayOutput `pulumi:"allowedSources"`
	DedicatedIpfos   pulumi.StringArrayOutput `pulumi:"dedicatedIpfos"`
	DefaultFarmId    pulumi.IntOutput         `pulumi:"defaultFarmId"`
	DefaultSslId     pulumi.IntOutput         `pulumi:"defaultSslId"`
	Disabled         pulumi.BoolPtrOutput     `pulumi:"disabled"`
	DisplayName      pulumi.StringPtrOutput   `pulumi:"displayName"`
	Port             pulumi.StringOutput      `pulumi:"port"`
	RedirectLocation pulumi.StringPtrOutput   `pulumi:"redirectLocation"`
	ServiceName      pulumi.StringOutput      `pulumi:"serviceName"`
	Ssl              pulumi.BoolPtrOutput     `pulumi:"ssl"`
	Zone             pulumi.StringOutput      `pulumi:"zone"`
}

// NewIploadbalancingHttpFrontend registers a new resource with the given unique name, arguments, and options.
func NewIploadbalancingHttpFrontend(ctx *pulumi.Context,
	name string, args *IploadbalancingHttpFrontendArgs, opts ...pulumi.ResourceOption) (*IploadbalancingHttpFrontend, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Port == nil {
		return nil, errors.New("invalid value for required argument 'Port'")
	}
	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	if args.Zone == nil {
		return nil, errors.New("invalid value for required argument 'Zone'")
	}
	var resource IploadbalancingHttpFrontend
	err := ctx.RegisterResource("ovh:index/iploadbalancingHttpFrontend:IploadbalancingHttpFrontend", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIploadbalancingHttpFrontend gets an existing IploadbalancingHttpFrontend resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIploadbalancingHttpFrontend(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IploadbalancingHttpFrontendState, opts ...pulumi.ResourceOption) (*IploadbalancingHttpFrontend, error) {
	var resource IploadbalancingHttpFrontend
	err := ctx.ReadResource("ovh:index/iploadbalancingHttpFrontend:IploadbalancingHttpFrontend", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IploadbalancingHttpFrontend resources.
type iploadbalancingHttpFrontendState struct {
	AllowedSources   []string `pulumi:"allowedSources"`
	DedicatedIpfos   []string `pulumi:"dedicatedIpfos"`
	DefaultFarmId    *int     `pulumi:"defaultFarmId"`
	DefaultSslId     *int     `pulumi:"defaultSslId"`
	Disabled         *bool    `pulumi:"disabled"`
	DisplayName      *string  `pulumi:"displayName"`
	Port             *string  `pulumi:"port"`
	RedirectLocation *string  `pulumi:"redirectLocation"`
	ServiceName      *string  `pulumi:"serviceName"`
	Ssl              *bool    `pulumi:"ssl"`
	Zone             *string  `pulumi:"zone"`
}

type IploadbalancingHttpFrontendState struct {
	AllowedSources   pulumi.StringArrayInput
	DedicatedIpfos   pulumi.StringArrayInput
	DefaultFarmId    pulumi.IntPtrInput
	DefaultSslId     pulumi.IntPtrInput
	Disabled         pulumi.BoolPtrInput
	DisplayName      pulumi.StringPtrInput
	Port             pulumi.StringPtrInput
	RedirectLocation pulumi.StringPtrInput
	ServiceName      pulumi.StringPtrInput
	Ssl              pulumi.BoolPtrInput
	Zone             pulumi.StringPtrInput
}

func (IploadbalancingHttpFrontendState) ElementType() reflect.Type {
	return reflect.TypeOf((*iploadbalancingHttpFrontendState)(nil)).Elem()
}

type iploadbalancingHttpFrontendArgs struct {
	AllowedSources   []string `pulumi:"allowedSources"`
	DedicatedIpfos   []string `pulumi:"dedicatedIpfos"`
	DefaultFarmId    *int     `pulumi:"defaultFarmId"`
	DefaultSslId     *int     `pulumi:"defaultSslId"`
	Disabled         *bool    `pulumi:"disabled"`
	DisplayName      *string  `pulumi:"displayName"`
	Port             string   `pulumi:"port"`
	RedirectLocation *string  `pulumi:"redirectLocation"`
	ServiceName      string   `pulumi:"serviceName"`
	Ssl              *bool    `pulumi:"ssl"`
	Zone             string   `pulumi:"zone"`
}

// The set of arguments for constructing a IploadbalancingHttpFrontend resource.
type IploadbalancingHttpFrontendArgs struct {
	AllowedSources   pulumi.StringArrayInput
	DedicatedIpfos   pulumi.StringArrayInput
	DefaultFarmId    pulumi.IntPtrInput
	DefaultSslId     pulumi.IntPtrInput
	Disabled         pulumi.BoolPtrInput
	DisplayName      pulumi.StringPtrInput
	Port             pulumi.StringInput
	RedirectLocation pulumi.StringPtrInput
	ServiceName      pulumi.StringInput
	Ssl              pulumi.BoolPtrInput
	Zone             pulumi.StringInput
}

func (IploadbalancingHttpFrontendArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*iploadbalancingHttpFrontendArgs)(nil)).Elem()
}

type IploadbalancingHttpFrontendInput interface {
	pulumi.Input

	ToIploadbalancingHttpFrontendOutput() IploadbalancingHttpFrontendOutput
	ToIploadbalancingHttpFrontendOutputWithContext(ctx context.Context) IploadbalancingHttpFrontendOutput
}

func (*IploadbalancingHttpFrontend) ElementType() reflect.Type {
	return reflect.TypeOf((*IploadbalancingHttpFrontend)(nil))
}

func (i *IploadbalancingHttpFrontend) ToIploadbalancingHttpFrontendOutput() IploadbalancingHttpFrontendOutput {
	return i.ToIploadbalancingHttpFrontendOutputWithContext(context.Background())
}

func (i *IploadbalancingHttpFrontend) ToIploadbalancingHttpFrontendOutputWithContext(ctx context.Context) IploadbalancingHttpFrontendOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IploadbalancingHttpFrontendOutput)
}

func (i *IploadbalancingHttpFrontend) ToIploadbalancingHttpFrontendPtrOutput() IploadbalancingHttpFrontendPtrOutput {
	return i.ToIploadbalancingHttpFrontendPtrOutputWithContext(context.Background())
}

func (i *IploadbalancingHttpFrontend) ToIploadbalancingHttpFrontendPtrOutputWithContext(ctx context.Context) IploadbalancingHttpFrontendPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IploadbalancingHttpFrontendPtrOutput)
}

type IploadbalancingHttpFrontendPtrInput interface {
	pulumi.Input

	ToIploadbalancingHttpFrontendPtrOutput() IploadbalancingHttpFrontendPtrOutput
	ToIploadbalancingHttpFrontendPtrOutputWithContext(ctx context.Context) IploadbalancingHttpFrontendPtrOutput
}

type iploadbalancingHttpFrontendPtrType IploadbalancingHttpFrontendArgs

func (*iploadbalancingHttpFrontendPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IploadbalancingHttpFrontend)(nil))
}

func (i *iploadbalancingHttpFrontendPtrType) ToIploadbalancingHttpFrontendPtrOutput() IploadbalancingHttpFrontendPtrOutput {
	return i.ToIploadbalancingHttpFrontendPtrOutputWithContext(context.Background())
}

func (i *iploadbalancingHttpFrontendPtrType) ToIploadbalancingHttpFrontendPtrOutputWithContext(ctx context.Context) IploadbalancingHttpFrontendPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IploadbalancingHttpFrontendPtrOutput)
}

// IploadbalancingHttpFrontendArrayInput is an input type that accepts IploadbalancingHttpFrontendArray and IploadbalancingHttpFrontendArrayOutput values.
// You can construct a concrete instance of `IploadbalancingHttpFrontendArrayInput` via:
//
//          IploadbalancingHttpFrontendArray{ IploadbalancingHttpFrontendArgs{...} }
type IploadbalancingHttpFrontendArrayInput interface {
	pulumi.Input

	ToIploadbalancingHttpFrontendArrayOutput() IploadbalancingHttpFrontendArrayOutput
	ToIploadbalancingHttpFrontendArrayOutputWithContext(context.Context) IploadbalancingHttpFrontendArrayOutput
}

type IploadbalancingHttpFrontendArray []IploadbalancingHttpFrontendInput

func (IploadbalancingHttpFrontendArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IploadbalancingHttpFrontend)(nil)).Elem()
}

func (i IploadbalancingHttpFrontendArray) ToIploadbalancingHttpFrontendArrayOutput() IploadbalancingHttpFrontendArrayOutput {
	return i.ToIploadbalancingHttpFrontendArrayOutputWithContext(context.Background())
}

func (i IploadbalancingHttpFrontendArray) ToIploadbalancingHttpFrontendArrayOutputWithContext(ctx context.Context) IploadbalancingHttpFrontendArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IploadbalancingHttpFrontendArrayOutput)
}

// IploadbalancingHttpFrontendMapInput is an input type that accepts IploadbalancingHttpFrontendMap and IploadbalancingHttpFrontendMapOutput values.
// You can construct a concrete instance of `IploadbalancingHttpFrontendMapInput` via:
//
//          IploadbalancingHttpFrontendMap{ "key": IploadbalancingHttpFrontendArgs{...} }
type IploadbalancingHttpFrontendMapInput interface {
	pulumi.Input

	ToIploadbalancingHttpFrontendMapOutput() IploadbalancingHttpFrontendMapOutput
	ToIploadbalancingHttpFrontendMapOutputWithContext(context.Context) IploadbalancingHttpFrontendMapOutput
}

type IploadbalancingHttpFrontendMap map[string]IploadbalancingHttpFrontendInput

func (IploadbalancingHttpFrontendMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IploadbalancingHttpFrontend)(nil)).Elem()
}

func (i IploadbalancingHttpFrontendMap) ToIploadbalancingHttpFrontendMapOutput() IploadbalancingHttpFrontendMapOutput {
	return i.ToIploadbalancingHttpFrontendMapOutputWithContext(context.Background())
}

func (i IploadbalancingHttpFrontendMap) ToIploadbalancingHttpFrontendMapOutputWithContext(ctx context.Context) IploadbalancingHttpFrontendMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IploadbalancingHttpFrontendMapOutput)
}

type IploadbalancingHttpFrontendOutput struct{ *pulumi.OutputState }

func (IploadbalancingHttpFrontendOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IploadbalancingHttpFrontend)(nil))
}

func (o IploadbalancingHttpFrontendOutput) ToIploadbalancingHttpFrontendOutput() IploadbalancingHttpFrontendOutput {
	return o
}

func (o IploadbalancingHttpFrontendOutput) ToIploadbalancingHttpFrontendOutputWithContext(ctx context.Context) IploadbalancingHttpFrontendOutput {
	return o
}

func (o IploadbalancingHttpFrontendOutput) ToIploadbalancingHttpFrontendPtrOutput() IploadbalancingHttpFrontendPtrOutput {
	return o.ToIploadbalancingHttpFrontendPtrOutputWithContext(context.Background())
}

func (o IploadbalancingHttpFrontendOutput) ToIploadbalancingHttpFrontendPtrOutputWithContext(ctx context.Context) IploadbalancingHttpFrontendPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IploadbalancingHttpFrontend) *IploadbalancingHttpFrontend {
		return &v
	}).(IploadbalancingHttpFrontendPtrOutput)
}

type IploadbalancingHttpFrontendPtrOutput struct{ *pulumi.OutputState }

func (IploadbalancingHttpFrontendPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IploadbalancingHttpFrontend)(nil))
}

func (o IploadbalancingHttpFrontendPtrOutput) ToIploadbalancingHttpFrontendPtrOutput() IploadbalancingHttpFrontendPtrOutput {
	return o
}

func (o IploadbalancingHttpFrontendPtrOutput) ToIploadbalancingHttpFrontendPtrOutputWithContext(ctx context.Context) IploadbalancingHttpFrontendPtrOutput {
	return o
}

func (o IploadbalancingHttpFrontendPtrOutput) Elem() IploadbalancingHttpFrontendOutput {
	return o.ApplyT(func(v *IploadbalancingHttpFrontend) IploadbalancingHttpFrontend {
		if v != nil {
			return *v
		}
		var ret IploadbalancingHttpFrontend
		return ret
	}).(IploadbalancingHttpFrontendOutput)
}

type IploadbalancingHttpFrontendArrayOutput struct{ *pulumi.OutputState }

func (IploadbalancingHttpFrontendArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IploadbalancingHttpFrontend)(nil))
}

func (o IploadbalancingHttpFrontendArrayOutput) ToIploadbalancingHttpFrontendArrayOutput() IploadbalancingHttpFrontendArrayOutput {
	return o
}

func (o IploadbalancingHttpFrontendArrayOutput) ToIploadbalancingHttpFrontendArrayOutputWithContext(ctx context.Context) IploadbalancingHttpFrontendArrayOutput {
	return o
}

func (o IploadbalancingHttpFrontendArrayOutput) Index(i pulumi.IntInput) IploadbalancingHttpFrontendOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IploadbalancingHttpFrontend {
		return vs[0].([]IploadbalancingHttpFrontend)[vs[1].(int)]
	}).(IploadbalancingHttpFrontendOutput)
}

type IploadbalancingHttpFrontendMapOutput struct{ *pulumi.OutputState }

func (IploadbalancingHttpFrontendMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]IploadbalancingHttpFrontend)(nil))
}

func (o IploadbalancingHttpFrontendMapOutput) ToIploadbalancingHttpFrontendMapOutput() IploadbalancingHttpFrontendMapOutput {
	return o
}

func (o IploadbalancingHttpFrontendMapOutput) ToIploadbalancingHttpFrontendMapOutputWithContext(ctx context.Context) IploadbalancingHttpFrontendMapOutput {
	return o
}

func (o IploadbalancingHttpFrontendMapOutput) MapIndex(k pulumi.StringInput) IploadbalancingHttpFrontendOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) IploadbalancingHttpFrontend {
		return vs[0].(map[string]IploadbalancingHttpFrontend)[vs[1].(string)]
	}).(IploadbalancingHttpFrontendOutput)
}

func init() {
	pulumi.RegisterOutputType(IploadbalancingHttpFrontendOutput{})
	pulumi.RegisterOutputType(IploadbalancingHttpFrontendPtrOutput{})
	pulumi.RegisterOutputType(IploadbalancingHttpFrontendArrayOutput{})
	pulumi.RegisterOutputType(IploadbalancingHttpFrontendMapOutput{})
}
