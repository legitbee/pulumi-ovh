// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CloudProjectContainerregistry struct {
	pulumi.CustomResourceState

	// Registry creation date
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Registry name
	Name pulumi.StringOutput `pulumi:"name"`
	// Plan ID of the registry.
	PlanId pulumi.StringOutput `pulumi:"planId"`
	// Plan of the registry
	Plans CloudProjectContainerregistryPlanArrayOutput `pulumi:"plans"`
	// Project ID of your registry
	ProjectId pulumi.StringOutput `pulumi:"projectId"`
	// Region of the registry.
	Region      pulumi.StringOutput `pulumi:"region"`
	ServiceName pulumi.StringOutput `pulumi:"serviceName"`
	// Current size of the registry (bytes)
	Size pulumi.IntOutput `pulumi:"size"`
	// Registry status
	Status pulumi.StringOutput `pulumi:"status"`
	// Registry last update date
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
	// Access url of the registry
	Url pulumi.StringOutput `pulumi:"url"`
	// Version of your registry
	Version pulumi.StringOutput `pulumi:"version"`
}

// NewCloudProjectContainerregistry registers a new resource with the given unique name, arguments, and options.
func NewCloudProjectContainerregistry(ctx *pulumi.Context,
	name string, args *CloudProjectContainerregistryArgs, opts ...pulumi.ResourceOption) (*CloudProjectContainerregistry, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Region == nil {
		return nil, errors.New("invalid value for required argument 'Region'")
	}
	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	var resource CloudProjectContainerregistry
	err := ctx.RegisterResource("ovh:index/cloudProjectContainerregistry:CloudProjectContainerregistry", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudProjectContainerregistry gets an existing CloudProjectContainerregistry resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudProjectContainerregistry(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudProjectContainerregistryState, opts ...pulumi.ResourceOption) (*CloudProjectContainerregistry, error) {
	var resource CloudProjectContainerregistry
	err := ctx.ReadResource("ovh:index/cloudProjectContainerregistry:CloudProjectContainerregistry", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudProjectContainerregistry resources.
type cloudProjectContainerregistryState struct {
	// Registry creation date
	CreatedAt *string `pulumi:"createdAt"`
	// Registry name
	Name *string `pulumi:"name"`
	// Plan ID of the registry.
	PlanId *string `pulumi:"planId"`
	// Plan of the registry
	Plans []CloudProjectContainerregistryPlan `pulumi:"plans"`
	// Project ID of your registry
	ProjectId *string `pulumi:"projectId"`
	// Region of the registry.
	Region      *string `pulumi:"region"`
	ServiceName *string `pulumi:"serviceName"`
	// Current size of the registry (bytes)
	Size *int `pulumi:"size"`
	// Registry status
	Status *string `pulumi:"status"`
	// Registry last update date
	UpdatedAt *string `pulumi:"updatedAt"`
	// Access url of the registry
	Url *string `pulumi:"url"`
	// Version of your registry
	Version *string `pulumi:"version"`
}

type CloudProjectContainerregistryState struct {
	// Registry creation date
	CreatedAt pulumi.StringPtrInput
	// Registry name
	Name pulumi.StringPtrInput
	// Plan ID of the registry.
	PlanId pulumi.StringPtrInput
	// Plan of the registry
	Plans CloudProjectContainerregistryPlanArrayInput
	// Project ID of your registry
	ProjectId pulumi.StringPtrInput
	// Region of the registry.
	Region      pulumi.StringPtrInput
	ServiceName pulumi.StringPtrInput
	// Current size of the registry (bytes)
	Size pulumi.IntPtrInput
	// Registry status
	Status pulumi.StringPtrInput
	// Registry last update date
	UpdatedAt pulumi.StringPtrInput
	// Access url of the registry
	Url pulumi.StringPtrInput
	// Version of your registry
	Version pulumi.StringPtrInput
}

func (CloudProjectContainerregistryState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudProjectContainerregistryState)(nil)).Elem()
}

type cloudProjectContainerregistryArgs struct {
	// Registry name
	Name *string `pulumi:"name"`
	// Plan ID of the registry.
	PlanId *string `pulumi:"planId"`
	// Region of the registry.
	Region      string `pulumi:"region"`
	ServiceName string `pulumi:"serviceName"`
}

// The set of arguments for constructing a CloudProjectContainerregistry resource.
type CloudProjectContainerregistryArgs struct {
	// Registry name
	Name pulumi.StringPtrInput
	// Plan ID of the registry.
	PlanId pulumi.StringPtrInput
	// Region of the registry.
	Region      pulumi.StringInput
	ServiceName pulumi.StringInput
}

func (CloudProjectContainerregistryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudProjectContainerregistryArgs)(nil)).Elem()
}

type CloudProjectContainerregistryInput interface {
	pulumi.Input

	ToCloudProjectContainerregistryOutput() CloudProjectContainerregistryOutput
	ToCloudProjectContainerregistryOutputWithContext(ctx context.Context) CloudProjectContainerregistryOutput
}

func (*CloudProjectContainerregistry) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudProjectContainerregistry)(nil))
}

func (i *CloudProjectContainerregistry) ToCloudProjectContainerregistryOutput() CloudProjectContainerregistryOutput {
	return i.ToCloudProjectContainerregistryOutputWithContext(context.Background())
}

func (i *CloudProjectContainerregistry) ToCloudProjectContainerregistryOutputWithContext(ctx context.Context) CloudProjectContainerregistryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProjectContainerregistryOutput)
}

func (i *CloudProjectContainerregistry) ToCloudProjectContainerregistryPtrOutput() CloudProjectContainerregistryPtrOutput {
	return i.ToCloudProjectContainerregistryPtrOutputWithContext(context.Background())
}

func (i *CloudProjectContainerregistry) ToCloudProjectContainerregistryPtrOutputWithContext(ctx context.Context) CloudProjectContainerregistryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProjectContainerregistryPtrOutput)
}

type CloudProjectContainerregistryPtrInput interface {
	pulumi.Input

	ToCloudProjectContainerregistryPtrOutput() CloudProjectContainerregistryPtrOutput
	ToCloudProjectContainerregistryPtrOutputWithContext(ctx context.Context) CloudProjectContainerregistryPtrOutput
}

type cloudProjectContainerregistryPtrType CloudProjectContainerregistryArgs

func (*cloudProjectContainerregistryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudProjectContainerregistry)(nil))
}

func (i *cloudProjectContainerregistryPtrType) ToCloudProjectContainerregistryPtrOutput() CloudProjectContainerregistryPtrOutput {
	return i.ToCloudProjectContainerregistryPtrOutputWithContext(context.Background())
}

func (i *cloudProjectContainerregistryPtrType) ToCloudProjectContainerregistryPtrOutputWithContext(ctx context.Context) CloudProjectContainerregistryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProjectContainerregistryPtrOutput)
}

// CloudProjectContainerregistryArrayInput is an input type that accepts CloudProjectContainerregistryArray and CloudProjectContainerregistryArrayOutput values.
// You can construct a concrete instance of `CloudProjectContainerregistryArrayInput` via:
//
//          CloudProjectContainerregistryArray{ CloudProjectContainerregistryArgs{...} }
type CloudProjectContainerregistryArrayInput interface {
	pulumi.Input

	ToCloudProjectContainerregistryArrayOutput() CloudProjectContainerregistryArrayOutput
	ToCloudProjectContainerregistryArrayOutputWithContext(context.Context) CloudProjectContainerregistryArrayOutput
}

type CloudProjectContainerregistryArray []CloudProjectContainerregistryInput

func (CloudProjectContainerregistryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CloudProjectContainerregistry)(nil)).Elem()
}

func (i CloudProjectContainerregistryArray) ToCloudProjectContainerregistryArrayOutput() CloudProjectContainerregistryArrayOutput {
	return i.ToCloudProjectContainerregistryArrayOutputWithContext(context.Background())
}

func (i CloudProjectContainerregistryArray) ToCloudProjectContainerregistryArrayOutputWithContext(ctx context.Context) CloudProjectContainerregistryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProjectContainerregistryArrayOutput)
}

// CloudProjectContainerregistryMapInput is an input type that accepts CloudProjectContainerregistryMap and CloudProjectContainerregistryMapOutput values.
// You can construct a concrete instance of `CloudProjectContainerregistryMapInput` via:
//
//          CloudProjectContainerregistryMap{ "key": CloudProjectContainerregistryArgs{...} }
type CloudProjectContainerregistryMapInput interface {
	pulumi.Input

	ToCloudProjectContainerregistryMapOutput() CloudProjectContainerregistryMapOutput
	ToCloudProjectContainerregistryMapOutputWithContext(context.Context) CloudProjectContainerregistryMapOutput
}

type CloudProjectContainerregistryMap map[string]CloudProjectContainerregistryInput

func (CloudProjectContainerregistryMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CloudProjectContainerregistry)(nil)).Elem()
}

func (i CloudProjectContainerregistryMap) ToCloudProjectContainerregistryMapOutput() CloudProjectContainerregistryMapOutput {
	return i.ToCloudProjectContainerregistryMapOutputWithContext(context.Background())
}

func (i CloudProjectContainerregistryMap) ToCloudProjectContainerregistryMapOutputWithContext(ctx context.Context) CloudProjectContainerregistryMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProjectContainerregistryMapOutput)
}

type CloudProjectContainerregistryOutput struct{ *pulumi.OutputState }

func (CloudProjectContainerregistryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudProjectContainerregistry)(nil))
}

func (o CloudProjectContainerregistryOutput) ToCloudProjectContainerregistryOutput() CloudProjectContainerregistryOutput {
	return o
}

func (o CloudProjectContainerregistryOutput) ToCloudProjectContainerregistryOutputWithContext(ctx context.Context) CloudProjectContainerregistryOutput {
	return o
}

func (o CloudProjectContainerregistryOutput) ToCloudProjectContainerregistryPtrOutput() CloudProjectContainerregistryPtrOutput {
	return o.ToCloudProjectContainerregistryPtrOutputWithContext(context.Background())
}

func (o CloudProjectContainerregistryOutput) ToCloudProjectContainerregistryPtrOutputWithContext(ctx context.Context) CloudProjectContainerregistryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudProjectContainerregistry) *CloudProjectContainerregistry {
		return &v
	}).(CloudProjectContainerregistryPtrOutput)
}

type CloudProjectContainerregistryPtrOutput struct{ *pulumi.OutputState }

func (CloudProjectContainerregistryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudProjectContainerregistry)(nil))
}

func (o CloudProjectContainerregistryPtrOutput) ToCloudProjectContainerregistryPtrOutput() CloudProjectContainerregistryPtrOutput {
	return o
}

func (o CloudProjectContainerregistryPtrOutput) ToCloudProjectContainerregistryPtrOutputWithContext(ctx context.Context) CloudProjectContainerregistryPtrOutput {
	return o
}

func (o CloudProjectContainerregistryPtrOutput) Elem() CloudProjectContainerregistryOutput {
	return o.ApplyT(func(v *CloudProjectContainerregistry) CloudProjectContainerregistry {
		if v != nil {
			return *v
		}
		var ret CloudProjectContainerregistry
		return ret
	}).(CloudProjectContainerregistryOutput)
}

type CloudProjectContainerregistryArrayOutput struct{ *pulumi.OutputState }

func (CloudProjectContainerregistryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudProjectContainerregistry)(nil))
}

func (o CloudProjectContainerregistryArrayOutput) ToCloudProjectContainerregistryArrayOutput() CloudProjectContainerregistryArrayOutput {
	return o
}

func (o CloudProjectContainerregistryArrayOutput) ToCloudProjectContainerregistryArrayOutputWithContext(ctx context.Context) CloudProjectContainerregistryArrayOutput {
	return o
}

func (o CloudProjectContainerregistryArrayOutput) Index(i pulumi.IntInput) CloudProjectContainerregistryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudProjectContainerregistry {
		return vs[0].([]CloudProjectContainerregistry)[vs[1].(int)]
	}).(CloudProjectContainerregistryOutput)
}

type CloudProjectContainerregistryMapOutput struct{ *pulumi.OutputState }

func (CloudProjectContainerregistryMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]CloudProjectContainerregistry)(nil))
}

func (o CloudProjectContainerregistryMapOutput) ToCloudProjectContainerregistryMapOutput() CloudProjectContainerregistryMapOutput {
	return o
}

func (o CloudProjectContainerregistryMapOutput) ToCloudProjectContainerregistryMapOutputWithContext(ctx context.Context) CloudProjectContainerregistryMapOutput {
	return o
}

func (o CloudProjectContainerregistryMapOutput) MapIndex(k pulumi.StringInput) CloudProjectContainerregistryOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) CloudProjectContainerregistry {
		return vs[0].(map[string]CloudProjectContainerregistry)[vs[1].(string)]
	}).(CloudProjectContainerregistryOutput)
}

func init() {
	pulumi.RegisterOutputType(CloudProjectContainerregistryOutput{})
	pulumi.RegisterOutputType(CloudProjectContainerregistryPtrOutput{})
	pulumi.RegisterOutputType(CloudProjectContainerregistryArrayOutput{})
	pulumi.RegisterOutputType(CloudProjectContainerregistryMapOutput{})
}
