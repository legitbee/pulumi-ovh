// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type Ovh_iploadbalancing_http_route_rule struct {
	pulumi.CustomResourceState

	DisplayName pulumi.StringPtrOutput `pulumi:"displayName"`
	Field       pulumi.StringOutput    `pulumi:"field"`
	Match       pulumi.StringOutput    `pulumi:"match"`
	Negate      pulumi.BoolOutput      `pulumi:"negate"`
	Pattern     pulumi.StringPtrOutput `pulumi:"pattern"`
	RouteId     pulumi.StringOutput    `pulumi:"routeId"`
	ServiceName pulumi.StringOutput    `pulumi:"serviceName"`
	SubField    pulumi.StringPtrOutput `pulumi:"subField"`
}

// NewOvh_iploadbalancing_http_route_rule registers a new resource with the given unique name, arguments, and options.
func NewOvh_iploadbalancing_http_route_rule(ctx *pulumi.Context,
	name string, args *Ovh_iploadbalancing_http_route_ruleArgs, opts ...pulumi.ResourceOption) (*Ovh_iploadbalancing_http_route_rule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Field == nil {
		return nil, errors.New("invalid value for required argument 'Field'")
	}
	if args.Match == nil {
		return nil, errors.New("invalid value for required argument 'Match'")
	}
	if args.RouteId == nil {
		return nil, errors.New("invalid value for required argument 'RouteId'")
	}
	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	var resource Ovh_iploadbalancing_http_route_rule
	err := ctx.RegisterResource("ovh:index/ovh_iploadbalancing_http_route_rule:ovh_iploadbalancing_http_route_rule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOvh_iploadbalancing_http_route_rule gets an existing Ovh_iploadbalancing_http_route_rule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOvh_iploadbalancing_http_route_rule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *Ovh_iploadbalancing_http_route_ruleState, opts ...pulumi.ResourceOption) (*Ovh_iploadbalancing_http_route_rule, error) {
	var resource Ovh_iploadbalancing_http_route_rule
	err := ctx.ReadResource("ovh:index/ovh_iploadbalancing_http_route_rule:ovh_iploadbalancing_http_route_rule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Ovh_iploadbalancing_http_route_rule resources.
type ovh_iploadbalancing_http_route_ruleState struct {
	DisplayName *string `pulumi:"displayName"`
	Field       *string `pulumi:"field"`
	Match       *string `pulumi:"match"`
	Negate      *bool   `pulumi:"negate"`
	Pattern     *string `pulumi:"pattern"`
	RouteId     *string `pulumi:"routeId"`
	ServiceName *string `pulumi:"serviceName"`
	SubField    *string `pulumi:"subField"`
}

type Ovh_iploadbalancing_http_route_ruleState struct {
	DisplayName pulumi.StringPtrInput
	Field       pulumi.StringPtrInput
	Match       pulumi.StringPtrInput
	Negate      pulumi.BoolPtrInput
	Pattern     pulumi.StringPtrInput
	RouteId     pulumi.StringPtrInput
	ServiceName pulumi.StringPtrInput
	SubField    pulumi.StringPtrInput
}

func (Ovh_iploadbalancing_http_route_ruleState) ElementType() reflect.Type {
	return reflect.TypeOf((*ovh_iploadbalancing_http_route_ruleState)(nil)).Elem()
}

type ovh_iploadbalancing_http_route_ruleArgs struct {
	DisplayName *string `pulumi:"displayName"`
	Field       string  `pulumi:"field"`
	Match       string  `pulumi:"match"`
	Negate      *bool   `pulumi:"negate"`
	Pattern     *string `pulumi:"pattern"`
	RouteId     string  `pulumi:"routeId"`
	ServiceName string  `pulumi:"serviceName"`
	SubField    *string `pulumi:"subField"`
}

// The set of arguments for constructing a Ovh_iploadbalancing_http_route_rule resource.
type Ovh_iploadbalancing_http_route_ruleArgs struct {
	DisplayName pulumi.StringPtrInput
	Field       pulumi.StringInput
	Match       pulumi.StringInput
	Negate      pulumi.BoolPtrInput
	Pattern     pulumi.StringPtrInput
	RouteId     pulumi.StringInput
	ServiceName pulumi.StringInput
	SubField    pulumi.StringPtrInput
}

func (Ovh_iploadbalancing_http_route_ruleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ovh_iploadbalancing_http_route_ruleArgs)(nil)).Elem()
}

type Ovh_iploadbalancing_http_route_ruleInput interface {
	pulumi.Input

	ToOvh_iploadbalancing_http_route_ruleOutput() Ovh_iploadbalancing_http_route_ruleOutput
	ToOvh_iploadbalancing_http_route_ruleOutputWithContext(ctx context.Context) Ovh_iploadbalancing_http_route_ruleOutput
}

func (*Ovh_iploadbalancing_http_route_rule) ElementType() reflect.Type {
	return reflect.TypeOf((*Ovh_iploadbalancing_http_route_rule)(nil))
}

func (i *Ovh_iploadbalancing_http_route_rule) ToOvh_iploadbalancing_http_route_ruleOutput() Ovh_iploadbalancing_http_route_ruleOutput {
	return i.ToOvh_iploadbalancing_http_route_ruleOutputWithContext(context.Background())
}

func (i *Ovh_iploadbalancing_http_route_rule) ToOvh_iploadbalancing_http_route_ruleOutputWithContext(ctx context.Context) Ovh_iploadbalancing_http_route_ruleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ovh_iploadbalancing_http_route_ruleOutput)
}

func (i *Ovh_iploadbalancing_http_route_rule) ToOvh_iploadbalancing_http_route_rulePtrOutput() Ovh_iploadbalancing_http_route_rulePtrOutput {
	return i.ToOvh_iploadbalancing_http_route_rulePtrOutputWithContext(context.Background())
}

func (i *Ovh_iploadbalancing_http_route_rule) ToOvh_iploadbalancing_http_route_rulePtrOutputWithContext(ctx context.Context) Ovh_iploadbalancing_http_route_rulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ovh_iploadbalancing_http_route_rulePtrOutput)
}

type Ovh_iploadbalancing_http_route_rulePtrInput interface {
	pulumi.Input

	ToOvh_iploadbalancing_http_route_rulePtrOutput() Ovh_iploadbalancing_http_route_rulePtrOutput
	ToOvh_iploadbalancing_http_route_rulePtrOutputWithContext(ctx context.Context) Ovh_iploadbalancing_http_route_rulePtrOutput
}

type ovh_iploadbalancing_http_route_rulePtrType Ovh_iploadbalancing_http_route_ruleArgs

func (*ovh_iploadbalancing_http_route_rulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Ovh_iploadbalancing_http_route_rule)(nil))
}

func (i *ovh_iploadbalancing_http_route_rulePtrType) ToOvh_iploadbalancing_http_route_rulePtrOutput() Ovh_iploadbalancing_http_route_rulePtrOutput {
	return i.ToOvh_iploadbalancing_http_route_rulePtrOutputWithContext(context.Background())
}

func (i *ovh_iploadbalancing_http_route_rulePtrType) ToOvh_iploadbalancing_http_route_rulePtrOutputWithContext(ctx context.Context) Ovh_iploadbalancing_http_route_rulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ovh_iploadbalancing_http_route_rulePtrOutput)
}

// Ovh_iploadbalancing_http_route_ruleArrayInput is an input type that accepts Ovh_iploadbalancing_http_route_ruleArray and Ovh_iploadbalancing_http_route_ruleArrayOutput values.
// You can construct a concrete instance of `Ovh_iploadbalancing_http_route_ruleArrayInput` via:
//
//          Ovh_iploadbalancing_http_route_ruleArray{ Ovh_iploadbalancing_http_route_ruleArgs{...} }
type Ovh_iploadbalancing_http_route_ruleArrayInput interface {
	pulumi.Input

	ToOvh_iploadbalancing_http_route_ruleArrayOutput() Ovh_iploadbalancing_http_route_ruleArrayOutput
	ToOvh_iploadbalancing_http_route_ruleArrayOutputWithContext(context.Context) Ovh_iploadbalancing_http_route_ruleArrayOutput
}

type Ovh_iploadbalancing_http_route_ruleArray []Ovh_iploadbalancing_http_route_ruleInput

func (Ovh_iploadbalancing_http_route_ruleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Ovh_iploadbalancing_http_route_rule)(nil)).Elem()
}

func (i Ovh_iploadbalancing_http_route_ruleArray) ToOvh_iploadbalancing_http_route_ruleArrayOutput() Ovh_iploadbalancing_http_route_ruleArrayOutput {
	return i.ToOvh_iploadbalancing_http_route_ruleArrayOutputWithContext(context.Background())
}

func (i Ovh_iploadbalancing_http_route_ruleArray) ToOvh_iploadbalancing_http_route_ruleArrayOutputWithContext(ctx context.Context) Ovh_iploadbalancing_http_route_ruleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ovh_iploadbalancing_http_route_ruleArrayOutput)
}

// Ovh_iploadbalancing_http_route_ruleMapInput is an input type that accepts Ovh_iploadbalancing_http_route_ruleMap and Ovh_iploadbalancing_http_route_ruleMapOutput values.
// You can construct a concrete instance of `Ovh_iploadbalancing_http_route_ruleMapInput` via:
//
//          Ovh_iploadbalancing_http_route_ruleMap{ "key": Ovh_iploadbalancing_http_route_ruleArgs{...} }
type Ovh_iploadbalancing_http_route_ruleMapInput interface {
	pulumi.Input

	ToOvh_iploadbalancing_http_route_ruleMapOutput() Ovh_iploadbalancing_http_route_ruleMapOutput
	ToOvh_iploadbalancing_http_route_ruleMapOutputWithContext(context.Context) Ovh_iploadbalancing_http_route_ruleMapOutput
}

type Ovh_iploadbalancing_http_route_ruleMap map[string]Ovh_iploadbalancing_http_route_ruleInput

func (Ovh_iploadbalancing_http_route_ruleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Ovh_iploadbalancing_http_route_rule)(nil)).Elem()
}

func (i Ovh_iploadbalancing_http_route_ruleMap) ToOvh_iploadbalancing_http_route_ruleMapOutput() Ovh_iploadbalancing_http_route_ruleMapOutput {
	return i.ToOvh_iploadbalancing_http_route_ruleMapOutputWithContext(context.Background())
}

func (i Ovh_iploadbalancing_http_route_ruleMap) ToOvh_iploadbalancing_http_route_ruleMapOutputWithContext(ctx context.Context) Ovh_iploadbalancing_http_route_ruleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ovh_iploadbalancing_http_route_ruleMapOutput)
}

type Ovh_iploadbalancing_http_route_ruleOutput struct{ *pulumi.OutputState }

func (Ovh_iploadbalancing_http_route_ruleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Ovh_iploadbalancing_http_route_rule)(nil))
}

func (o Ovh_iploadbalancing_http_route_ruleOutput) ToOvh_iploadbalancing_http_route_ruleOutput() Ovh_iploadbalancing_http_route_ruleOutput {
	return o
}

func (o Ovh_iploadbalancing_http_route_ruleOutput) ToOvh_iploadbalancing_http_route_ruleOutputWithContext(ctx context.Context) Ovh_iploadbalancing_http_route_ruleOutput {
	return o
}

func (o Ovh_iploadbalancing_http_route_ruleOutput) ToOvh_iploadbalancing_http_route_rulePtrOutput() Ovh_iploadbalancing_http_route_rulePtrOutput {
	return o.ToOvh_iploadbalancing_http_route_rulePtrOutputWithContext(context.Background())
}

func (o Ovh_iploadbalancing_http_route_ruleOutput) ToOvh_iploadbalancing_http_route_rulePtrOutputWithContext(ctx context.Context) Ovh_iploadbalancing_http_route_rulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Ovh_iploadbalancing_http_route_rule) *Ovh_iploadbalancing_http_route_rule {
		return &v
	}).(Ovh_iploadbalancing_http_route_rulePtrOutput)
}

type Ovh_iploadbalancing_http_route_rulePtrOutput struct{ *pulumi.OutputState }

func (Ovh_iploadbalancing_http_route_rulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Ovh_iploadbalancing_http_route_rule)(nil))
}

func (o Ovh_iploadbalancing_http_route_rulePtrOutput) ToOvh_iploadbalancing_http_route_rulePtrOutput() Ovh_iploadbalancing_http_route_rulePtrOutput {
	return o
}

func (o Ovh_iploadbalancing_http_route_rulePtrOutput) ToOvh_iploadbalancing_http_route_rulePtrOutputWithContext(ctx context.Context) Ovh_iploadbalancing_http_route_rulePtrOutput {
	return o
}

func (o Ovh_iploadbalancing_http_route_rulePtrOutput) Elem() Ovh_iploadbalancing_http_route_ruleOutput {
	return o.ApplyT(func(v *Ovh_iploadbalancing_http_route_rule) Ovh_iploadbalancing_http_route_rule {
		if v != nil {
			return *v
		}
		var ret Ovh_iploadbalancing_http_route_rule
		return ret
	}).(Ovh_iploadbalancing_http_route_ruleOutput)
}

type Ovh_iploadbalancing_http_route_ruleArrayOutput struct{ *pulumi.OutputState }

func (Ovh_iploadbalancing_http_route_ruleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Ovh_iploadbalancing_http_route_rule)(nil))
}

func (o Ovh_iploadbalancing_http_route_ruleArrayOutput) ToOvh_iploadbalancing_http_route_ruleArrayOutput() Ovh_iploadbalancing_http_route_ruleArrayOutput {
	return o
}

func (o Ovh_iploadbalancing_http_route_ruleArrayOutput) ToOvh_iploadbalancing_http_route_ruleArrayOutputWithContext(ctx context.Context) Ovh_iploadbalancing_http_route_ruleArrayOutput {
	return o
}

func (o Ovh_iploadbalancing_http_route_ruleArrayOutput) Index(i pulumi.IntInput) Ovh_iploadbalancing_http_route_ruleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Ovh_iploadbalancing_http_route_rule {
		return vs[0].([]Ovh_iploadbalancing_http_route_rule)[vs[1].(int)]
	}).(Ovh_iploadbalancing_http_route_ruleOutput)
}

type Ovh_iploadbalancing_http_route_ruleMapOutput struct{ *pulumi.OutputState }

func (Ovh_iploadbalancing_http_route_ruleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]Ovh_iploadbalancing_http_route_rule)(nil))
}

func (o Ovh_iploadbalancing_http_route_ruleMapOutput) ToOvh_iploadbalancing_http_route_ruleMapOutput() Ovh_iploadbalancing_http_route_ruleMapOutput {
	return o
}

func (o Ovh_iploadbalancing_http_route_ruleMapOutput) ToOvh_iploadbalancing_http_route_ruleMapOutputWithContext(ctx context.Context) Ovh_iploadbalancing_http_route_ruleMapOutput {
	return o
}

func (o Ovh_iploadbalancing_http_route_ruleMapOutput) MapIndex(k pulumi.StringInput) Ovh_iploadbalancing_http_route_ruleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) Ovh_iploadbalancing_http_route_rule {
		return vs[0].(map[string]Ovh_iploadbalancing_http_route_rule)[vs[1].(string)]
	}).(Ovh_iploadbalancing_http_route_ruleOutput)
}

func init() {
	pulumi.RegisterOutputType(Ovh_iploadbalancing_http_route_ruleOutput{})
	pulumi.RegisterOutputType(Ovh_iploadbalancing_http_route_rulePtrOutput{})
	pulumi.RegisterOutputType(Ovh_iploadbalancing_http_route_ruleArrayOutput{})
	pulumi.RegisterOutputType(Ovh_iploadbalancing_http_route_ruleMapOutput{})
}
