// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type IploadbalancingHttpFarmServer struct {
	pulumi.CustomResourceState

	Address              pulumi.StringOutput    `pulumi:"address"`
	Backup               pulumi.BoolPtrOutput   `pulumi:"backup"`
	Chain                pulumi.StringPtrOutput `pulumi:"chain"`
	Cookie               pulumi.StringOutput    `pulumi:"cookie"`
	DisplayName          pulumi.StringPtrOutput `pulumi:"displayName"`
	FarmId               pulumi.IntOutput       `pulumi:"farmId"`
	Port                 pulumi.IntPtrOutput    `pulumi:"port"`
	Probe                pulumi.BoolPtrOutput   `pulumi:"probe"`
	ProxyProtocolVersion pulumi.StringPtrOutput `pulumi:"proxyProtocolVersion"`
	ServiceName          pulumi.StringOutput    `pulumi:"serviceName"`
	Ssl                  pulumi.BoolPtrOutput   `pulumi:"ssl"`
	Status               pulumi.StringOutput    `pulumi:"status"`
	Weight               pulumi.IntPtrOutput    `pulumi:"weight"`
}

// NewIploadbalancingHttpFarmServer registers a new resource with the given unique name, arguments, and options.
func NewIploadbalancingHttpFarmServer(ctx *pulumi.Context,
	name string, args *IploadbalancingHttpFarmServerArgs, opts ...pulumi.ResourceOption) (*IploadbalancingHttpFarmServer, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Address == nil {
		return nil, errors.New("invalid value for required argument 'Address'")
	}
	if args.FarmId == nil {
		return nil, errors.New("invalid value for required argument 'FarmId'")
	}
	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	if args.Status == nil {
		return nil, errors.New("invalid value for required argument 'Status'")
	}
	var resource IploadbalancingHttpFarmServer
	err := ctx.RegisterResource("ovh:index/iploadbalancingHttpFarmServer:IploadbalancingHttpFarmServer", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIploadbalancingHttpFarmServer gets an existing IploadbalancingHttpFarmServer resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIploadbalancingHttpFarmServer(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IploadbalancingHttpFarmServerState, opts ...pulumi.ResourceOption) (*IploadbalancingHttpFarmServer, error) {
	var resource IploadbalancingHttpFarmServer
	err := ctx.ReadResource("ovh:index/iploadbalancingHttpFarmServer:IploadbalancingHttpFarmServer", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IploadbalancingHttpFarmServer resources.
type iploadbalancingHttpFarmServerState struct {
	Address              *string `pulumi:"address"`
	Backup               *bool   `pulumi:"backup"`
	Chain                *string `pulumi:"chain"`
	Cookie               *string `pulumi:"cookie"`
	DisplayName          *string `pulumi:"displayName"`
	FarmId               *int    `pulumi:"farmId"`
	Port                 *int    `pulumi:"port"`
	Probe                *bool   `pulumi:"probe"`
	ProxyProtocolVersion *string `pulumi:"proxyProtocolVersion"`
	ServiceName          *string `pulumi:"serviceName"`
	Ssl                  *bool   `pulumi:"ssl"`
	Status               *string `pulumi:"status"`
	Weight               *int    `pulumi:"weight"`
}

type IploadbalancingHttpFarmServerState struct {
	Address              pulumi.StringPtrInput
	Backup               pulumi.BoolPtrInput
	Chain                pulumi.StringPtrInput
	Cookie               pulumi.StringPtrInput
	DisplayName          pulumi.StringPtrInput
	FarmId               pulumi.IntPtrInput
	Port                 pulumi.IntPtrInput
	Probe                pulumi.BoolPtrInput
	ProxyProtocolVersion pulumi.StringPtrInput
	ServiceName          pulumi.StringPtrInput
	Ssl                  pulumi.BoolPtrInput
	Status               pulumi.StringPtrInput
	Weight               pulumi.IntPtrInput
}

func (IploadbalancingHttpFarmServerState) ElementType() reflect.Type {
	return reflect.TypeOf((*iploadbalancingHttpFarmServerState)(nil)).Elem()
}

type iploadbalancingHttpFarmServerArgs struct {
	Address              string  `pulumi:"address"`
	Backup               *bool   `pulumi:"backup"`
	Chain                *string `pulumi:"chain"`
	DisplayName          *string `pulumi:"displayName"`
	FarmId               int     `pulumi:"farmId"`
	Port                 *int    `pulumi:"port"`
	Probe                *bool   `pulumi:"probe"`
	ProxyProtocolVersion *string `pulumi:"proxyProtocolVersion"`
	ServiceName          string  `pulumi:"serviceName"`
	Ssl                  *bool   `pulumi:"ssl"`
	Status               string  `pulumi:"status"`
	Weight               *int    `pulumi:"weight"`
}

// The set of arguments for constructing a IploadbalancingHttpFarmServer resource.
type IploadbalancingHttpFarmServerArgs struct {
	Address              pulumi.StringInput
	Backup               pulumi.BoolPtrInput
	Chain                pulumi.StringPtrInput
	DisplayName          pulumi.StringPtrInput
	FarmId               pulumi.IntInput
	Port                 pulumi.IntPtrInput
	Probe                pulumi.BoolPtrInput
	ProxyProtocolVersion pulumi.StringPtrInput
	ServiceName          pulumi.StringInput
	Ssl                  pulumi.BoolPtrInput
	Status               pulumi.StringInput
	Weight               pulumi.IntPtrInput
}

func (IploadbalancingHttpFarmServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*iploadbalancingHttpFarmServerArgs)(nil)).Elem()
}

type IploadbalancingHttpFarmServerInput interface {
	pulumi.Input

	ToIploadbalancingHttpFarmServerOutput() IploadbalancingHttpFarmServerOutput
	ToIploadbalancingHttpFarmServerOutputWithContext(ctx context.Context) IploadbalancingHttpFarmServerOutput
}

func (*IploadbalancingHttpFarmServer) ElementType() reflect.Type {
	return reflect.TypeOf((*IploadbalancingHttpFarmServer)(nil))
}

func (i *IploadbalancingHttpFarmServer) ToIploadbalancingHttpFarmServerOutput() IploadbalancingHttpFarmServerOutput {
	return i.ToIploadbalancingHttpFarmServerOutputWithContext(context.Background())
}

func (i *IploadbalancingHttpFarmServer) ToIploadbalancingHttpFarmServerOutputWithContext(ctx context.Context) IploadbalancingHttpFarmServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IploadbalancingHttpFarmServerOutput)
}

func (i *IploadbalancingHttpFarmServer) ToIploadbalancingHttpFarmServerPtrOutput() IploadbalancingHttpFarmServerPtrOutput {
	return i.ToIploadbalancingHttpFarmServerPtrOutputWithContext(context.Background())
}

func (i *IploadbalancingHttpFarmServer) ToIploadbalancingHttpFarmServerPtrOutputWithContext(ctx context.Context) IploadbalancingHttpFarmServerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IploadbalancingHttpFarmServerPtrOutput)
}

type IploadbalancingHttpFarmServerPtrInput interface {
	pulumi.Input

	ToIploadbalancingHttpFarmServerPtrOutput() IploadbalancingHttpFarmServerPtrOutput
	ToIploadbalancingHttpFarmServerPtrOutputWithContext(ctx context.Context) IploadbalancingHttpFarmServerPtrOutput
}

type iploadbalancingHttpFarmServerPtrType IploadbalancingHttpFarmServerArgs

func (*iploadbalancingHttpFarmServerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IploadbalancingHttpFarmServer)(nil))
}

func (i *iploadbalancingHttpFarmServerPtrType) ToIploadbalancingHttpFarmServerPtrOutput() IploadbalancingHttpFarmServerPtrOutput {
	return i.ToIploadbalancingHttpFarmServerPtrOutputWithContext(context.Background())
}

func (i *iploadbalancingHttpFarmServerPtrType) ToIploadbalancingHttpFarmServerPtrOutputWithContext(ctx context.Context) IploadbalancingHttpFarmServerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IploadbalancingHttpFarmServerPtrOutput)
}

// IploadbalancingHttpFarmServerArrayInput is an input type that accepts IploadbalancingHttpFarmServerArray and IploadbalancingHttpFarmServerArrayOutput values.
// You can construct a concrete instance of `IploadbalancingHttpFarmServerArrayInput` via:
//
//          IploadbalancingHttpFarmServerArray{ IploadbalancingHttpFarmServerArgs{...} }
type IploadbalancingHttpFarmServerArrayInput interface {
	pulumi.Input

	ToIploadbalancingHttpFarmServerArrayOutput() IploadbalancingHttpFarmServerArrayOutput
	ToIploadbalancingHttpFarmServerArrayOutputWithContext(context.Context) IploadbalancingHttpFarmServerArrayOutput
}

type IploadbalancingHttpFarmServerArray []IploadbalancingHttpFarmServerInput

func (IploadbalancingHttpFarmServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IploadbalancingHttpFarmServer)(nil)).Elem()
}

func (i IploadbalancingHttpFarmServerArray) ToIploadbalancingHttpFarmServerArrayOutput() IploadbalancingHttpFarmServerArrayOutput {
	return i.ToIploadbalancingHttpFarmServerArrayOutputWithContext(context.Background())
}

func (i IploadbalancingHttpFarmServerArray) ToIploadbalancingHttpFarmServerArrayOutputWithContext(ctx context.Context) IploadbalancingHttpFarmServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IploadbalancingHttpFarmServerArrayOutput)
}

// IploadbalancingHttpFarmServerMapInput is an input type that accepts IploadbalancingHttpFarmServerMap and IploadbalancingHttpFarmServerMapOutput values.
// You can construct a concrete instance of `IploadbalancingHttpFarmServerMapInput` via:
//
//          IploadbalancingHttpFarmServerMap{ "key": IploadbalancingHttpFarmServerArgs{...} }
type IploadbalancingHttpFarmServerMapInput interface {
	pulumi.Input

	ToIploadbalancingHttpFarmServerMapOutput() IploadbalancingHttpFarmServerMapOutput
	ToIploadbalancingHttpFarmServerMapOutputWithContext(context.Context) IploadbalancingHttpFarmServerMapOutput
}

type IploadbalancingHttpFarmServerMap map[string]IploadbalancingHttpFarmServerInput

func (IploadbalancingHttpFarmServerMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IploadbalancingHttpFarmServer)(nil)).Elem()
}

func (i IploadbalancingHttpFarmServerMap) ToIploadbalancingHttpFarmServerMapOutput() IploadbalancingHttpFarmServerMapOutput {
	return i.ToIploadbalancingHttpFarmServerMapOutputWithContext(context.Background())
}

func (i IploadbalancingHttpFarmServerMap) ToIploadbalancingHttpFarmServerMapOutputWithContext(ctx context.Context) IploadbalancingHttpFarmServerMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IploadbalancingHttpFarmServerMapOutput)
}

type IploadbalancingHttpFarmServerOutput struct{ *pulumi.OutputState }

func (IploadbalancingHttpFarmServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IploadbalancingHttpFarmServer)(nil))
}

func (o IploadbalancingHttpFarmServerOutput) ToIploadbalancingHttpFarmServerOutput() IploadbalancingHttpFarmServerOutput {
	return o
}

func (o IploadbalancingHttpFarmServerOutput) ToIploadbalancingHttpFarmServerOutputWithContext(ctx context.Context) IploadbalancingHttpFarmServerOutput {
	return o
}

func (o IploadbalancingHttpFarmServerOutput) ToIploadbalancingHttpFarmServerPtrOutput() IploadbalancingHttpFarmServerPtrOutput {
	return o.ToIploadbalancingHttpFarmServerPtrOutputWithContext(context.Background())
}

func (o IploadbalancingHttpFarmServerOutput) ToIploadbalancingHttpFarmServerPtrOutputWithContext(ctx context.Context) IploadbalancingHttpFarmServerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IploadbalancingHttpFarmServer) *IploadbalancingHttpFarmServer {
		return &v
	}).(IploadbalancingHttpFarmServerPtrOutput)
}

type IploadbalancingHttpFarmServerPtrOutput struct{ *pulumi.OutputState }

func (IploadbalancingHttpFarmServerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IploadbalancingHttpFarmServer)(nil))
}

func (o IploadbalancingHttpFarmServerPtrOutput) ToIploadbalancingHttpFarmServerPtrOutput() IploadbalancingHttpFarmServerPtrOutput {
	return o
}

func (o IploadbalancingHttpFarmServerPtrOutput) ToIploadbalancingHttpFarmServerPtrOutputWithContext(ctx context.Context) IploadbalancingHttpFarmServerPtrOutput {
	return o
}

func (o IploadbalancingHttpFarmServerPtrOutput) Elem() IploadbalancingHttpFarmServerOutput {
	return o.ApplyT(func(v *IploadbalancingHttpFarmServer) IploadbalancingHttpFarmServer {
		if v != nil {
			return *v
		}
		var ret IploadbalancingHttpFarmServer
		return ret
	}).(IploadbalancingHttpFarmServerOutput)
}

type IploadbalancingHttpFarmServerArrayOutput struct{ *pulumi.OutputState }

func (IploadbalancingHttpFarmServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IploadbalancingHttpFarmServer)(nil))
}

func (o IploadbalancingHttpFarmServerArrayOutput) ToIploadbalancingHttpFarmServerArrayOutput() IploadbalancingHttpFarmServerArrayOutput {
	return o
}

func (o IploadbalancingHttpFarmServerArrayOutput) ToIploadbalancingHttpFarmServerArrayOutputWithContext(ctx context.Context) IploadbalancingHttpFarmServerArrayOutput {
	return o
}

func (o IploadbalancingHttpFarmServerArrayOutput) Index(i pulumi.IntInput) IploadbalancingHttpFarmServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IploadbalancingHttpFarmServer {
		return vs[0].([]IploadbalancingHttpFarmServer)[vs[1].(int)]
	}).(IploadbalancingHttpFarmServerOutput)
}

type IploadbalancingHttpFarmServerMapOutput struct{ *pulumi.OutputState }

func (IploadbalancingHttpFarmServerMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]IploadbalancingHttpFarmServer)(nil))
}

func (o IploadbalancingHttpFarmServerMapOutput) ToIploadbalancingHttpFarmServerMapOutput() IploadbalancingHttpFarmServerMapOutput {
	return o
}

func (o IploadbalancingHttpFarmServerMapOutput) ToIploadbalancingHttpFarmServerMapOutputWithContext(ctx context.Context) IploadbalancingHttpFarmServerMapOutput {
	return o
}

func (o IploadbalancingHttpFarmServerMapOutput) MapIndex(k pulumi.StringInput) IploadbalancingHttpFarmServerOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) IploadbalancingHttpFarmServer {
		return vs[0].(map[string]IploadbalancingHttpFarmServer)[vs[1].(string)]
	}).(IploadbalancingHttpFarmServerOutput)
}

func init() {
	pulumi.RegisterOutputType(IploadbalancingHttpFarmServerOutput{})
	pulumi.RegisterOutputType(IploadbalancingHttpFarmServerPtrOutput{})
	pulumi.RegisterOutputType(IploadbalancingHttpFarmServerArrayOutput{})
	pulumi.RegisterOutputType(IploadbalancingHttpFarmServerMapOutput{})
}
