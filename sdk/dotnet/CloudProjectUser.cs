// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ovh
{
    [OvhResourceType("ovh:index/cloudProjectUser:CloudProjectUser")]
    public partial class CloudProjectUser : Pulumi.CustomResource
    {
        [Output("creationDate")]
        public Output<string> CreationDate { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("openstackRc")]
        public Output<ImmutableDictionary<string, object>> OpenstackRc { get; private set; } = null!;

        [Output("password")]
        public Output<string> Password { get; private set; } = null!;

        [Output("roleName")]
        public Output<string?> RoleName { get; private set; } = null!;

        [Output("roleNames")]
        public Output<ImmutableArray<string>> RoleNames { get; private set; } = null!;

        [Output("roles")]
        public Output<ImmutableArray<Outputs.CloudProjectUserRole>> Roles { get; private set; } = null!;

        /// <summary>
        /// Service name of the resource representing the id of the cloud project.
        /// </summary>
        [Output("serviceName")]
        public Output<string> ServiceName { get; private set; } = null!;

        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        [Output("username")]
        public Output<string> Username { get; private set; } = null!;


        /// <summary>
        /// Create a CloudProjectUser resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CloudProjectUser(string name, CloudProjectUserArgs args, CustomResourceOptions? options = null)
            : base("ovh:index/cloudProjectUser:CloudProjectUser", name, args ?? new CloudProjectUserArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CloudProjectUser(string name, Input<string> id, CloudProjectUserState? state = null, CustomResourceOptions? options = null)
            : base("ovh:index/cloudProjectUser:CloudProjectUser", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CloudProjectUser resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CloudProjectUser Get(string name, Input<string> id, CloudProjectUserState? state = null, CustomResourceOptions? options = null)
        {
            return new CloudProjectUser(name, id, state, options);
        }
    }

    public sealed class CloudProjectUserArgs : Pulumi.ResourceArgs
    {
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("openstackRc")]
        private InputMap<object>? _openstackRc;
        public InputMap<object> OpenstackRc
        {
            get => _openstackRc ?? (_openstackRc = new InputMap<object>());
            set => _openstackRc = value;
        }

        [Input("roleName")]
        public Input<string>? RoleName { get; set; }

        [Input("roleNames")]
        private InputList<string>? _roleNames;
        public InputList<string> RoleNames
        {
            get => _roleNames ?? (_roleNames = new InputList<string>());
            set => _roleNames = value;
        }

        /// <summary>
        /// Service name of the resource representing the id of the cloud project.
        /// </summary>
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        public CloudProjectUserArgs()
        {
        }
    }

    public sealed class CloudProjectUserState : Pulumi.ResourceArgs
    {
        [Input("creationDate")]
        public Input<string>? CreationDate { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("openstackRc")]
        private InputMap<object>? _openstackRc;
        public InputMap<object> OpenstackRc
        {
            get => _openstackRc ?? (_openstackRc = new InputMap<object>());
            set => _openstackRc = value;
        }

        [Input("password")]
        public Input<string>? Password { get; set; }

        [Input("roleName")]
        public Input<string>? RoleName { get; set; }

        [Input("roleNames")]
        private InputList<string>? _roleNames;
        public InputList<string> RoleNames
        {
            get => _roleNames ?? (_roleNames = new InputList<string>());
            set => _roleNames = value;
        }

        [Input("roles")]
        private InputList<Inputs.CloudProjectUserRoleGetArgs>? _roles;
        public InputList<Inputs.CloudProjectUserRoleGetArgs> Roles
        {
            get => _roles ?? (_roles = new InputList<Inputs.CloudProjectUserRoleGetArgs>());
            set => _roles = value;
        }

        /// <summary>
        /// Service name of the resource representing the id of the cloud project.
        /// </summary>
        [Input("serviceName")]
        public Input<string>? ServiceName { get; set; }

        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("username")]
        public Input<string>? Username { get; set; }

        public CloudProjectUserState()
        {
        }
    }
}
