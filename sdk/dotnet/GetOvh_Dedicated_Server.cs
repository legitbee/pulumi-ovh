// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ovh
{
    public static class GetOvh_Dedicated_Server
    {
        public static Task<GetOvh_Dedicated_ServerResult> InvokeAsync(GetOvh_Dedicated_ServerArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetOvh_Dedicated_ServerResult>("ovh:index/getOvh_Dedicated_Server:getOvh_Dedicated_Server", args ?? new GetOvh_Dedicated_ServerArgs(), options.WithVersion());
    }


    public sealed class GetOvh_Dedicated_ServerArgs : Pulumi.InvokeArgs
    {
        [Input("serviceName", required: true)]
        public string ServiceName { get; set; } = null!;

        public GetOvh_Dedicated_ServerArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetOvh_Dedicated_ServerResult
    {
        public readonly int BootId;
        public readonly string CommercialRange;
        public readonly string Datacenter;
        public readonly ImmutableArray<string> EnabledPublicVnis;
        public readonly ImmutableArray<string> EnabledVrackAggregationVnis;
        public readonly ImmutableArray<string> EnabledVrackVnis;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Ip;
        public readonly ImmutableArray<string> Ips;
        public readonly int LinkSpeed;
        public readonly bool Monitoring;
        public readonly string Name;
        public readonly string Os;
        public readonly bool ProfessionalUse;
        public readonly string Rack;
        public readonly string RescueMail;
        public readonly string Reverse;
        public readonly string RootDevice;
        public readonly int ServerId;
        public readonly string ServiceName;
        public readonly string State;
        public readonly string SupportLevel;
        public readonly ImmutableArray<Outputs.GetOvh_Dedicated_ServerVniResult> Vnis;

        [OutputConstructor]
        private GetOvh_Dedicated_ServerResult(
            int bootId,

            string commercialRange,

            string datacenter,

            ImmutableArray<string> enabledPublicVnis,

            ImmutableArray<string> enabledVrackAggregationVnis,

            ImmutableArray<string> enabledVrackVnis,

            string id,

            string ip,

            ImmutableArray<string> ips,

            int linkSpeed,

            bool monitoring,

            string name,

            string os,

            bool professionalUse,

            string rack,

            string rescueMail,

            string reverse,

            string rootDevice,

            int serverId,

            string serviceName,

            string state,

            string supportLevel,

            ImmutableArray<Outputs.GetOvh_Dedicated_ServerVniResult> vnis)
        {
            BootId = bootId;
            CommercialRange = commercialRange;
            Datacenter = datacenter;
            EnabledPublicVnis = enabledPublicVnis;
            EnabledVrackAggregationVnis = enabledVrackAggregationVnis;
            EnabledVrackVnis = enabledVrackVnis;
            Id = id;
            Ip = ip;
            Ips = ips;
            LinkSpeed = linkSpeed;
            Monitoring = monitoring;
            Name = name;
            Os = os;
            ProfessionalUse = professionalUse;
            Rack = rack;
            RescueMail = rescueMail;
            Reverse = reverse;
            RootDevice = rootDevice;
            ServerId = serverId;
            ServiceName = serviceName;
            State = state;
            SupportLevel = supportLevel;
            Vnis = vnis;
        }
    }
}
