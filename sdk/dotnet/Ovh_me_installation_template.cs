// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ovh
{
    [OvhResourceType("ovh:index/ovh_me_installation_template:ovh_me_installation_template")]
    public partial class Ovh_me_installation_template : Pulumi.CustomResource
    {
        /// <summary>
        /// List of all language available for this template
        /// </summary>
        [Output("availableLanguages")]
        public Output<ImmutableArray<string>> AvailableLanguages { get; private set; } = null!;

        /// <summary>
        /// OVH template name yours will be based on, choose one among the list given by compatibleTemplates function
        /// </summary>
        [Output("baseTemplateName")]
        public Output<string> BaseTemplateName { get; private set; } = null!;

        /// <summary>
        /// This distribution is new and, although tested and functional, may still display odd behaviour
        /// </summary>
        [Output("beta")]
        public Output<bool> Beta { get; private set; } = null!;

        /// <summary>
        /// This template bit format (32 or 64)
        /// </summary>
        [Output("bitFormat")]
        public Output<int> BitFormat { get; private set; } = null!;

        /// <summary>
        /// Category of this template (informative only). (basic, customer, hosting, other, readyToUse, virtualisation)
        /// </summary>
        [Output("category")]
        public Output<string> Category { get; private set; } = null!;

        [Output("customization")]
        public Output<Outputs.Ovh_me_installation_templateCustomization?> Customization { get; private set; } = null!;

        /// <summary>
        /// The default language of this template
        /// </summary>
        [Output("defaultLanguage")]
        public Output<string> DefaultLanguage { get; private set; } = null!;

        /// <summary>
        /// is this distribution deprecated
        /// </summary>
        [Output("deprecated")]
        public Output<bool> Deprecated { get; private set; } = null!;

        /// <summary>
        /// information about this template
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// the distribution this template is based on
        /// </summary>
        [Output("distribution")]
        public Output<string> Distribution { get; private set; } = null!;

        /// <summary>
        /// this template family type (bsd,linux,solaris,windows)
        /// </summary>
        [Output("family")]
        public Output<string> Family { get; private set; } = null!;

        /// <summary>
        /// Filesystems available (btrfs,ext3,ext4,ntfs,reiserfs,swap,ufs,xfs,zfs)
        /// </summary>
        [Output("filesystems")]
        public Output<ImmutableArray<string>> Filesystems { get; private set; } = null!;

        /// <summary>
        /// This distribution supports hardware raid configuration through the OVH API
        /// </summary>
        [Output("hardRaidConfiguration")]
        public Output<bool> HardRaidConfiguration { get; private set; } = null!;

        /// <summary>
        /// Date of last modification of the base image
        /// </summary>
        [Output("lastModification")]
        public Output<string> LastModification { get; private set; } = null!;

        /// <summary>
        /// This distribution supports Logical Volumes (Linux LVM)
        /// </summary>
        [Output("lvmReady")]
        public Output<bool> LvmReady { get; private set; } = null!;

        /// <summary>
        /// Remove default partition schemes at creation
        /// </summary>
        [Output("removeDefaultPartitionSchemes")]
        public Output<bool> RemoveDefaultPartitionSchemes { get; private set; } = null!;

        /// <summary>
        /// This distribution supports installation using the distribution's native kernel instead of the recommended OVH kernel
        /// </summary>
        [Output("supportsDistributionKernel")]
        public Output<bool> SupportsDistributionKernel { get; private set; } = null!;

        /// <summary>
        /// This distribution supports the GUID Partition Table (GPT), providing up to 128 partitions that can have more than 2TB
        /// </summary>
        [Output("supportsGptLabel")]
        public Output<bool> SupportsGptLabel { get; private set; } = null!;

        /// <summary>
        /// This distribution supports RTM software
        /// </summary>
        [Output("supportsRtm")]
        public Output<bool> SupportsRtm { get; private set; } = null!;

        /// <summary>
        /// This distribution supports the microsoft SQL server
        /// </summary>
        [Output("supportsSqlServer")]
        public Output<bool> SupportsSqlServer { get; private set; } = null!;

        /// <summary>
        /// This distribution supports UEFI setup (no,only,yes)
        /// </summary>
        [Output("supportsUefi")]
        public Output<string> SupportsUefi { get; private set; } = null!;

        /// <summary>
        /// This template name
        /// </summary>
        [Output("templateName")]
        public Output<string> TemplateName { get; private set; } = null!;


        /// <summary>
        /// Create a Ovh_me_installation_template resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Ovh_me_installation_template(string name, Ovh_me_installation_templateArgs args, CustomResourceOptions? options = null)
            : base("ovh:index/ovh_me_installation_template:ovh_me_installation_template", name, args ?? new Ovh_me_installation_templateArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Ovh_me_installation_template(string name, Input<string> id, Ovh_me_installation_templateState? state = null, CustomResourceOptions? options = null)
            : base("ovh:index/ovh_me_installation_template:ovh_me_installation_template", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Ovh_me_installation_template resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Ovh_me_installation_template Get(string name, Input<string> id, Ovh_me_installation_templateState? state = null, CustomResourceOptions? options = null)
        {
            return new Ovh_me_installation_template(name, id, state, options);
        }
    }

    public sealed class Ovh_me_installation_templateArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// OVH template name yours will be based on, choose one among the list given by compatibleTemplates function
        /// </summary>
        [Input("baseTemplateName", required: true)]
        public Input<string> BaseTemplateName { get; set; } = null!;

        [Input("customization")]
        public Input<Inputs.Ovh_me_installation_templateCustomizationArgs>? Customization { get; set; }

        /// <summary>
        /// The default language of this template
        /// </summary>
        [Input("defaultLanguage", required: true)]
        public Input<string> DefaultLanguage { get; set; } = null!;

        /// <summary>
        /// Remove default partition schemes at creation
        /// </summary>
        [Input("removeDefaultPartitionSchemes")]
        public Input<bool>? RemoveDefaultPartitionSchemes { get; set; }

        /// <summary>
        /// This template name
        /// </summary>
        [Input("templateName", required: true)]
        public Input<string> TemplateName { get; set; } = null!;

        public Ovh_me_installation_templateArgs()
        {
        }
    }

    public sealed class Ovh_me_installation_templateState : Pulumi.ResourceArgs
    {
        [Input("availableLanguages")]
        private InputList<string>? _availableLanguages;

        /// <summary>
        /// List of all language available for this template
        /// </summary>
        public InputList<string> AvailableLanguages
        {
            get => _availableLanguages ?? (_availableLanguages = new InputList<string>());
            set => _availableLanguages = value;
        }

        /// <summary>
        /// OVH template name yours will be based on, choose one among the list given by compatibleTemplates function
        /// </summary>
        [Input("baseTemplateName")]
        public Input<string>? BaseTemplateName { get; set; }

        /// <summary>
        /// This distribution is new and, although tested and functional, may still display odd behaviour
        /// </summary>
        [Input("beta")]
        public Input<bool>? Beta { get; set; }

        /// <summary>
        /// This template bit format (32 or 64)
        /// </summary>
        [Input("bitFormat")]
        public Input<int>? BitFormat { get; set; }

        /// <summary>
        /// Category of this template (informative only). (basic, customer, hosting, other, readyToUse, virtualisation)
        /// </summary>
        [Input("category")]
        public Input<string>? Category { get; set; }

        [Input("customization")]
        public Input<Inputs.Ovh_me_installation_templateCustomizationGetArgs>? Customization { get; set; }

        /// <summary>
        /// The default language of this template
        /// </summary>
        [Input("defaultLanguage")]
        public Input<string>? DefaultLanguage { get; set; }

        /// <summary>
        /// is this distribution deprecated
        /// </summary>
        [Input("deprecated")]
        public Input<bool>? Deprecated { get; set; }

        /// <summary>
        /// information about this template
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// the distribution this template is based on
        /// </summary>
        [Input("distribution")]
        public Input<string>? Distribution { get; set; }

        /// <summary>
        /// this template family type (bsd,linux,solaris,windows)
        /// </summary>
        [Input("family")]
        public Input<string>? Family { get; set; }

        [Input("filesystems")]
        private InputList<string>? _filesystems;

        /// <summary>
        /// Filesystems available (btrfs,ext3,ext4,ntfs,reiserfs,swap,ufs,xfs,zfs)
        /// </summary>
        public InputList<string> Filesystems
        {
            get => _filesystems ?? (_filesystems = new InputList<string>());
            set => _filesystems = value;
        }

        /// <summary>
        /// This distribution supports hardware raid configuration through the OVH API
        /// </summary>
        [Input("hardRaidConfiguration")]
        public Input<bool>? HardRaidConfiguration { get; set; }

        /// <summary>
        /// Date of last modification of the base image
        /// </summary>
        [Input("lastModification")]
        public Input<string>? LastModification { get; set; }

        /// <summary>
        /// This distribution supports Logical Volumes (Linux LVM)
        /// </summary>
        [Input("lvmReady")]
        public Input<bool>? LvmReady { get; set; }

        /// <summary>
        /// Remove default partition schemes at creation
        /// </summary>
        [Input("removeDefaultPartitionSchemes")]
        public Input<bool>? RemoveDefaultPartitionSchemes { get; set; }

        /// <summary>
        /// This distribution supports installation using the distribution's native kernel instead of the recommended OVH kernel
        /// </summary>
        [Input("supportsDistributionKernel")]
        public Input<bool>? SupportsDistributionKernel { get; set; }

        /// <summary>
        /// This distribution supports the GUID Partition Table (GPT), providing up to 128 partitions that can have more than 2TB
        /// </summary>
        [Input("supportsGptLabel")]
        public Input<bool>? SupportsGptLabel { get; set; }

        /// <summary>
        /// This distribution supports RTM software
        /// </summary>
        [Input("supportsRtm")]
        public Input<bool>? SupportsRtm { get; set; }

        /// <summary>
        /// This distribution supports the microsoft SQL server
        /// </summary>
        [Input("supportsSqlServer")]
        public Input<bool>? SupportsSqlServer { get; set; }

        /// <summary>
        /// This distribution supports UEFI setup (no,only,yes)
        /// </summary>
        [Input("supportsUefi")]
        public Input<string>? SupportsUefi { get; set; }

        /// <summary>
        /// This template name
        /// </summary>
        [Input("templateName")]
        public Input<string>? TemplateName { get; set; }

        public Ovh_me_installation_templateState()
        {
        }
    }
}
