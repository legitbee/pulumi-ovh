// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ovh
{
    [OvhResourceType("ovh:index/ovh_cloud_project_network_private_subnet:ovh_cloud_project_network_private_subnet")]
    public partial class Ovh_cloud_project_network_private_subnet : Pulumi.CustomResource
    {
        [Output("cidr")]
        public Output<string> Cidr { get; private set; } = null!;

        [Output("dhcp")]
        public Output<bool?> Dhcp { get; private set; } = null!;

        [Output("end")]
        public Output<string> End { get; private set; } = null!;

        [Output("gatewayIp")]
        public Output<string> GatewayIp { get; private set; } = null!;

        [Output("ipPools")]
        public Output<ImmutableArray<Outputs.Ovh_cloud_project_network_private_subnetIpPool>> IpPools { get; private set; } = null!;

        [Output("network")]
        public Output<string> Network { get; private set; } = null!;

        [Output("networkId")]
        public Output<string> NetworkId { get; private set; } = null!;

        [Output("noGateway")]
        public Output<bool?> NoGateway { get; private set; } = null!;

        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        /// <summary>
        /// Service name of the resource representing the id of the cloud project.
        /// </summary>
        [Output("serviceName")]
        public Output<string> ServiceName { get; private set; } = null!;

        [Output("start")]
        public Output<string> Start { get; private set; } = null!;


        /// <summary>
        /// Create a Ovh_cloud_project_network_private_subnet resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Ovh_cloud_project_network_private_subnet(string name, Ovh_cloud_project_network_private_subnetArgs args, CustomResourceOptions? options = null)
            : base("ovh:index/ovh_cloud_project_network_private_subnet:ovh_cloud_project_network_private_subnet", name, args ?? new Ovh_cloud_project_network_private_subnetArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Ovh_cloud_project_network_private_subnet(string name, Input<string> id, Ovh_cloud_project_network_private_subnetState? state = null, CustomResourceOptions? options = null)
            : base("ovh:index/ovh_cloud_project_network_private_subnet:ovh_cloud_project_network_private_subnet", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Ovh_cloud_project_network_private_subnet resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Ovh_cloud_project_network_private_subnet Get(string name, Input<string> id, Ovh_cloud_project_network_private_subnetState? state = null, CustomResourceOptions? options = null)
        {
            return new Ovh_cloud_project_network_private_subnet(name, id, state, options);
        }
    }

    public sealed class Ovh_cloud_project_network_private_subnetArgs : Pulumi.ResourceArgs
    {
        [Input("dhcp")]
        public Input<bool>? Dhcp { get; set; }

        [Input("end", required: true)]
        public Input<string> End { get; set; } = null!;

        [Input("network", required: true)]
        public Input<string> Network { get; set; } = null!;

        [Input("networkId", required: true)]
        public Input<string> NetworkId { get; set; } = null!;

        [Input("noGateway")]
        public Input<bool>? NoGateway { get; set; }

        [Input("region", required: true)]
        public Input<string> Region { get; set; } = null!;

        /// <summary>
        /// Service name of the resource representing the id of the cloud project.
        /// </summary>
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        [Input("start", required: true)]
        public Input<string> Start { get; set; } = null!;

        public Ovh_cloud_project_network_private_subnetArgs()
        {
        }
    }

    public sealed class Ovh_cloud_project_network_private_subnetState : Pulumi.ResourceArgs
    {
        [Input("cidr")]
        public Input<string>? Cidr { get; set; }

        [Input("dhcp")]
        public Input<bool>? Dhcp { get; set; }

        [Input("end")]
        public Input<string>? End { get; set; }

        [Input("gatewayIp")]
        public Input<string>? GatewayIp { get; set; }

        [Input("ipPools")]
        private InputList<Inputs.Ovh_cloud_project_network_private_subnetIpPoolGetArgs>? _ipPools;
        public InputList<Inputs.Ovh_cloud_project_network_private_subnetIpPoolGetArgs> IpPools
        {
            get => _ipPools ?? (_ipPools = new InputList<Inputs.Ovh_cloud_project_network_private_subnetIpPoolGetArgs>());
            set => _ipPools = value;
        }

        [Input("network")]
        public Input<string>? Network { get; set; }

        [Input("networkId")]
        public Input<string>? NetworkId { get; set; }

        [Input("noGateway")]
        public Input<bool>? NoGateway { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// Service name of the resource representing the id of the cloud project.
        /// </summary>
        [Input("serviceName")]
        public Input<string>? ServiceName { get; set; }

        [Input("start")]
        public Input<string>? Start { get; set; }

        public Ovh_cloud_project_network_private_subnetState()
        {
        }
    }
}
