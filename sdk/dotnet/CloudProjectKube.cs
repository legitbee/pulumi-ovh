// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ovh
{
    [OvhResourceType("ovh:index/cloudProjectKube:CloudProjectKube")]
    public partial class CloudProjectKube : Pulumi.CustomResource
    {
        [Output("controlPlaneIsUpToDate")]
        public Output<bool> ControlPlaneIsUpToDate { get; private set; } = null!;

        [Output("isUpToDate")]
        public Output<bool> IsUpToDate { get; private set; } = null!;

        [Output("kubeconfig")]
        public Output<string> Kubeconfig { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("nextUpgradeVersions")]
        public Output<ImmutableArray<string>> NextUpgradeVersions { get; private set; } = null!;

        [Output("nodesUrl")]
        public Output<string> NodesUrl { get; private set; } = null!;

        [Output("privateNetworkId")]
        public Output<string?> PrivateNetworkId { get; private set; } = null!;

        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        [Output("serviceName")]
        public Output<string> ServiceName { get; private set; } = null!;

        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        [Output("updatePolicy")]
        public Output<string> UpdatePolicy { get; private set; } = null!;

        [Output("url")]
        public Output<string> Url { get; private set; } = null!;

        [Output("version")]
        public Output<string> Version { get; private set; } = null!;


        /// <summary>
        /// Create a CloudProjectKube resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CloudProjectKube(string name, CloudProjectKubeArgs args, CustomResourceOptions? options = null)
            : base("ovh:index/cloudProjectKube:CloudProjectKube", name, args ?? new CloudProjectKubeArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CloudProjectKube(string name, Input<string> id, CloudProjectKubeState? state = null, CustomResourceOptions? options = null)
            : base("ovh:index/cloudProjectKube:CloudProjectKube", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CloudProjectKube resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CloudProjectKube Get(string name, Input<string> id, CloudProjectKubeState? state = null, CustomResourceOptions? options = null)
        {
            return new CloudProjectKube(name, id, state, options);
        }
    }

    public sealed class CloudProjectKubeArgs : Pulumi.ResourceArgs
    {
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("privateNetworkId")]
        public Input<string>? PrivateNetworkId { get; set; }

        [Input("region", required: true)]
        public Input<string> Region { get; set; } = null!;

        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        [Input("version")]
        public Input<string>? Version { get; set; }

        public CloudProjectKubeArgs()
        {
        }
    }

    public sealed class CloudProjectKubeState : Pulumi.ResourceArgs
    {
        [Input("controlPlaneIsUpToDate")]
        public Input<bool>? ControlPlaneIsUpToDate { get; set; }

        [Input("isUpToDate")]
        public Input<bool>? IsUpToDate { get; set; }

        [Input("kubeconfig")]
        public Input<string>? Kubeconfig { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("nextUpgradeVersions")]
        private InputList<string>? _nextUpgradeVersions;
        public InputList<string> NextUpgradeVersions
        {
            get => _nextUpgradeVersions ?? (_nextUpgradeVersions = new InputList<string>());
            set => _nextUpgradeVersions = value;
        }

        [Input("nodesUrl")]
        public Input<string>? NodesUrl { get; set; }

        [Input("privateNetworkId")]
        public Input<string>? PrivateNetworkId { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("serviceName")]
        public Input<string>? ServiceName { get; set; }

        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("updatePolicy")]
        public Input<string>? UpdatePolicy { get; set; }

        [Input("url")]
        public Input<string>? Url { get; set; }

        [Input("version")]
        public Input<string>? Version { get; set; }

        public CloudProjectKubeState()
        {
        }
    }
}
