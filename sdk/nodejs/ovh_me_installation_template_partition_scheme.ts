// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Ovh_me_installation_template_partition_scheme extends pulumi.CustomResource {
    /**
     * Get an existing Ovh_me_installation_template_partition_scheme resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Ovh_me_installation_template_partition_schemeState, opts?: pulumi.CustomResourceOptions): Ovh_me_installation_template_partition_scheme {
        return new Ovh_me_installation_template_partition_scheme(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'ovh:index/ovh_me_installation_template_partition_scheme:ovh_me_installation_template_partition_scheme';

    /**
     * Returns true if the given object is an instance of Ovh_me_installation_template_partition_scheme.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Ovh_me_installation_template_partition_scheme {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Ovh_me_installation_template_partition_scheme.__pulumiType;
    }

    /**
     * name of this partitioning scheme
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * on a reinstall, if a partitioning scheme is not specified, the one with the higher priority will be used by default,
     * among all the compatible partitioning schemes (given the underlying hardware specifications)
     */
    public readonly priority!: pulumi.Output<number>;
    /**
     * This template name
     */
    public readonly templateName!: pulumi.Output<string>;

    /**
     * Create a Ovh_me_installation_template_partition_scheme resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: Ovh_me_installation_template_partition_schemeArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: Ovh_me_installation_template_partition_schemeArgs | Ovh_me_installation_template_partition_schemeState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as Ovh_me_installation_template_partition_schemeState | undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["priority"] = state ? state.priority : undefined;
            inputs["templateName"] = state ? state.templateName : undefined;
        } else {
            const args = argsOrState as Ovh_me_installation_template_partition_schemeArgs | undefined;
            if ((!args || args.priority === undefined) && !opts.urn) {
                throw new Error("Missing required property 'priority'");
            }
            if ((!args || args.templateName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'templateName'");
            }
            inputs["name"] = args ? args.name : undefined;
            inputs["priority"] = args ? args.priority : undefined;
            inputs["templateName"] = args ? args.templateName : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(Ovh_me_installation_template_partition_scheme.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ovh_me_installation_template_partition_scheme resources.
 */
export interface Ovh_me_installation_template_partition_schemeState {
    /**
     * name of this partitioning scheme
     */
    name?: pulumi.Input<string>;
    /**
     * on a reinstall, if a partitioning scheme is not specified, the one with the higher priority will be used by default,
     * among all the compatible partitioning schemes (given the underlying hardware specifications)
     */
    priority?: pulumi.Input<number>;
    /**
     * This template name
     */
    templateName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Ovh_me_installation_template_partition_scheme resource.
 */
export interface Ovh_me_installation_template_partition_schemeArgs {
    /**
     * name of this partitioning scheme
     */
    name?: pulumi.Input<string>;
    /**
     * on a reinstall, if a partitioning scheme is not specified, the one with the higher priority will be used by default,
     * among all the compatible partitioning schemes (given the underlying hardware specifications)
     */
    priority: pulumi.Input<number>;
    /**
     * This template name
     */
    templateName: pulumi.Input<string>;
}
