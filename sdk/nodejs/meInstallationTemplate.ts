// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

export class MeInstallationTemplate extends pulumi.CustomResource {
    /**
     * Get an existing MeInstallationTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MeInstallationTemplateState, opts?: pulumi.CustomResourceOptions): MeInstallationTemplate {
        return new MeInstallationTemplate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'ovh:index/meInstallationTemplate:MeInstallationTemplate';

    /**
     * Returns true if the given object is an instance of MeInstallationTemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MeInstallationTemplate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MeInstallationTemplate.__pulumiType;
    }

    /**
     * List of all language available for this template
     */
    public /*out*/ readonly availableLanguages!: pulumi.Output<string[]>;
    /**
     * OVH template name yours will be based on, choose one among the list given by compatibleTemplates function
     */
    public readonly baseTemplateName!: pulumi.Output<string>;
    /**
     * This distribution is new and, although tested and functional, may still display odd behaviour
     */
    public /*out*/ readonly beta!: pulumi.Output<boolean>;
    /**
     * This template bit format (32 or 64)
     */
    public /*out*/ readonly bitFormat!: pulumi.Output<number>;
    /**
     * Category of this template (informative only). (basic, customer, hosting, other, readyToUse, virtualisation)
     */
    public /*out*/ readonly category!: pulumi.Output<string>;
    public readonly customization!: pulumi.Output<outputs.MeInstallationTemplateCustomization | undefined>;
    /**
     * The default language of this template
     */
    public readonly defaultLanguage!: pulumi.Output<string>;
    /**
     * is this distribution deprecated
     */
    public /*out*/ readonly deprecated!: pulumi.Output<boolean>;
    /**
     * information about this template
     */
    public /*out*/ readonly description!: pulumi.Output<string>;
    /**
     * the distribution this template is based on
     */
    public /*out*/ readonly distribution!: pulumi.Output<string>;
    /**
     * this template family type (bsd,linux,solaris,windows)
     */
    public /*out*/ readonly family!: pulumi.Output<string>;
    /**
     * Filesystems available (btrfs,ext3,ext4,ntfs,reiserfs,swap,ufs,xfs,zfs)
     */
    public /*out*/ readonly filesystems!: pulumi.Output<string[]>;
    /**
     * This distribution supports hardware raid configuration through the OVH API
     */
    public /*out*/ readonly hardRaidConfiguration!: pulumi.Output<boolean>;
    /**
     * Date of last modification of the base image
     */
    public /*out*/ readonly lastModification!: pulumi.Output<string>;
    /**
     * This distribution supports Logical Volumes (Linux LVM)
     */
    public /*out*/ readonly lvmReady!: pulumi.Output<boolean>;
    /**
     * Remove default partition schemes at creation
     */
    public readonly removeDefaultPartitionSchemes!: pulumi.Output<boolean>;
    /**
     * This distribution supports installation using the distribution's native kernel instead of the recommended OVH kernel
     */
    public /*out*/ readonly supportsDistributionKernel!: pulumi.Output<boolean>;
    /**
     * This distribution supports the GUID Partition Table (GPT), providing up to 128 partitions that can have more than 2TB
     */
    public /*out*/ readonly supportsGptLabel!: pulumi.Output<boolean>;
    /**
     * This distribution supports RTM software
     */
    public /*out*/ readonly supportsRtm!: pulumi.Output<boolean>;
    /**
     * This distribution supports the microsoft SQL server
     */
    public /*out*/ readonly supportsSqlServer!: pulumi.Output<boolean>;
    /**
     * This distribution supports UEFI setup (no,only,yes)
     */
    public /*out*/ readonly supportsUefi!: pulumi.Output<string>;
    /**
     * This template name
     */
    public readonly templateName!: pulumi.Output<string>;

    /**
     * Create a MeInstallationTemplate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MeInstallationTemplateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MeInstallationTemplateArgs | MeInstallationTemplateState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MeInstallationTemplateState | undefined;
            inputs["availableLanguages"] = state ? state.availableLanguages : undefined;
            inputs["baseTemplateName"] = state ? state.baseTemplateName : undefined;
            inputs["beta"] = state ? state.beta : undefined;
            inputs["bitFormat"] = state ? state.bitFormat : undefined;
            inputs["category"] = state ? state.category : undefined;
            inputs["customization"] = state ? state.customization : undefined;
            inputs["defaultLanguage"] = state ? state.defaultLanguage : undefined;
            inputs["deprecated"] = state ? state.deprecated : undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["distribution"] = state ? state.distribution : undefined;
            inputs["family"] = state ? state.family : undefined;
            inputs["filesystems"] = state ? state.filesystems : undefined;
            inputs["hardRaidConfiguration"] = state ? state.hardRaidConfiguration : undefined;
            inputs["lastModification"] = state ? state.lastModification : undefined;
            inputs["lvmReady"] = state ? state.lvmReady : undefined;
            inputs["removeDefaultPartitionSchemes"] = state ? state.removeDefaultPartitionSchemes : undefined;
            inputs["supportsDistributionKernel"] = state ? state.supportsDistributionKernel : undefined;
            inputs["supportsGptLabel"] = state ? state.supportsGptLabel : undefined;
            inputs["supportsRtm"] = state ? state.supportsRtm : undefined;
            inputs["supportsSqlServer"] = state ? state.supportsSqlServer : undefined;
            inputs["supportsUefi"] = state ? state.supportsUefi : undefined;
            inputs["templateName"] = state ? state.templateName : undefined;
        } else {
            const args = argsOrState as MeInstallationTemplateArgs | undefined;
            if ((!args || args.baseTemplateName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'baseTemplateName'");
            }
            if ((!args || args.defaultLanguage === undefined) && !opts.urn) {
                throw new Error("Missing required property 'defaultLanguage'");
            }
            if ((!args || args.templateName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'templateName'");
            }
            inputs["baseTemplateName"] = args ? args.baseTemplateName : undefined;
            inputs["customization"] = args ? args.customization : undefined;
            inputs["defaultLanguage"] = args ? args.defaultLanguage : undefined;
            inputs["removeDefaultPartitionSchemes"] = args ? args.removeDefaultPartitionSchemes : undefined;
            inputs["templateName"] = args ? args.templateName : undefined;
            inputs["availableLanguages"] = undefined /*out*/;
            inputs["beta"] = undefined /*out*/;
            inputs["bitFormat"] = undefined /*out*/;
            inputs["category"] = undefined /*out*/;
            inputs["deprecated"] = undefined /*out*/;
            inputs["description"] = undefined /*out*/;
            inputs["distribution"] = undefined /*out*/;
            inputs["family"] = undefined /*out*/;
            inputs["filesystems"] = undefined /*out*/;
            inputs["hardRaidConfiguration"] = undefined /*out*/;
            inputs["lastModification"] = undefined /*out*/;
            inputs["lvmReady"] = undefined /*out*/;
            inputs["supportsDistributionKernel"] = undefined /*out*/;
            inputs["supportsGptLabel"] = undefined /*out*/;
            inputs["supportsRtm"] = undefined /*out*/;
            inputs["supportsSqlServer"] = undefined /*out*/;
            inputs["supportsUefi"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(MeInstallationTemplate.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering MeInstallationTemplate resources.
 */
export interface MeInstallationTemplateState {
    /**
     * List of all language available for this template
     */
    availableLanguages?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * OVH template name yours will be based on, choose one among the list given by compatibleTemplates function
     */
    baseTemplateName?: pulumi.Input<string>;
    /**
     * This distribution is new and, although tested and functional, may still display odd behaviour
     */
    beta?: pulumi.Input<boolean>;
    /**
     * This template bit format (32 or 64)
     */
    bitFormat?: pulumi.Input<number>;
    /**
     * Category of this template (informative only). (basic, customer, hosting, other, readyToUse, virtualisation)
     */
    category?: pulumi.Input<string>;
    customization?: pulumi.Input<inputs.MeInstallationTemplateCustomization>;
    /**
     * The default language of this template
     */
    defaultLanguage?: pulumi.Input<string>;
    /**
     * is this distribution deprecated
     */
    deprecated?: pulumi.Input<boolean>;
    /**
     * information about this template
     */
    description?: pulumi.Input<string>;
    /**
     * the distribution this template is based on
     */
    distribution?: pulumi.Input<string>;
    /**
     * this template family type (bsd,linux,solaris,windows)
     */
    family?: pulumi.Input<string>;
    /**
     * Filesystems available (btrfs,ext3,ext4,ntfs,reiserfs,swap,ufs,xfs,zfs)
     */
    filesystems?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * This distribution supports hardware raid configuration through the OVH API
     */
    hardRaidConfiguration?: pulumi.Input<boolean>;
    /**
     * Date of last modification of the base image
     */
    lastModification?: pulumi.Input<string>;
    /**
     * This distribution supports Logical Volumes (Linux LVM)
     */
    lvmReady?: pulumi.Input<boolean>;
    /**
     * Remove default partition schemes at creation
     */
    removeDefaultPartitionSchemes?: pulumi.Input<boolean>;
    /**
     * This distribution supports installation using the distribution's native kernel instead of the recommended OVH kernel
     */
    supportsDistributionKernel?: pulumi.Input<boolean>;
    /**
     * This distribution supports the GUID Partition Table (GPT), providing up to 128 partitions that can have more than 2TB
     */
    supportsGptLabel?: pulumi.Input<boolean>;
    /**
     * This distribution supports RTM software
     */
    supportsRtm?: pulumi.Input<boolean>;
    /**
     * This distribution supports the microsoft SQL server
     */
    supportsSqlServer?: pulumi.Input<boolean>;
    /**
     * This distribution supports UEFI setup (no,only,yes)
     */
    supportsUefi?: pulumi.Input<string>;
    /**
     * This template name
     */
    templateName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a MeInstallationTemplate resource.
 */
export interface MeInstallationTemplateArgs {
    /**
     * OVH template name yours will be based on, choose one among the list given by compatibleTemplates function
     */
    baseTemplateName: pulumi.Input<string>;
    customization?: pulumi.Input<inputs.MeInstallationTemplateCustomization>;
    /**
     * The default language of this template
     */
    defaultLanguage: pulumi.Input<string>;
    /**
     * Remove default partition schemes at creation
     */
    removeDefaultPartitionSchemes?: pulumi.Input<boolean>;
    /**
     * This template name
     */
    templateName: pulumi.Input<string>;
}
