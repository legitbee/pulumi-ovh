{
    "compilerOptions": {
        "outDir": "bin",
        "target": "es2016",
        "module": "commonjs",
        "moduleResolution": "node",
        "declaration": true,
        "sourceMap": true,
        "stripInternal": true,
        "experimentalDecorators": true,
        "noFallthroughCasesInSwitch": true,
        "forceConsistentCasingInFileNames": true,
        "strict": true
    },
    "files": [
        "cloudProject.ts",
        "cloudProjectContainerregistry.ts",
        "cloudProjectContainerregistryUser.ts",
        "cloudProjectKube.ts",
        "cloudProjectKubeNodepool.ts",
        "cloudProjectNetworkPrivate.ts",
        "cloudProjectNetworkPrivateSubnet.ts",
        "cloudProjectUser.ts",
        "config/index.ts",
        "config/vars.ts",
        "dbaasLogsInput.ts",
        "dbaasLogsOutputGraylogStream.ts",
        "dedicatedCephAcl.ts",
        "dedicatedServerInstallTask.ts",
        "dedicatedServerRebootTask.ts",
        "dedicatedServerUpdate.ts",
        "domainZone.ts",
        "domainZoneRecord.ts",
        "domainZoneRedirection.ts",
        "getCloudProjectCapabilitiesContainerregistry.ts",
        "getCloudProjectCapabilitiesContainerregistryFilter.ts",
        "getCloudProjectContainerregistries.ts",
        "getCloudProjectContainerregistry.ts",
        "getCloudProjectContainerregistryUsers.ts",
        "getCloudProjectKube.ts",
        "getCloudProjectRegion.ts",
        "getCloudProjectRegions.ts",
        "getDbaasLogsInputEngine.ts",
        "getDbaasLogsOutputGraylogStream.ts",
        "getDedicatedCeph.ts",
        "getDedicatedInstallationTemplates.ts",
        "getDedicatedServer.ts",
        "getDedicatedServerBoots.ts",
        "getDedicatedServers.ts",
        "getDomainZone.ts",
        "getIpService.ts",
        "getIploadbalancing.ts",
        "getIploadbalancingVrackNetwork.ts",
        "getIploadbalancingVrackNetworks.ts",
        "getMeIdentityUser.ts",
        "getMeIdentityUsers.ts",
        "getMeInstallationTemplate.ts",
        "getMeInstallationTemplates.ts",
        "getMeIpxeScript.ts",
        "getMeIpxeScripts.ts",
        "getMePaymentmeanBankaccount.ts",
        "getMePaymentmeanCreditcard.ts",
        "getMeSshKey.ts",
        "getMeSshKeys.ts",
        "getOrderCart.ts",
        "getOrderCartProduct.ts",
        "getOrderCartProductOptions.ts",
        "getOrderCartProductOptionsPlan.ts",
        "getOrderCartProductPlan.ts",
        "getVps.ts",
        "getVracks.ts",
        "index.ts",
        "ipReverseResource.ts",
        "ipService.ts",
        "iploadbalancing.ts",
        "iploadbalancingHttpFarm.ts",
        "iploadbalancingHttpFarmServer.ts",
        "iploadbalancingHttpFrontend.ts",
        "iploadbalancingHttpRoute.ts",
        "iploadbalancingHttpRouteRule.ts",
        "iploadbalancingRefresh.ts",
        "iploadbalancingTcpFarm.ts",
        "iploadbalancingTcpFarmServer.ts",
        "iploadbalancingTcpFrontend.ts",
        "iploadbalancingTcpRoute.ts",
        "iploadbalancingTcpRouteRule.ts",
        "iploadbalancingVrackNetwork.ts",
        "meIdentityUser.ts",
        "meInstallationTemplate.ts",
        "meInstallationTemplatePartitionScheme.ts",
        "meInstallationTemplatePartitionSchemeHardwareRaid.ts",
        "meInstallationTemplatePartitionSchemePartition.ts",
        "meIpxeScript.ts",
        "meSshKey.ts",
        "provider.ts",
        "types/index.ts",
        "types/input.ts",
        "types/output.ts",
        "utilities.ts",
        "vrack.ts",
        "vrackCloudproject.ts",
        "vrackDedicatedServer.ts",
        "vrackDedicatedServerInterface.ts",
        "vrackIp.ts",
        "vrackIploadbalancing.ts"
    ]
}
