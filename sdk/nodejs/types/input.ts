// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";

export interface CloudProjectContainerregistryPlan {
    code?: pulumi.Input<string>;
    createdAt?: pulumi.Input<string>;
    features?: pulumi.Input<pulumi.Input<inputs.CloudProjectContainerregistryPlanFeature>[]>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    registryLimits?: pulumi.Input<pulumi.Input<inputs.CloudProjectContainerregistryPlanRegistryLimit>[]>;
    updatedAt?: pulumi.Input<string>;
}

export interface CloudProjectContainerregistryPlanFeature {
    vulnerability?: pulumi.Input<boolean>;
}

export interface CloudProjectContainerregistryPlanRegistryLimit {
    imageStorage?: pulumi.Input<number>;
    parallelRequest?: pulumi.Input<number>;
}

export interface CloudProjectNetworkPrivateRegionsAttribute {
    openstackid?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    status: pulumi.Input<string>;
}

export interface CloudProjectNetworkPrivateRegionsStatus {
    region?: pulumi.Input<string>;
    status: pulumi.Input<string>;
}

export interface CloudProjectNetworkPrivateSubnetIpPool {
    dhcp?: pulumi.Input<boolean>;
    end?: pulumi.Input<string>;
    network?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    start?: pulumi.Input<string>;
}

export interface CloudProjectOrder {
    date?: pulumi.Input<string>;
    details?: pulumi.Input<pulumi.Input<inputs.CloudProjectOrderDetail>[]>;
    expirationDate?: pulumi.Input<string>;
    orderId?: pulumi.Input<number>;
}

export interface CloudProjectOrderDetail {
    description?: pulumi.Input<string>;
    domain?: pulumi.Input<string>;
    orderDetailId?: pulumi.Input<number>;
    quantity?: pulumi.Input<string>;
}

export interface CloudProjectPlan {
    catalogName?: pulumi.Input<string>;
    configurations?: pulumi.Input<pulumi.Input<inputs.CloudProjectPlanConfiguration>[]>;
    duration: pulumi.Input<string>;
    planCode: pulumi.Input<string>;
    pricingMode: pulumi.Input<string>;
}

export interface CloudProjectPlanConfiguration {
    label: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface CloudProjectPlanOption {
    catalogName?: pulumi.Input<string>;
    configurations?: pulumi.Input<pulumi.Input<inputs.CloudProjectPlanOptionConfiguration>[]>;
    duration: pulumi.Input<string>;
    planCode: pulumi.Input<string>;
    pricingMode: pulumi.Input<string>;
}

export interface CloudProjectPlanOptionConfiguration {
    label: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface CloudProjectUserRole {
    description?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    permissions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface DbaasLogsInputConfiguration {
    flowgger?: pulumi.Input<inputs.DbaasLogsInputConfigurationFlowgger>;
    logstash?: pulumi.Input<inputs.DbaasLogsInputConfigurationLogstash>;
}

export interface DbaasLogsInputConfigurationFlowgger {
    logFormat: pulumi.Input<string>;
    logFraming: pulumi.Input<string>;
}

export interface DbaasLogsInputConfigurationLogstash {
    filterSection?: pulumi.Input<string>;
    inputSection: pulumi.Input<string>;
    patternSection?: pulumi.Input<string>;
}

export interface DedicatedServerInstallTaskDetails {
    /**
     * @deprecated field is not used anymore
     */
    changeLog?: pulumi.Input<string>;
    customHostname?: pulumi.Input<string>;
    diskGroupId?: pulumi.Input<number>;
    installRtm?: pulumi.Input<boolean>;
    installSqlServer?: pulumi.Input<boolean>;
    language?: pulumi.Input<string>;
    noRaid?: pulumi.Input<boolean>;
    postInstallationScriptLink?: pulumi.Input<string>;
    postInstallationScriptReturn?: pulumi.Input<string>;
    resetHwRaid?: pulumi.Input<boolean>;
    softRaidDevices?: pulumi.Input<number>;
    sshKeyName?: pulumi.Input<string>;
    useDistribKernel?: pulumi.Input<boolean>;
    useSpla?: pulumi.Input<boolean>;
}

export interface DomainZoneOrder {
    date?: pulumi.Input<string>;
    details?: pulumi.Input<pulumi.Input<inputs.DomainZoneOrderDetail>[]>;
    expirationDate?: pulumi.Input<string>;
    orderId?: pulumi.Input<number>;
}

export interface DomainZoneOrderDetail {
    description?: pulumi.Input<string>;
    domain?: pulumi.Input<string>;
    orderDetailId?: pulumi.Input<number>;
    quantity?: pulumi.Input<string>;
}

export interface DomainZonePlan {
    catalogName?: pulumi.Input<string>;
    configurations?: pulumi.Input<pulumi.Input<inputs.DomainZonePlanConfiguration>[]>;
    duration: pulumi.Input<string>;
    planCode: pulumi.Input<string>;
    pricingMode: pulumi.Input<string>;
}

export interface DomainZonePlanConfiguration {
    label: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DomainZonePlanOption {
    catalogName?: pulumi.Input<string>;
    configurations?: pulumi.Input<pulumi.Input<inputs.DomainZonePlanOptionConfiguration>[]>;
    duration: pulumi.Input<string>;
    planCode: pulumi.Input<string>;
    pricingMode: pulumi.Input<string>;
}

export interface DomainZonePlanOptionConfiguration {
    label: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IpServiceOrder {
    date?: pulumi.Input<string>;
    details?: pulumi.Input<pulumi.Input<inputs.IpServiceOrderDetail>[]>;
    expirationDate?: pulumi.Input<string>;
    orderId?: pulumi.Input<number>;
}

export interface IpServiceOrderDetail {
    description?: pulumi.Input<string>;
    domain?: pulumi.Input<string>;
    orderDetailId?: pulumi.Input<number>;
    quantity?: pulumi.Input<string>;
}

export interface IpServicePlan {
    catalogName?: pulumi.Input<string>;
    configurations?: pulumi.Input<pulumi.Input<inputs.IpServicePlanConfiguration>[]>;
    duration: pulumi.Input<string>;
    planCode: pulumi.Input<string>;
    pricingMode: pulumi.Input<string>;
}

export interface IpServicePlanConfiguration {
    label: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IpServicePlanOption {
    catalogName?: pulumi.Input<string>;
    configurations?: pulumi.Input<pulumi.Input<inputs.IpServicePlanOptionConfiguration>[]>;
    duration: pulumi.Input<string>;
    planCode: pulumi.Input<string>;
    pricingMode: pulumi.Input<string>;
}

export interface IpServicePlanOptionConfiguration {
    label: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IpServiceRoutedTo {
    serviceName?: pulumi.Input<string>;
}

export interface IploadbalancingHttpFarmProbe {
    forceSsl?: pulumi.Input<boolean>;
    interval?: pulumi.Input<number>;
    match?: pulumi.Input<string>;
    method?: pulumi.Input<string>;
    negate?: pulumi.Input<boolean>;
    pattern?: pulumi.Input<string>;
    port?: pulumi.Input<number>;
    type: pulumi.Input<string>;
    url?: pulumi.Input<string>;
}

export interface IploadbalancingHttpRouteAction {
    status?: pulumi.Input<number>;
    target?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface IploadbalancingHttpRouteRule {
    field?: pulumi.Input<string>;
    match?: pulumi.Input<string>;
    negate?: pulumi.Input<boolean>;
    pattern?: pulumi.Input<string>;
    ruleId?: pulumi.Input<number>;
    subField?: pulumi.Input<string>;
}

export interface IploadbalancingOrder {
    date?: pulumi.Input<string>;
    details?: pulumi.Input<pulumi.Input<inputs.IploadbalancingOrderDetail>[]>;
    expirationDate?: pulumi.Input<string>;
    orderId?: pulumi.Input<number>;
}

export interface IploadbalancingOrderDetail {
    description?: pulumi.Input<string>;
    domain?: pulumi.Input<string>;
    orderDetailId?: pulumi.Input<number>;
    quantity?: pulumi.Input<string>;
}

export interface IploadbalancingOrderableZone {
    name?: pulumi.Input<string>;
    planCode?: pulumi.Input<string>;
}

export interface IploadbalancingPlan {
    catalogName?: pulumi.Input<string>;
    configurations?: pulumi.Input<pulumi.Input<inputs.IploadbalancingPlanConfiguration>[]>;
    duration: pulumi.Input<string>;
    planCode: pulumi.Input<string>;
    pricingMode: pulumi.Input<string>;
}

export interface IploadbalancingPlanConfiguration {
    label: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IploadbalancingPlanOption {
    catalogName?: pulumi.Input<string>;
    configurations?: pulumi.Input<pulumi.Input<inputs.IploadbalancingPlanOptionConfiguration>[]>;
    duration: pulumi.Input<string>;
    planCode: pulumi.Input<string>;
    pricingMode: pulumi.Input<string>;
}

export interface IploadbalancingPlanOptionConfiguration {
    label: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IploadbalancingTcpFarmProbe {
    forceSsl?: pulumi.Input<boolean>;
    interval?: pulumi.Input<number>;
    match?: pulumi.Input<string>;
    method?: pulumi.Input<string>;
    negate?: pulumi.Input<boolean>;
    pattern?: pulumi.Input<string>;
    port?: pulumi.Input<number>;
    type: pulumi.Input<string>;
    url?: pulumi.Input<string>;
}

export interface IploadbalancingTcpRouteAction {
    target?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface IploadbalancingTcpRouteRule {
    field?: pulumi.Input<string>;
    match?: pulumi.Input<string>;
    negate?: pulumi.Input<boolean>;
    pattern?: pulumi.Input<string>;
    ruleId?: pulumi.Input<number>;
    subField?: pulumi.Input<string>;
}

export interface MeInstallationTemplateCustomization {
    /**
     * @deprecated field is not used anymore
     */
    changeLog?: pulumi.Input<string>;
    customHostname?: pulumi.Input<string>;
    postInstallationScriptLink?: pulumi.Input<string>;
    postInstallationScriptReturn?: pulumi.Input<string>;
    /**
     * @deprecated field is not used anymore
     */
    rating?: pulumi.Input<number>;
    sshKeyName?: pulumi.Input<string>;
    useDistributionKernel?: pulumi.Input<boolean>;
}

export interface VrackOrder {
    date?: pulumi.Input<string>;
    details?: pulumi.Input<pulumi.Input<inputs.VrackOrderDetail>[]>;
    expirationDate?: pulumi.Input<string>;
    orderId?: pulumi.Input<number>;
}

export interface VrackOrderDetail {
    description?: pulumi.Input<string>;
    domain?: pulumi.Input<string>;
    orderDetailId?: pulumi.Input<number>;
    quantity?: pulumi.Input<string>;
}

export interface VrackPlan {
    catalogName?: pulumi.Input<string>;
    configurations?: pulumi.Input<pulumi.Input<inputs.VrackPlanConfiguration>[]>;
    duration: pulumi.Input<string>;
    planCode: pulumi.Input<string>;
    pricingMode: pulumi.Input<string>;
}

export interface VrackPlanConfiguration {
    label: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface VrackPlanOption {
    catalogName?: pulumi.Input<string>;
    configurations?: pulumi.Input<pulumi.Input<inputs.VrackPlanOptionConfiguration>[]>;
    duration: pulumi.Input<string>;
    planCode: pulumi.Input<string>;
    pricingMode: pulumi.Input<string>;
}

export interface VrackPlanOptionConfiguration {
    label: pulumi.Input<string>;
    value: pulumi.Input<string>;
}
