// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

export function getCloudProjectRegion(args: GetCloudProjectRegionArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudProjectRegionResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("ovh:index/getCloudProjectRegion:getCloudProjectRegion", {
        "name": args.name,
        "serviceName": args.serviceName,
    }, opts);
}

/**
 * A collection of arguments for invoking getCloudProjectRegion.
 */
export interface GetCloudProjectRegionArgs {
    name: string;
    serviceName: string;
}

/**
 * A collection of values returned by getCloudProjectRegion.
 */
export interface GetCloudProjectRegionResult {
    readonly continentCode: string;
    readonly datacenterLocation: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
    readonly serviceName: string;
    readonly services: outputs.GetCloudProjectRegionService[];
}

export function getCloudProjectRegionOutput(args: GetCloudProjectRegionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudProjectRegionResult> {
    return pulumi.output(args).apply(a => getCloudProjectRegion(a, opts))
}

/**
 * A collection of arguments for invoking getCloudProjectRegion.
 */
export interface GetCloudProjectRegionOutputArgs {
    name: pulumi.Input<string>;
    serviceName: pulumi.Input<string>;
}
