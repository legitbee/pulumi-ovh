// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getIploadbalancingVrackNetwork(args: GetIploadbalancingVrackNetworkArgs, opts?: pulumi.InvokeOptions): Promise<GetIploadbalancingVrackNetworkResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("ovh:index/getIploadbalancingVrackNetwork:getIploadbalancingVrackNetwork", {
        "serviceName": args.serviceName,
        "vrackNetworkId": args.vrackNetworkId,
    }, opts);
}

/**
 * A collection of arguments for invoking getIploadbalancingVrackNetwork.
 */
export interface GetIploadbalancingVrackNetworkArgs {
    serviceName: string;
    vrackNetworkId: number;
}

/**
 * A collection of values returned by getIploadbalancingVrackNetwork.
 */
export interface GetIploadbalancingVrackNetworkResult {
    readonly displayName: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly natIp: string;
    readonly serviceName: string;
    readonly subnet: string;
    readonly vlan: number;
    readonly vrackNetworkId: number;
}

export function getIploadbalancingVrackNetworkOutput(args: GetIploadbalancingVrackNetworkOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIploadbalancingVrackNetworkResult> {
    return pulumi.output(args).apply(a => getIploadbalancingVrackNetwork(a, opts))
}

/**
 * A collection of arguments for invoking getIploadbalancingVrackNetwork.
 */
export interface GetIploadbalancingVrackNetworkOutputArgs {
    serviceName: pulumi.Input<string>;
    vrackNetworkId: pulumi.Input<number>;
}
