// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

export class CloudProject extends pulumi.CustomResource {
    /**
     * Get an existing CloudProject resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CloudProjectState, opts?: pulumi.CustomResourceOptions): CloudProject {
        return new CloudProject(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'ovh:index/cloudProject:CloudProject';

    /**
     * Returns true if the given object is an instance of CloudProject.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CloudProject {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CloudProject.__pulumiType;
    }

    public /*out*/ readonly access!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string>;
    /**
     * Details about an Order
     */
    public /*out*/ readonly orders!: pulumi.Output<outputs.CloudProjectOrder[]>;
    /**
     * Ovh Subsidiary
     */
    public readonly ovhSubsidiary!: pulumi.Output<string>;
    /**
     * Ovh payment mode
     */
    public readonly paymentMean!: pulumi.Output<string>;
    /**
     * Product Plan to order
     */
    public readonly plan!: pulumi.Output<outputs.CloudProjectPlan>;
    /**
     * Product Plan to order
     */
    public readonly planOptions!: pulumi.Output<outputs.CloudProjectPlanOption[] | undefined>;
    public /*out*/ readonly projectId!: pulumi.Output<string>;
    public /*out*/ readonly projectName!: pulumi.Output<string>;
    public /*out*/ readonly status!: pulumi.Output<string>;

    /**
     * Create a CloudProject resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CloudProjectArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CloudProjectArgs | CloudProjectState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CloudProjectState | undefined;
            inputs["access"] = state ? state.access : undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["orders"] = state ? state.orders : undefined;
            inputs["ovhSubsidiary"] = state ? state.ovhSubsidiary : undefined;
            inputs["paymentMean"] = state ? state.paymentMean : undefined;
            inputs["plan"] = state ? state.plan : undefined;
            inputs["planOptions"] = state ? state.planOptions : undefined;
            inputs["projectId"] = state ? state.projectId : undefined;
            inputs["projectName"] = state ? state.projectName : undefined;
            inputs["status"] = state ? state.status : undefined;
        } else {
            const args = argsOrState as CloudProjectArgs | undefined;
            if ((!args || args.ovhSubsidiary === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ovhSubsidiary'");
            }
            if ((!args || args.paymentMean === undefined) && !opts.urn) {
                throw new Error("Missing required property 'paymentMean'");
            }
            if ((!args || args.plan === undefined) && !opts.urn) {
                throw new Error("Missing required property 'plan'");
            }
            inputs["description"] = args ? args.description : undefined;
            inputs["ovhSubsidiary"] = args ? args.ovhSubsidiary : undefined;
            inputs["paymentMean"] = args ? args.paymentMean : undefined;
            inputs["plan"] = args ? args.plan : undefined;
            inputs["planOptions"] = args ? args.planOptions : undefined;
            inputs["access"] = undefined /*out*/;
            inputs["orders"] = undefined /*out*/;
            inputs["projectId"] = undefined /*out*/;
            inputs["projectName"] = undefined /*out*/;
            inputs["status"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(CloudProject.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CloudProject resources.
 */
export interface CloudProjectState {
    access?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    /**
     * Details about an Order
     */
    orders?: pulumi.Input<pulumi.Input<inputs.CloudProjectOrder>[]>;
    /**
     * Ovh Subsidiary
     */
    ovhSubsidiary?: pulumi.Input<string>;
    /**
     * Ovh payment mode
     */
    paymentMean?: pulumi.Input<string>;
    /**
     * Product Plan to order
     */
    plan?: pulumi.Input<inputs.CloudProjectPlan>;
    /**
     * Product Plan to order
     */
    planOptions?: pulumi.Input<pulumi.Input<inputs.CloudProjectPlanOption>[]>;
    projectId?: pulumi.Input<string>;
    projectName?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CloudProject resource.
 */
export interface CloudProjectArgs {
    description?: pulumi.Input<string>;
    /**
     * Ovh Subsidiary
     */
    ovhSubsidiary: pulumi.Input<string>;
    /**
     * Ovh payment mode
     */
    paymentMean: pulumi.Input<string>;
    /**
     * Product Plan to order
     */
    plan: pulumi.Input<inputs.CloudProjectPlan>;
    /**
     * Product Plan to order
     */
    planOptions?: pulumi.Input<pulumi.Input<inputs.CloudProjectPlanOption>[]>;
}
